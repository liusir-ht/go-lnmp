Terminals unused in grammar

   T_CHARACTER
   T_BAD_CHARACTER
   "comment (T_COMMENT)"
   "doc comment (T_DOC_COMMENT)"
   "open tag (T_OPEN_TAG)"
   "open tag with echo (T_OPEN_TAG_WITH_ECHO)"
   "close tag (T_CLOSE_TAG)"
   "whitespace (T_WHITESPACE)"


État 229conflits: 1 décalage/réduction
État 672conflits: 2 décalage/réduction


Grammaire

    0 $accept: start "end of file"

    1 start: top_statement_list

    2 $@1: /* vide */

    3 top_statement_list: top_statement_list $@1 top_statement
    4                   | /* vide */

    5 namespace_name: "identifier (T_STRING)"
    6               | namespace_name "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"

    7 top_statement: statement
    8              | function_declaration_statement
    9              | class_declaration_statement
   10              | "__halt_compiler (T_HALT_COMPILER)" '(' ')' ';'
   11              | "namespace (T_NAMESPACE)" namespace_name ';'

   12 $@2: /* vide */

   13 top_statement: "namespace (T_NAMESPACE)" namespace_name '{' $@2 top_statement_list '}'

   14 $@3: /* vide */

   15 top_statement: "namespace (T_NAMESPACE)" '{' $@3 top_statement_list '}'
   16              | "use (T_USE)" use_declarations ';'
   17              | constant_declaration ';'

   18 use_declarations: use_declarations ',' use_declaration
   19                 | use_declaration

   20 use_declaration: namespace_name
   21                | namespace_name "as (T_AS)" "identifier (T_STRING)"
   22                | "\\ (T_NS_SEPARATOR)" namespace_name
   23                | "\\ (T_NS_SEPARATOR)" namespace_name "as (T_AS)" "identifier (T_STRING)"

   24 constant_declaration: constant_declaration ',' "identifier (T_STRING)" '=' static_scalar
   25                     | "const (T_CONST)" "identifier (T_STRING)" '=' static_scalar

   26 $@4: /* vide */

   27 inner_statement_list: inner_statement_list $@4 inner_statement
   28                     | /* vide */

   29 inner_statement: statement
   30                | function_declaration_statement
   31                | class_declaration_statement
   32                | "__halt_compiler (T_HALT_COMPILER)" '(' ')' ';'

   33 statement: unticked_statement
   34          | "identifier (T_STRING)" ':'

   35 unticked_statement: '{' inner_statement_list '}'

   36 $@5: /* vide */

   37 $@6: /* vide */

   38 unticked_statement: "if (T_IF)" parenthesis_expr $@5 statement $@6 elseif_list else_single

   39 $@7: /* vide */

   40 $@8: /* vide */

   41 unticked_statement: "if (T_IF)" parenthesis_expr ':' $@7 inner_statement_list $@8 new_elseif_list new_else_single "endif (T_ENDIF)" ';'

   42 $@9: /* vide */

   43 @10: /* vide */

   44 unticked_statement: "while (T_WHILE)" $@9 parenthesis_expr @10 while_statement

   45 $@11: /* vide */

   46 $@12: /* vide */

   47 unticked_statement: "do (T_DO)" $@11 statement "while (T_WHILE)" $@12 parenthesis_expr ';'

   48 $@13: /* vide */

   49 $@14: /* vide */

   50 $@15: /* vide */

   51 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@13 for_expr ';' $@14 for_expr ')' $@15 for_statement

   52 $@16: /* vide */

   53 unticked_statement: "switch (T_SWITCH)" parenthesis_expr $@16 switch_case_list
   54                   | "break (T_BREAK)" ';'
   55                   | "break (T_BREAK)" expr ';'
   56                   | "continue (T_CONTINUE)" ';'
   57                   | "continue (T_CONTINUE)" expr ';'
   58                   | "return (T_RETURN)" ';'
   59                   | "return (T_RETURN)" expr_without_variable ';'
   60                   | "return (T_RETURN)" variable ';'
   61                   | yield_expr ';'
   62                   | "global (T_GLOBAL)" global_var_list ';'
   63                   | "static (T_STATIC)" static_var_list ';'
   64                   | "echo (T_ECHO)" echo_expr_list ';'
   65                   | T_INLINE_HTML
   66                   | expr ';'
   67                   | "unset (T_UNSET)" '(' unset_variables ')' ';'

   68 $@17: /* vide */

   69 $@18: /* vide */

   70 unticked_statement: "foreach (T_FOREACH)" '(' variable "as (T_AS)" $@17 foreach_variable foreach_optional_arg ')' $@18 foreach_statement

   71 $@19: /* vide */

   72 $@20: /* vide */

   73 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable "as (T_AS)" $@19 foreach_variable foreach_optional_arg ')' $@20 foreach_statement

   74 $@21: /* vide */

   75 unticked_statement: "declare (T_DECLARE)" $@21 '(' declare_list ')' declare_statement
   76                   | ';'

   77 $@22: /* vide */

   78 $@23: /* vide */

   79 unticked_statement: "try (T_TRY)" $@22 '{' inner_statement_list '}' catch_statement $@23 finally_statement
   80                   | "throw (T_THROW)" expr ';'
   81                   | "goto (T_GOTO)" "identifier (T_STRING)" ';'

   82 catch_statement: /* vide */

   83 $@24: /* vide */

   84 $@25: /* vide */

   85 $@26: /* vide */

   86 $@27: /* vide */

   87 catch_statement: "catch (T_CATCH)" '(' $@24 fully_qualified_class_name $@25 "variable (T_VARIABLE)" ')' $@26 '{' inner_statement_list '}' $@27 additional_catches

   88 finally_statement: /* vide */

   89 $@28: /* vide */

   90 finally_statement: "finally (T_FINALLY)" $@28 '{' inner_statement_list '}'

   91 additional_catches: non_empty_additional_catches
   92                   | /* vide */

   93 non_empty_additional_catches: additional_catch
   94                             | non_empty_additional_catches additional_catch

   95 @29: /* vide */

   96 $@30: /* vide */

   97 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name @29 "variable (T_VARIABLE)" ')' $@30 '{' inner_statement_list '}'

   98 unset_variables: unset_variable
   99                | unset_variables ',' unset_variable

  100 unset_variable: variable

  101 function_declaration_statement: unticked_function_declaration_statement

  102 class_declaration_statement: unticked_class_declaration_statement

  103 is_reference: /* vide */
  104             | '&'

  105 $@31: /* vide */

  106 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" $@31 '(' parameter_list ')' '{' inner_statement_list '}'

  107 $@32: /* vide */

  108 unticked_class_declaration_statement: class_entry_type "identifier (T_STRING)" extends_from $@32 implements_list '{' class_statement_list '}'

  109 $@33: /* vide */

  110 unticked_class_declaration_statement: interface_entry "identifier (T_STRING)" $@33 interface_extends_list '{' class_statement_list '}'

  111 class_entry_type: "class (T_CLASS)"
  112                 | "abstract (T_ABSTRACT)" "class (T_CLASS)"
  113                 | "trait (T_TRAIT)"
  114                 | "final (T_FINAL)" "class (T_CLASS)"

  115 extends_from: /* vide */
  116             | "extends (T_EXTENDS)" fully_qualified_class_name

  117 interface_entry: "interface (T_INTERFACE)"

  118 interface_extends_list: /* vide */
  119                       | "extends (T_EXTENDS)" interface_list

  120 implements_list: /* vide */
  121                | "implements (T_IMPLEMENTS)" interface_list

  122 interface_list: fully_qualified_class_name
  123               | interface_list ',' fully_qualified_class_name

  124 foreach_optional_arg: /* vide */
  125                     | "=> (T_DOUBLE_ARROW)" foreach_variable

  126 foreach_variable: variable
  127                 | '&' variable

  128 $@34: /* vide */

  129 foreach_variable: "list (T_LIST)" '(' $@34 assignment_list ')'

  130 for_statement: statement
  131              | ':' inner_statement_list "endfor (T_ENDFOR)" ';'

  132 foreach_statement: statement
  133                  | ':' inner_statement_list "endforeach (T_ENDFOREACH)" ';'

  134 declare_statement: statement
  135                  | ':' inner_statement_list "enddeclare (T_ENDDECLARE)" ';'

  136 declare_list: "identifier (T_STRING)" '=' static_scalar
  137             | declare_list ',' "identifier (T_STRING)" '=' static_scalar

  138 switch_case_list: '{' case_list '}'
  139                 | '{' ';' case_list '}'
  140                 | ':' case_list "endswitch (T_ENDSWITCH)" ';'
  141                 | ':' ';' case_list "endswitch (T_ENDSWITCH)" ';'

  142 case_list: /* vide */

  143 $@35: /* vide */

  144 case_list: case_list "case (T_CASE)" expr case_separator $@35 inner_statement_list

  145 $@36: /* vide */

  146 case_list: case_list "default (T_DEFAULT)" case_separator $@36 inner_statement_list

  147 case_separator: ':'
  148               | ';'

  149 while_statement: statement
  150                | ':' inner_statement_list "endwhile (T_ENDWHILE)" ';'

  151 elseif_list: /* vide */

  152 $@37: /* vide */

  153 elseif_list: elseif_list "elseif (T_ELSEIF)" parenthesis_expr $@37 statement

  154 new_elseif_list: /* vide */

  155 $@38: /* vide */

  156 new_elseif_list: new_elseif_list "elseif (T_ELSEIF)" parenthesis_expr ':' $@38 inner_statement_list

  157 else_single: /* vide */
  158            | "else (T_ELSE)" statement

  159 new_else_single: /* vide */
  160                | "else (T_ELSE)" ':' inner_statement_list

  161 parameter_list: non_empty_parameter_list
  162               | /* vide */

  163 non_empty_parameter_list: optional_class_type "variable (T_VARIABLE)"
  164                         | optional_class_type '&' "variable (T_VARIABLE)"
  165                         | optional_class_type '&' "variable (T_VARIABLE)" '=' static_scalar
  166                         | optional_class_type "variable (T_VARIABLE)" '=' static_scalar
  167                         | non_empty_parameter_list ',' optional_class_type "variable (T_VARIABLE)"
  168                         | non_empty_parameter_list ',' optional_class_type '&' "variable (T_VARIABLE)"
  169                         | non_empty_parameter_list ',' optional_class_type '&' "variable (T_VARIABLE)" '=' static_scalar
  170                         | non_empty_parameter_list ',' optional_class_type "variable (T_VARIABLE)" '=' static_scalar

  171 optional_class_type: /* vide */
  172                    | "array (T_ARRAY)"
  173                    | "callable (T_CALLABLE)"
  174                    | fully_qualified_class_name

  175 function_call_parameter_list: '(' ')'
  176                             | '(' non_empty_function_call_parameter_list ')'
  177                             | '(' yield_expr ')'

  178 non_empty_function_call_parameter_list: expr_without_variable
  179                                       | variable
  180                                       | '&' w_variable
  181                                       | non_empty_function_call_parameter_list ',' expr_without_variable
  182                                       | non_empty_function_call_parameter_list ',' variable
  183                                       | non_empty_function_call_parameter_list ',' '&' w_variable

  184 global_var_list: global_var_list ',' global_var
  185                | global_var

  186 global_var: "variable (T_VARIABLE)"
  187           | '$' r_variable
  188           | '$' '{' expr '}'

  189 static_var_list: static_var_list ',' "variable (T_VARIABLE)"
  190                | static_var_list ',' "variable (T_VARIABLE)" '=' static_scalar
  191                | "variable (T_VARIABLE)"
  192                | "variable (T_VARIABLE)" '=' static_scalar

  193 class_statement_list: class_statement_list class_statement
  194                     | /* vide */

  195 $@39: /* vide */

  196 class_statement: variable_modifiers $@39 class_variable_declaration ';'
  197                | class_constant_declaration ';'
  198                | trait_use_statement

  199 $@40: /* vide */

  200 class_statement: method_modifiers function is_reference "identifier (T_STRING)" $@40 '(' parameter_list ')' method_body

  201 trait_use_statement: "use (T_USE)" trait_list trait_adaptations

  202 trait_list: fully_qualified_class_name
  203           | trait_list ',' fully_qualified_class_name

  204 trait_adaptations: ';'
  205                  | '{' trait_adaptation_list '}'

  206 trait_adaptation_list: /* vide */
  207                      | non_empty_trait_adaptation_list

  208 non_empty_trait_adaptation_list: trait_adaptation_statement
  209                                | non_empty_trait_adaptation_list trait_adaptation_statement

  210 trait_adaptation_statement: trait_precedence ';'
  211                           | trait_alias ';'

  212 trait_precedence: trait_method_reference_fully_qualified "insteadof (T_INSTEADOF)" trait_reference_list

  213 trait_reference_list: fully_qualified_class_name
  214                     | trait_reference_list ',' fully_qualified_class_name

  215 trait_method_reference: "identifier (T_STRING)"
  216                       | trait_method_reference_fully_qualified

  217 trait_method_reference_fully_qualified: fully_qualified_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)"

  218 trait_alias: trait_method_reference "as (T_AS)" trait_modifiers "identifier (T_STRING)"
  219            | trait_method_reference "as (T_AS)" member_modifier

  220 trait_modifiers: /* vide */
  221                | member_modifier

  222 method_body: ';'
  223            | '{' inner_statement_list '}'

  224 variable_modifiers: non_empty_member_modifiers
  225                   | "var (T_VAR)"

  226 method_modifiers: /* vide */
  227                 | non_empty_member_modifiers

  228 non_empty_member_modifiers: member_modifier
  229                           | non_empty_member_modifiers member_modifier

  230 member_modifier: "public (T_PUBLIC)"
  231                | "protected (T_PROTECTED)"
  232                | "private (T_PRIVATE)"
  233                | "static (T_STATIC)"
  234                | "abstract (T_ABSTRACT)"
  235                | "final (T_FINAL)"

  236 class_variable_declaration: class_variable_declaration ',' "variable (T_VARIABLE)"
  237                           | class_variable_declaration ',' "variable (T_VARIABLE)" '=' static_scalar
  238                           | "variable (T_VARIABLE)"
  239                           | "variable (T_VARIABLE)" '=' static_scalar

  240 class_constant_declaration: class_constant_declaration ',' "identifier (T_STRING)" '=' static_scalar
  241                           | "const (T_CONST)" "identifier (T_STRING)" '=' static_scalar

  242 echo_expr_list: echo_expr_list ',' expr
  243               | expr

  244 for_expr: /* vide */
  245         | non_empty_for_expr

  246 $@41: /* vide */

  247 non_empty_for_expr: non_empty_for_expr ',' $@41 expr
  248                   | expr

  249 chaining_method_or_property: chaining_method_or_property variable_property
  250                            | variable_property

  251 chaining_dereference: chaining_dereference '[' dim_offset ']'
  252                     | '[' dim_offset ']'

  253 $@42: /* vide */

  254 chaining_instance_call: chaining_dereference $@42 chaining_method_or_property
  255                       | chaining_dereference
  256                       | chaining_method_or_property

  257 instance_call: /* vide */

  258 $@43: /* vide */

  259 instance_call: $@43 chaining_instance_call

  260 $@44: /* vide */

  261 new_expr: "new (T_NEW)" class_name_reference $@44 ctor_arguments

  262 $@45: /* vide */

  263 expr_without_variable: "list (T_LIST)" '(' $@45 assignment_list ')' '=' expr
  264                      | variable '=' expr
  265                      | variable '=' '&' variable

  266 $@46: /* vide */

  267 expr_without_variable: variable '=' '&' "new (T_NEW)" class_name_reference $@46 ctor_arguments
  268                      | "clone (T_CLONE)" expr
  269                      | variable "+= (T_PLUS_EQUAL)" expr
  270                      | variable "-= (T_MINUS_EQUAL)" expr
  271                      | variable "*= (T_MUL_EQUAL)" expr
  272                      | variable "/= (T_DIV_EQUAL)" expr
  273                      | variable ".= (T_CONCAT_EQUAL)" expr
  274                      | variable "%= (T_MOD_EQUAL)" expr
  275                      | variable "&= (T_AND_EQUAL)" expr
  276                      | variable "|= (T_OR_EQUAL)" expr
  277                      | variable "^= (T_XOR_EQUAL)" expr
  278                      | variable "<<= (T_SL_EQUAL)" expr
  279                      | variable ">>= (T_SR_EQUAL)" expr
  280                      | rw_variable "++ (T_INC)"
  281                      | "++ (T_INC)" rw_variable
  282                      | rw_variable "-- (T_DEC)"
  283                      | "-- (T_DEC)" rw_variable

  284 $@47: /* vide */

  285 expr_without_variable: expr "|| (T_BOOLEAN_OR)" $@47 expr

  286 $@48: /* vide */

  287 expr_without_variable: expr "&& (T_BOOLEAN_AND)" $@48 expr

  288 $@49: /* vide */

  289 expr_without_variable: expr "or (T_LOGICAL_OR)" $@49 expr

  290 $@50: /* vide */

  291 expr_without_variable: expr "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr "xor (T_LOGICAL_XOR)" expr
  293                      | expr '|' expr
  294                      | expr '&' expr
  295                      | expr '^' expr
  296                      | expr '.' expr
  297                      | expr '+' expr
  298                      | expr '-' expr
  299                      | expr '*' expr
  300                      | expr '/' expr
  301                      | expr '%' expr
  302                      | expr "<< (T_SL)" expr
  303                      | expr ">> (T_SR)" expr
  304                      | '+' expr
  305                      | '-' expr
  306                      | '!' expr
  307                      | '~' expr
  308                      | expr "=== (T_IS_IDENTICAL)" expr
  309                      | expr "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr "== (T_IS_EQUAL)" expr
  311                      | expr "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr '<' expr
  313                      | expr "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr '>' expr
  315                      | expr ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr "instanceof (T_INSTANCEOF)" class_name_reference
  317                      | parenthesis_expr
  318                      | new_expr

  319 @51: /* vide */

  320 expr_without_variable: '(' new_expr ')' @51 instance_call

  321 $@52: /* vide */

  322 $@53: /* vide */

  323 expr_without_variable: expr '?' $@52 expr ':' $@53 expr

  324 $@54: /* vide */

  325 expr_without_variable: expr '?' ':' $@54 expr
  326                      | internal_functions_in_yacc
  327                      | "(int) (T_INT_CAST)" expr
  328                      | "(double) (T_DOUBLE_CAST)" expr
  329                      | "(string) (T_STRING_CAST)" expr
  330                      | "(array) (T_ARRAY_CAST)" expr
  331                      | "(object) (T_OBJECT_CAST)" expr
  332                      | "(bool) (T_BOOL_CAST)" expr
  333                      | "(unset) (T_UNSET_CAST)" expr
  334                      | "exit (T_EXIT)" exit_expr

  335 $@55: /* vide */

  336 expr_without_variable: '@' $@55 expr
  337                      | scalar
  338                      | combined_scalar_offset
  339                      | combined_scalar
  340                      | '`' backticks_expr '`'
  341                      | "print (T_PRINT)" expr
  342                      | "yield (T_YIELD)"

  343 @56: /* vide */

  344 expr_without_variable: function is_reference @56 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'

  345 @57: /* vide */

  346 expr_without_variable: "static (T_STATIC)" function is_reference @57 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'

  347 yield_expr: "yield (T_YIELD)" expr_without_variable
  348           | "yield (T_YIELD)" variable
  349           | "yield (T_YIELD)" expr "=> (T_DOUBLE_ARROW)" expr_without_variable
  350           | "yield (T_YIELD)" expr "=> (T_DOUBLE_ARROW)" variable

  351 combined_scalar_offset: combined_scalar '[' dim_offset ']'
  352                       | combined_scalar_offset '[' dim_offset ']'
  353                       | "quoted-string (T_CONSTANT_ENCAPSED_STRING)" '[' dim_offset ']'

  354 combined_scalar: "array (T_ARRAY)" '(' array_pair_list ')'
  355                | '[' array_pair_list ']'

  356 function: "function (T_FUNCTION)"

  357 lexical_vars: /* vide */
  358             | "use (T_USE)" '(' lexical_var_list ')'

  359 lexical_var_list: lexical_var_list ',' "variable (T_VARIABLE)"
  360                 | lexical_var_list ',' '&' "variable (T_VARIABLE)"
  361                 | "variable (T_VARIABLE)"
  362                 | '&' "variable (T_VARIABLE)"

  363 @58: /* vide */

  364 function_call: namespace_name @58 function_call_parameter_list

  365 @59: /* vide */

  366 function_call: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name @59 function_call_parameter_list

  367 @60: /* vide */

  368 function_call: "\\ (T_NS_SEPARATOR)" namespace_name @60 function_call_parameter_list

  369 @61: /* vide */

  370 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name @61 function_call_parameter_list

  371 $@62: /* vide */

  372 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects $@62 function_call_parameter_list

  373 $@63: /* vide */

  374 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name $@63 function_call_parameter_list

  375 $@64: /* vide */

  376 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects $@64 function_call_parameter_list

  377 $@65: /* vide */

  378 function_call: variable_without_objects $@65 function_call_parameter_list

  379 class_name: "static (T_STATIC)"
  380           | namespace_name
  381           | "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name
  382           | "\\ (T_NS_SEPARATOR)" namespace_name

  383 fully_qualified_class_name: namespace_name
  384                           | "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name
  385                           | "\\ (T_NS_SEPARATOR)" namespace_name

  386 class_name_reference: class_name
  387                     | dynamic_class_name_reference

  388 $@66: /* vide */

  389 $@67: /* vide */

  390 dynamic_class_name_reference: base_variable "-> (T_OBJECT_OPERATOR)" $@66 object_property $@67 dynamic_class_name_variable_properties
  391                             | base_variable

  392 dynamic_class_name_variable_properties: dynamic_class_name_variable_properties dynamic_class_name_variable_property
  393                                       | /* vide */

  394 dynamic_class_name_variable_property: "-> (T_OBJECT_OPERATOR)" object_property

  395 exit_expr: /* vide */
  396          | '(' ')'
  397          | parenthesis_expr

  398 backticks_expr: /* vide */
  399               | "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"
  400               | encaps_list

  401 ctor_arguments: /* vide */
  402               | function_call_parameter_list

  403 common_scalar: "integer number (T_LNUMBER)"
  404              | "floating-point number (T_DNUMBER)"
  405              | "quoted-string (T_CONSTANT_ENCAPSED_STRING)"
  406              | "__LINE__ (T_LINE)"
  407              | "__FILE__ (T_FILE)"
  408              | "__DIR__ (T_DIR)"
  409              | "__TRAIT__ (T_TRAIT_C)"
  410              | "__METHOD__ (T_METHOD_C)"
  411              | "__FUNCTION__ (T_FUNC_C)"
  412              | "__NAMESPACE__ (T_NS_C)"
  413              | "heredoc start (T_START_HEREDOC)" "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" "heredoc end (T_END_HEREDOC)"
  414              | "heredoc start (T_START_HEREDOC)" "heredoc end (T_END_HEREDOC)"

  415 static_scalar: common_scalar
  416              | static_class_name_scalar
  417              | namespace_name
  418              | "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name
  419              | "\\ (T_NS_SEPARATOR)" namespace_name
  420              | '+' static_scalar
  421              | '-' static_scalar
  422              | "array (T_ARRAY)" '(' static_array_pair_list ')'
  423              | '[' static_array_pair_list ']'
  424              | static_class_constant
  425              | "__CLASS__ (T_CLASS_C)"

  426 static_class_constant: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)"

  427 scalar: "variable name (T_STRING_VARNAME)"
  428       | class_name_scalar
  429       | class_constant
  430       | namespace_name
  431       | "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name
  432       | "\\ (T_NS_SEPARATOR)" namespace_name
  433       | common_scalar
  434       | '"' encaps_list '"'
  435       | "heredoc start (T_START_HEREDOC)" encaps_list "heredoc end (T_END_HEREDOC)"
  436       | "__CLASS__ (T_CLASS_C)"

  437 static_array_pair_list: /* vide */
  438                       | non_empty_static_array_pair_list possible_comma

  439 possible_comma: /* vide */
  440               | ','

  441 non_empty_static_array_pair_list: non_empty_static_array_pair_list ',' static_scalar "=> (T_DOUBLE_ARROW)" static_scalar
  442                                 | non_empty_static_array_pair_list ',' static_scalar
  443                                 | static_scalar "=> (T_DOUBLE_ARROW)" static_scalar
  444                                 | static_scalar

  445 expr: r_variable
  446     | expr_without_variable

  447 parenthesis_expr: '(' expr ')'
  448                 | '(' yield_expr ')'

  449 r_variable: variable

  450 w_variable: variable

  451 rw_variable: variable

  452 $@68: /* vide */

  453 $@69: /* vide */

  454 variable: base_variable_with_function_calls "-> (T_OBJECT_OPERATOR)" $@68 object_property $@69 method_or_not variable_properties
  455         | base_variable_with_function_calls

  456 variable_properties: variable_properties variable_property
  457                    | /* vide */

  458 $@70: /* vide */

  459 variable_property: "-> (T_OBJECT_OPERATOR)" object_property $@70 method_or_not

  460 array_method_dereference: array_method_dereference '[' dim_offset ']'
  461                         | method '[' dim_offset ']'

  462 @71: /* vide */

  463 method: @71 function_call_parameter_list

  464 method_or_not: method
  465              | array_method_dereference
  466              | /* vide */

  467 variable_without_objects: reference_variable
  468                         | simple_indirect_reference reference_variable

  469 static_member: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects
  470              | variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects

  471 variable_class_name: reference_variable

  472 array_function_dereference: array_function_dereference '[' dim_offset ']'

  473 $@72: /* vide */

  474 array_function_dereference: function_call $@72 '[' dim_offset ']'

  475 base_variable_with_function_calls: base_variable
  476                                  | array_function_dereference
  477                                  | function_call

  478 base_variable: reference_variable
  479              | simple_indirect_reference reference_variable
  480              | static_member

  481 reference_variable: reference_variable '[' dim_offset ']'
  482                   | reference_variable '{' expr '}'
  483                   | compound_variable

  484 compound_variable: "variable (T_VARIABLE)"
  485                  | '$' '{' expr '}'

  486 dim_offset: /* vide */
  487           | expr

  488 object_property: object_dim_list

  489 $@73: /* vide */

  490 object_property: variable_without_objects $@73

  491 object_dim_list: object_dim_list '[' dim_offset ']'
  492                | object_dim_list '{' expr '}'
  493                | variable_name

  494 variable_name: "identifier (T_STRING)"
  495              | '{' expr '}'

  496 simple_indirect_reference: '$'
  497                          | simple_indirect_reference '$'

  498 assignment_list: assignment_list ',' assignment_list_element
  499                | assignment_list_element

  500 assignment_list_element: variable

  501 $@74: /* vide */

  502 assignment_list_element: "list (T_LIST)" '(' $@74 assignment_list ')'
  503                        | /* vide */

  504 array_pair_list: /* vide */
  505                | non_empty_array_pair_list possible_comma

  506 non_empty_array_pair_list: non_empty_array_pair_list ',' expr "=> (T_DOUBLE_ARROW)" expr
  507                          | non_empty_array_pair_list ',' expr
  508                          | expr "=> (T_DOUBLE_ARROW)" expr
  509                          | expr
  510                          | non_empty_array_pair_list ',' expr "=> (T_DOUBLE_ARROW)" '&' w_variable
  511                          | non_empty_array_pair_list ',' '&' w_variable
  512                          | expr "=> (T_DOUBLE_ARROW)" '&' w_variable
  513                          | '&' w_variable

  514 encaps_list: encaps_list encaps_var
  515            | encaps_list "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"
  516            | encaps_var
  517            | "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" encaps_var

  518 encaps_var: "variable (T_VARIABLE)"

  519 $@75: /* vide */

  520 encaps_var: "variable (T_VARIABLE)" '[' $@75 encaps_var_offset ']'
  521           | "variable (T_VARIABLE)" "-> (T_OBJECT_OPERATOR)" "identifier (T_STRING)"
  522           | "${ (T_DOLLAR_OPEN_CURLY_BRACES)" expr '}'
  523           | "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" '[' expr ']' '}'
  524           | "{$ (T_CURLY_OPEN)" variable '}'

  525 encaps_var_offset: "identifier (T_STRING)"
  526                  | "number (T_NUM_STRING)"
  527                  | "variable (T_VARIABLE)"

  528 internal_functions_in_yacc: "isset (T_ISSET)" '(' isset_variables ')'
  529                           | "empty (T_EMPTY)" '(' variable ')'
  530                           | "empty (T_EMPTY)" '(' expr_without_variable ')'
  531                           | "include (T_INCLUDE)" expr
  532                           | "include_once (T_INCLUDE_ONCE)" expr
  533                           | "eval (T_EVAL)" '(' expr ')'
  534                           | "require (T_REQUIRE)" expr
  535                           | "require_once (T_REQUIRE_ONCE)" expr

  536 isset_variables: isset_variable

  537 $@76: /* vide */

  538 isset_variables: isset_variables ',' $@76 isset_variable

  539 isset_variable: variable
  540               | expr_without_variable

  541 class_constant: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)"
  542               | variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)"

  543 static_class_name_scalar: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "class (T_CLASS)"

  544 class_name_scalar: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "class (T_CLASS)"


Terminaux, suivis des règles où ils apparaissent

"end of file" (0) 0
'!' (33) 306
'"' (34) 434
'$' (36) 187 188 485 496 497
'%' (37) 301
'&' (38) 104 127 164 165 168 169 180 183 265 267 294 360 362 510 511
    512 513
'(' (40) 10 32 51 67 70 73 75 87 97 106 129 175 176 177 200 263 320
    344 346 354 358 396 422 447 448 502 528 529 530 533
')' (41) 10 32 51 67 70 73 75 87 97 106 129 175 176 177 200 263 320
    344 346 354 358 396 422 447 448 502 528 529 530 533
'*' (42) 299
'+' (43) 297 304 420
',' (44) 18 24 99 123 137 167 168 169 170 181 182 183 184 189 190 203
    214 236 237 240 242 247 359 360 440 441 442 498 506 507 510 511
    538
'-' (45) 298 305 421
'.' (46) 296
'/' (47) 300
':' (58) 34 41 131 133 135 140 141 147 150 156 160 323 325
';' (59) 10 11 16 17 32 41 47 51 54 55 56 57 58 59 60 61 62 63 64 66
    67 76 80 81 131 133 135 139 140 141 148 150 196 197 204 210 211
    222
'<' (60) 312
'=' (61) 24 25 136 137 165 166 169 170 190 192 237 239 240 241 263
    264 265 267
'>' (62) 314
'?' (63) 323 325
'@' (64) 336
'[' (91) 251 252 351 352 353 355 423 460 461 472 474 481 491 520 523
']' (93) 251 252 351 352 353 355 423 460 461 472 474 481 491 520 523
'^' (94) 295
'`' (96) 340
'{' (123) 13 15 35 79 87 90 97 106 108 110 138 139 188 205 223 344
    346 482 485 492 495
'|' (124) 293
'}' (125) 13 15 35 79 87 90 97 106 108 110 138 139 188 205 223 344
    346 482 485 492 495 522 523 524
'~' (126) 307
error (256)
"require_once (T_REQUIRE_ONCE)" (258) 535
"require (T_REQUIRE)" (259) 534
"eval (T_EVAL)" (260) 533
"include_once (T_INCLUDE_ONCE)" (261) 532
"include (T_INCLUDE)" (262) 531
"or (T_LOGICAL_OR)" (263) 289
"xor (T_LOGICAL_XOR)" (264) 292
"and (T_LOGICAL_AND)" (265) 291
"print (T_PRINT)" (266) 341
"yield (T_YIELD)" (267) 342 347 348 349 350
">>= (T_SR_EQUAL)" (268) 279
"<<= (T_SL_EQUAL)" (269) 278
"^= (T_XOR_EQUAL)" (270) 277
"|= (T_OR_EQUAL)" (271) 276
"&= (T_AND_EQUAL)" (272) 275
"%= (T_MOD_EQUAL)" (273) 274
".= (T_CONCAT_EQUAL)" (274) 273
"/= (T_DIV_EQUAL)" (275) 272
"*= (T_MUL_EQUAL)" (276) 271
"-= (T_MINUS_EQUAL)" (277) 270
"+= (T_PLUS_EQUAL)" (278) 269
"|| (T_BOOLEAN_OR)" (279) 285
"&& (T_BOOLEAN_AND)" (280) 287
"!== (T_IS_NOT_IDENTICAL)" (281) 309
"=== (T_IS_IDENTICAL)" (282) 308
"!= (T_IS_NOT_EQUAL)" (283) 311
"== (T_IS_EQUAL)" (284) 310
">= (T_IS_GREATER_OR_EQUAL)" (285) 315
"<= (T_IS_SMALLER_OR_EQUAL)" (286) 313
">> (T_SR)" (287) 303
"<< (T_SL)" (288) 302
"instanceof (T_INSTANCEOF)" (289) 316
"(unset) (T_UNSET_CAST)" (290) 333
"(bool) (T_BOOL_CAST)" (291) 332
"(object) (T_OBJECT_CAST)" (292) 331
"(array) (T_ARRAY_CAST)" (293) 330
"(string) (T_STRING_CAST)" (294) 329
"(double) (T_DOUBLE_CAST)" (295) 328
"(int) (T_INT_CAST)" (296) 327
"-- (T_DEC)" (297) 282 283
"++ (T_INC)" (298) 280 281
"clone (T_CLONE)" (299) 268
"new (T_NEW)" (300) 261 267
"exit (T_EXIT)" (301) 334
"if (T_IF)" (302) 38 41
"elseif (T_ELSEIF)" (303) 153 156
"else (T_ELSE)" (304) 158 160
"endif (T_ENDIF)" (305) 41
"integer number (T_LNUMBER)" (306) 403
"floating-point number (T_DNUMBER)" (307) 404
"identifier (T_STRING)" (308) 5 6 21 23 24 25 34 81 106 108 110 136
    137 200 215 217 218 240 241 426 494 521 525 541 542
"variable name (T_STRING_VARNAME)" (309) 427 523
"variable (T_VARIABLE)" (310) 87 97 163 164 165 166 167 168 169 170
    186 189 190 191 192 236 237 238 239 359 360 361 362 484 518 520
    521 527
"number (T_NUM_STRING)" (311) 526
T_INLINE_HTML (312) 65
T_CHARACTER (313)
T_BAD_CHARACTER (314)
"quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" (315) 399
    413 515 517
"quoted-string (T_CONSTANT_ENCAPSED_STRING)" (316) 353 405
"echo (T_ECHO)" (317) 64
"do (T_DO)" (318) 47
"while (T_WHILE)" (319) 44 47
"endwhile (T_ENDWHILE)" (320) 150
"for (T_FOR)" (321) 51
"endfor (T_ENDFOR)" (322) 131
"foreach (T_FOREACH)" (323) 70 73
"endforeach (T_ENDFOREACH)" (324) 133
"declare (T_DECLARE)" (325) 75
"enddeclare (T_ENDDECLARE)" (326) 135
"as (T_AS)" (327) 21 23 70 73 218 219
"switch (T_SWITCH)" (328) 53
"endswitch (T_ENDSWITCH)" (329) 140 141
"case (T_CASE)" (330) 144
"default (T_DEFAULT)" (331) 146
"break (T_BREAK)" (332) 54 55
"continue (T_CONTINUE)" (333) 56 57
"goto (T_GOTO)" (334) 81
"function (T_FUNCTION)" (335) 356
"const (T_CONST)" (336) 25 241
"return (T_RETURN)" (337) 58 59 60
"try (T_TRY)" (338) 79
"catch (T_CATCH)" (339) 87 97
"finally (T_FINALLY)" (340) 90
"throw (T_THROW)" (341) 80
"use (T_USE)" (342) 16 201 358
"insteadof (T_INSTEADOF)" (343) 212
"global (T_GLOBAL)" (344) 62
"public (T_PUBLIC)" (345) 230
"protected (T_PROTECTED)" (346) 231
"private (T_PRIVATE)" (347) 232
"final (T_FINAL)" (348) 114 235
"abstract (T_ABSTRACT)" (349) 112 234
"static (T_STATIC)" (350) 63 233 346 379
"var (T_VAR)" (351) 225
"unset (T_UNSET)" (352) 67
"isset (T_ISSET)" (353) 528
"empty (T_EMPTY)" (354) 529 530
"__halt_compiler (T_HALT_COMPILER)" (355) 10 32
"class (T_CLASS)" (356) 111 112 114 543 544
"trait (T_TRAIT)" (357) 113
"interface (T_INTERFACE)" (358) 117
"extends (T_EXTENDS)" (359) 116 119
"implements (T_IMPLEMENTS)" (360) 121
"-> (T_OBJECT_OPERATOR)" (361) 390 394 454 459 521
"=> (T_DOUBLE_ARROW)" (362) 125 349 350 441 443 506 508 510 512
"list (T_LIST)" (363) 129 263 502
"array (T_ARRAY)" (364) 172 354 422
"callable (T_CALLABLE)" (365) 173
"__CLASS__ (T_CLASS_C)" (366) 425 436
"__TRAIT__ (T_TRAIT_C)" (367) 409
"__METHOD__ (T_METHOD_C)" (368) 410
"__FUNCTION__ (T_FUNC_C)" (369) 411
"__LINE__ (T_LINE)" (370) 406
"__FILE__ (T_FILE)" (371) 407
"comment (T_COMMENT)" (372)
"doc comment (T_DOC_COMMENT)" (373)
"open tag (T_OPEN_TAG)" (374)
"open tag with echo (T_OPEN_TAG_WITH_ECHO)" (375)
"close tag (T_CLOSE_TAG)" (376)
"whitespace (T_WHITESPACE)" (377)
"heredoc start (T_START_HEREDOC)" (378) 413 414 435
"heredoc end (T_END_HEREDOC)" (379) 413 414 435
"${ (T_DOLLAR_OPEN_CURLY_BRACES)" (380) 522 523
"{$ (T_CURLY_OPEN)" (381) 524
":: (T_PAAMAYIM_NEKUDOTAYIM)" (382) 217 370 372 374 376 426 469 470
    541 542 543 544
"namespace (T_NAMESPACE)" (383) 11 13 15 366 381 384 418 431
"__NAMESPACE__ (T_NS_C)" (384) 412
"__DIR__ (T_DIR)" (385) 408
"\\ (T_NS_SEPARATOR)" (386) 6 22 23 366 368 381 382 384 385 418 419
    431 432


Non-terminaux, suivis des règles où ils apparaissent

$accept (160)
    à gauche: 0
start (161)
    à gauche: 1, à droite: 0
top_statement_list (162)
    à gauche: 3 4, à droite: 1 3 13 15
$@1 (163)
    à gauche: 2, à droite: 3
namespace_name (164)
    à gauche: 5 6, à droite: 6 11 13 20 21 22 23 364 366 368 380
    381 382 383 384 385 417 418 419 430 431 432
top_statement (165)
    à gauche: 7 8 9 10 11 13 15 16 17, à droite: 3
$@2 (166)
    à gauche: 12, à droite: 13
$@3 (167)
    à gauche: 14, à droite: 15
use_declarations (168)
    à gauche: 18 19, à droite: 16 18
use_declaration (169)
    à gauche: 20 21 22 23, à droite: 18 19
constant_declaration (170)
    à gauche: 24 25, à droite: 17 24
inner_statement_list (171)
    à gauche: 27 28, à droite: 27 35 41 79 87 90 97 106 131 133 135
    144 146 150 156 160 223 344 346
$@4 (172)
    à gauche: 26, à droite: 27
inner_statement (173)
    à gauche: 29 30 31 32, à droite: 27
statement (174)
    à gauche: 33 34, à droite: 7 29 38 47 130 132 134 149 153 158
unticked_statement (175)
    à gauche: 35 38 41 44 47 51 53 54 55 56 57 58 59 60 61 62 63 64
    65 66 67 70 73 75 76 79 80 81, à droite: 33
$@5 (176)
    à gauche: 36, à droite: 38
$@6 (177)
    à gauche: 37, à droite: 38
$@7 (178)
    à gauche: 39, à droite: 41
$@8 (179)
    à gauche: 40, à droite: 41
$@9 (180)
    à gauche: 42, à droite: 44
@10 (181)
    à gauche: 43, à droite: 44
$@11 (182)
    à gauche: 45, à droite: 47
$@12 (183)
    à gauche: 46, à droite: 47
$@13 (184)
    à gauche: 48, à droite: 51
$@14 (185)
    à gauche: 49, à droite: 51
$@15 (186)
    à gauche: 50, à droite: 51
$@16 (187)
    à gauche: 52, à droite: 53
$@17 (188)
    à gauche: 68, à droite: 70
$@18 (189)
    à gauche: 69, à droite: 70
$@19 (190)
    à gauche: 71, à droite: 73
$@20 (191)
    à gauche: 72, à droite: 73
$@21 (192)
    à gauche: 74, à droite: 75
$@22 (193)
    à gauche: 77, à droite: 79
$@23 (194)
    à gauche: 78, à droite: 79
catch_statement (195)
    à gauche: 82 87, à droite: 79
$@24 (196)
    à gauche: 83, à droite: 87
$@25 (197)
    à gauche: 84, à droite: 87
$@26 (198)
    à gauche: 85, à droite: 87
$@27 (199)
    à gauche: 86, à droite: 87
finally_statement (200)
    à gauche: 88 90, à droite: 79
$@28 (201)
    à gauche: 89, à droite: 90
additional_catches (202)
    à gauche: 91 92, à droite: 87
non_empty_additional_catches (203)
    à gauche: 93 94, à droite: 91 94
additional_catch (204)
    à gauche: 97, à droite: 93 94
@29 (205)
    à gauche: 95, à droite: 97
$@30 (206)
    à gauche: 96, à droite: 97
unset_variables (207)
    à gauche: 98 99, à droite: 67 99
unset_variable (208)
    à gauche: 100, à droite: 98 99
function_declaration_statement (209)
    à gauche: 101, à droite: 8 30
class_declaration_statement (210)
    à gauche: 102, à droite: 9 31
is_reference (211)
    à gauche: 103 104, à droite: 106 200 344 346
unticked_function_declaration_statement (212)
    à gauche: 106, à droite: 101
$@31 (213)
    à gauche: 105, à droite: 106
unticked_class_declaration_statement (214)
    à gauche: 108 110, à droite: 102
$@32 (215)
    à gauche: 107, à droite: 108
$@33 (216)
    à gauche: 109, à droite: 110
class_entry_type (217)
    à gauche: 111 112 113 114, à droite: 108
extends_from (218)
    à gauche: 115 116, à droite: 108
interface_entry (219)
    à gauche: 117, à droite: 110
interface_extends_list (220)
    à gauche: 118 119, à droite: 110
implements_list (221)
    à gauche: 120 121, à droite: 108
interface_list (222)
    à gauche: 122 123, à droite: 119 121 123
foreach_optional_arg (223)
    à gauche: 124 125, à droite: 70 73
foreach_variable (224)
    à gauche: 126 127 129, à droite: 70 73 125
$@34 (225)
    à gauche: 128, à droite: 129
for_statement (226)
    à gauche: 130 131, à droite: 51
foreach_statement (227)
    à gauche: 132 133, à droite: 70 73
declare_statement (228)
    à gauche: 134 135, à droite: 75
declare_list (229)
    à gauche: 136 137, à droite: 75 137
switch_case_list (230)
    à gauche: 138 139 140 141, à droite: 53
case_list (231)
    à gauche: 142 144 146, à droite: 138 139 140 141 144 146
$@35 (232)
    à gauche: 143, à droite: 144
$@36 (233)
    à gauche: 145, à droite: 146
case_separator (234)
    à gauche: 147 148, à droite: 144 146
while_statement (235)
    à gauche: 149 150, à droite: 44
elseif_list (236)
    à gauche: 151 153, à droite: 38 153
$@37 (237)
    à gauche: 152, à droite: 153
new_elseif_list (238)
    à gauche: 154 156, à droite: 41 156
$@38 (239)
    à gauche: 155, à droite: 156
else_single (240)
    à gauche: 157 158, à droite: 38
new_else_single (241)
    à gauche: 159 160, à droite: 41
parameter_list (242)
    à gauche: 161 162, à droite: 106 200 344 346
non_empty_parameter_list (243)
    à gauche: 163 164 165 166 167 168 169 170, à droite: 161 167
    168 169 170
optional_class_type (244)
    à gauche: 171 172 173 174, à droite: 163 164 165 166 167 168
    169 170
function_call_parameter_list (245)
    à gauche: 175 176 177, à droite: 364 366 368 370 372 374 376
    378 402 463
non_empty_function_call_parameter_list (246)
    à gauche: 178 179 180 181 182 183, à droite: 176 181 182 183
global_var_list (247)
    à gauche: 184 185, à droite: 62 184
global_var (248)
    à gauche: 186 187 188, à droite: 184 185
static_var_list (249)
    à gauche: 189 190 191 192, à droite: 63 189 190
class_statement_list (250)
    à gauche: 193 194, à droite: 108 110 193
class_statement (251)
    à gauche: 196 197 198 200, à droite: 193
$@39 (252)
    à gauche: 195, à droite: 196
$@40 (253)
    à gauche: 199, à droite: 200
trait_use_statement (254)
    à gauche: 201, à droite: 198
trait_list (255)
    à gauche: 202 203, à droite: 201 203
trait_adaptations (256)
    à gauche: 204 205, à droite: 201
trait_adaptation_list (257)
    à gauche: 206 207, à droite: 205
non_empty_trait_adaptation_list (258)
    à gauche: 208 209, à droite: 207 209
trait_adaptation_statement (259)
    à gauche: 210 211, à droite: 208 209
trait_precedence (260)
    à gauche: 212, à droite: 210
trait_reference_list (261)
    à gauche: 213 214, à droite: 212 214
trait_method_reference (262)
    à gauche: 215 216, à droite: 218 219
trait_method_reference_fully_qualified (263)
    à gauche: 217, à droite: 212 216
trait_alias (264)
    à gauche: 218 219, à droite: 211
trait_modifiers (265)
    à gauche: 220 221, à droite: 218
method_body (266)
    à gauche: 222 223, à droite: 200
variable_modifiers (267)
    à gauche: 224 225, à droite: 196
method_modifiers (268)
    à gauche: 226 227, à droite: 200
non_empty_member_modifiers (269)
    à gauche: 228 229, à droite: 224 227 229
member_modifier (270)
    à gauche: 230 231 232 233 234 235, à droite: 219 221 228 229
class_variable_declaration (271)
    à gauche: 236 237 238 239, à droite: 196 236 237
class_constant_declaration (272)
    à gauche: 240 241, à droite: 197 240
echo_expr_list (273)
    à gauche: 242 243, à droite: 64 242
for_expr (274)
    à gauche: 244 245, à droite: 51
non_empty_for_expr (275)
    à gauche: 247 248, à droite: 245 247
$@41 (276)
    à gauche: 246, à droite: 247
chaining_method_or_property (277)
    à gauche: 249 250, à droite: 249 254 256
chaining_dereference (278)
    à gauche: 251 252, à droite: 251 254 255
chaining_instance_call (279)
    à gauche: 254 255 256, à droite: 259
$@42 (280)
    à gauche: 253, à droite: 254
instance_call (281)
    à gauche: 257 259, à droite: 320
$@43 (282)
    à gauche: 258, à droite: 259
new_expr (283)
    à gauche: 261, à droite: 318 320
$@44 (284)
    à gauche: 260, à droite: 261
expr_without_variable (285)
    à gauche: 263 264 265 267 268 269 270 271 272 273 274 275 276
    277 278 279 280 281 282 283 285 287 289 291 292 293 294 295 296
    297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312
    313 314 315 316 317 318 320 323 325 326 327 328 329 330 331 332
    333 334 336 337 338 339 340 341 342 344 346, à droite: 59 73 178
    181 347 349 446 530 540
$@45 (286)
    à gauche: 262, à droite: 263
$@46 (287)
    à gauche: 266, à droite: 267
$@47 (288)
    à gauche: 284, à droite: 285
$@48 (289)
    à gauche: 286, à droite: 287
$@49 (290)
    à gauche: 288, à droite: 289
$@50 (291)
    à gauche: 290, à droite: 291
@51 (292)
    à gauche: 319, à droite: 320
$@52 (293)
    à gauche: 321, à droite: 323
$@53 (294)
    à gauche: 322, à droite: 323
$@54 (295)
    à gauche: 324, à droite: 325
$@55 (296)
    à gauche: 335, à droite: 336
@56 (297)
    à gauche: 343, à droite: 344
@57 (298)
    à gauche: 345, à droite: 346
yield_expr (299)
    à gauche: 347 348 349 350, à droite: 61 177 448
combined_scalar_offset (300)
    à gauche: 351 352 353, à droite: 338 352
combined_scalar (301)
    à gauche: 354 355, à droite: 339 351
function (302)
    à gauche: 356, à droite: 106 200 344 346
lexical_vars (303)
    à gauche: 357 358, à droite: 344 346
lexical_var_list (304)
    à gauche: 359 360 361 362, à droite: 358 359 360
function_call (305)
    à gauche: 364 366 368 370 372 374 376 378, à droite: 474 477
@58 (306)
    à gauche: 363, à droite: 364
@59 (307)
    à gauche: 365, à droite: 366
@60 (308)
    à gauche: 367, à droite: 368
@61 (309)
    à gauche: 369, à droite: 370
$@62 (310)
    à gauche: 371, à droite: 372
$@63 (311)
    à gauche: 373, à droite: 374
$@64 (312)
    à gauche: 375, à droite: 376
$@65 (313)
    à gauche: 377, à droite: 378
class_name (314)
    à gauche: 379 380 381 382, à droite: 370 372 386 426 469 541
    543 544
fully_qualified_class_name (315)
    à gauche: 383 384 385, à droite: 87 97 116 122 123 174 202 203
    213 214 217
class_name_reference (316)
    à gauche: 386 387, à droite: 261 267 316
dynamic_class_name_reference (317)
    à gauche: 390 391, à droite: 387
$@66 (318)
    à gauche: 388, à droite: 390
$@67 (319)
    à gauche: 389, à droite: 390
dynamic_class_name_variable_properties (320)
    à gauche: 392 393, à droite: 390 392
dynamic_class_name_variable_property (321)
    à gauche: 394, à droite: 392
exit_expr (322)
    à gauche: 395 396 397, à droite: 334
backticks_expr (323)
    à gauche: 398 399 400, à droite: 340
ctor_arguments (324)
    à gauche: 401 402, à droite: 261 267
common_scalar (325)
    à gauche: 403 404 405 406 407 408 409 410 411 412 413 414, à droite:
    415 433
static_scalar (326)
    à gauche: 415 416 417 418 419 420 421 422 423 424 425, à droite:
    24 25 136 137 165 166 169 170 190 192 237 239 240 241 420 421 441
    442 443 444
static_class_constant (327)
    à gauche: 426, à droite: 424
scalar (328)
    à gauche: 427 428 429 430 431 432 433 434 435 436, à droite:
    337
static_array_pair_list (329)
    à gauche: 437 438, à droite: 422 423
possible_comma (330)
    à gauche: 439 440, à droite: 438 505
non_empty_static_array_pair_list (331)
    à gauche: 441 442 443 444, à droite: 438 441 442
expr (332)
    à gauche: 445 446, à droite: 55 57 66 80 144 188 242 243 247
    248 263 264 268 269 270 271 272 273 274 275 276 277 278 279 285
    287 289 291 292 293 294 295 296 297 298 299 300 301 302 303 304
    305 306 307 308 309 310 311 312 313 314 315 316 323 325 327 328
    329 330 331 332 333 336 341 349 350 447 482 485 487 492 495 506
    507 508 509 510 512 522 523 531 532 533 534 535
parenthesis_expr (333)
    à gauche: 447 448, à droite: 38 41 44 47 53 153 156 317 397
r_variable (334)
    à gauche: 449, à droite: 187 445
w_variable (335)
    à gauche: 450, à droite: 180 183 510 511 512 513
rw_variable (336)
    à gauche: 451, à droite: 280 281 282 283
variable (337)
    à gauche: 454 455, à droite: 60 70 100 126 127 179 182 264 265
    267 269 270 271 272 273 274 275 276 277 278 279 348 350 449 450
    451 500 524 529 539
$@68 (338)
    à gauche: 452, à droite: 454
$@69 (339)
    à gauche: 453, à droite: 454
variable_properties (340)
    à gauche: 456 457, à droite: 454 456
variable_property (341)
    à gauche: 459, à droite: 249 250 456
$@70 (342)
    à gauche: 458, à droite: 459
array_method_dereference (343)
    à gauche: 460 461, à droite: 460 465
method (344)
    à gauche: 463, à droite: 461 464
@71 (345)
    à gauche: 462, à droite: 463
method_or_not (346)
    à gauche: 464 465 466, à droite: 454 459
variable_without_objects (347)
    à gauche: 467 468, à droite: 372 376 378 469 470 490
static_member (348)
    à gauche: 469 470, à droite: 480
variable_class_name (349)
    à gauche: 471, à droite: 374 376 470 542
array_function_dereference (350)
    à gauche: 472 474, à droite: 472 476
$@72 (351)
    à gauche: 473, à droite: 474
base_variable_with_function_calls (352)
    à gauche: 475 476 477, à droite: 454 455
base_variable (353)
    à gauche: 478 479 480, à droite: 390 391 475
reference_variable (354)
    à gauche: 481 482 483, à droite: 467 468 471 478 479 481 482
compound_variable (355)
    à gauche: 484 485, à droite: 483
dim_offset (356)
    à gauche: 486 487, à droite: 251 252 351 352 353 460 461 472
    474 481 491
object_property (357)
    à gauche: 488 490, à droite: 390 394 454 459
$@73 (358)
    à gauche: 489, à droite: 490
object_dim_list (359)
    à gauche: 491 492 493, à droite: 488 491 492
variable_name (360)
    à gauche: 494 495, à droite: 370 374 493
simple_indirect_reference (361)
    à gauche: 496 497, à droite: 468 479 497
assignment_list (362)
    à gauche: 498 499, à droite: 129 263 498 502
assignment_list_element (363)
    à gauche: 500 502 503, à droite: 498 499
$@74 (364)
    à gauche: 501, à droite: 502
array_pair_list (365)
    à gauche: 504 505, à droite: 354 355
non_empty_array_pair_list (366)
    à gauche: 506 507 508 509 510 511 512 513, à droite: 505 506
    507 510 511
encaps_list (367)
    à gauche: 514 515 516 517, à droite: 400 434 435 514 515
encaps_var (368)
    à gauche: 518 520 521 522 523 524, à droite: 514 516 517
$@75 (369)
    à gauche: 519, à droite: 520
encaps_var_offset (370)
    à gauche: 525 526 527, à droite: 520
internal_functions_in_yacc (371)
    à gauche: 528 529 530 531 532 533 534 535, à droite: 326
isset_variables (372)
    à gauche: 536 538, à droite: 528 538
$@76 (373)
    à gauche: 537, à droite: 538
isset_variable (374)
    à gauche: 539 540, à droite: 536 538
class_constant (375)
    à gauche: 541 542, à droite: 429
static_class_name_scalar (376)
    à gauche: 543, à droite: 416
class_name_scalar (377)
    à gauche: 544, à droite: 428


état 0

    0 $accept: . start "end of file"

    $défaut  réduction par utilisation de la règle 4 (top_statement_list)

    start               aller à l'état 1
    top_statement_list  aller à l'état 2


état 1

    0 $accept: start . "end of file"

    "end of file"  décalage et aller à l'état 3


état 2

    1 start: top_statement_list .
    3 top_statement_list: top_statement_list . $@1 top_statement

    "end of file"  réduction par utilisation de la règle 1 (start)
    $défaut       réduction par utilisation de la règle 2 ($@1)

    $@1  aller à l'état 4


état 3

    0 $accept: start "end of file" .

    $défaut  accepter


état 4

    3 top_statement_list: top_statement_list $@1 . top_statement

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 11
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "if (T_IF)"                                   décalage et aller à l'état 30
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 33
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    T_INLINE_HTML                                 décalage et aller à l'état 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "echo (T_ECHO)"                               décalage et aller à l'état 38
    "do (T_DO)"                                   décalage et aller à l'état 39
    "while (T_WHILE)"                             décalage et aller à l'état 40
    "for (T_FOR)"                                 décalage et aller à l'état 41
    "foreach (T_FOREACH)"                         décalage et aller à l'état 42
    "declare (T_DECLARE)"                         décalage et aller à l'état 43
    "switch (T_SWITCH)"                           décalage et aller à l'état 44
    "break (T_BREAK)"                             décalage et aller à l'état 45
    "continue (T_CONTINUE)"                       décalage et aller à l'état 46
    "goto (T_GOTO)"                               décalage et aller à l'état 47
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "const (T_CONST)"                             décalage et aller à l'état 49
    "return (T_RETURN)"                           décalage et aller à l'état 50
    "try (T_TRY)"                                 décalage et aller à l'état 51
    "throw (T_THROW)"                             décalage et aller à l'état 52
    "use (T_USE)"                                 décalage et aller à l'état 53
    "global (T_GLOBAL)"                           décalage et aller à l'état 54
    "final (T_FINAL)"                             décalage et aller à l'état 55
    "abstract (T_ABSTRACT)"                       décalage et aller à l'état 56
    "static (T_STATIC)"                           décalage et aller à l'état 57
    "unset (T_UNSET)"                             décalage et aller à l'état 58
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "__halt_compiler (T_HALT_COMPILER)"           décalage et aller à l'état 61
    "class (T_CLASS)"                             décalage et aller à l'état 62
    "trait (T_TRAIT)"                             décalage et aller à l'état 63
    "interface (T_INTERFACE)"                     décalage et aller à l'état 64
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 74
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    ';'                                           décalage et aller à l'état 79
    '{'                                           décalage et aller à l'état 80
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                           aller à l'état 84
    top_statement                            aller à l'état 85
    constant_declaration                     aller à l'état 86
    statement                                aller à l'état 87
    unticked_statement                       aller à l'état 88
    function_declaration_statement           aller à l'état 89
    class_declaration_statement              aller à l'état 90
    unticked_function_declaration_statement  aller à l'état 91
    unticked_class_declaration_statement     aller à l'état 92
    class_entry_type                         aller à l'état 93
    interface_entry                          aller à l'état 94
    new_expr                                 aller à l'état 95
    expr_without_variable                    aller à l'état 96
    yield_expr                               aller à l'état 97
    combined_scalar_offset                   aller à l'état 98
    combined_scalar                          aller à l'état 99
    function                                 aller à l'état 100
    function_call                            aller à l'état 101
    class_name                               aller à l'état 102
    common_scalar                            aller à l'état 103
    scalar                                   aller à l'état 104
    expr                                     aller à l'état 105
    parenthesis_expr                         aller à l'état 106
    r_variable                               aller à l'état 107
    rw_variable                              aller à l'état 108
    variable                                 aller à l'état 109
    variable_without_objects                 aller à l'état 110
    static_member                            aller à l'état 111
    variable_class_name                      aller à l'état 112
    array_function_dereference               aller à l'état 113
    base_variable_with_function_calls        aller à l'état 114
    base_variable                            aller à l'état 115
    reference_variable                       aller à l'état 116
    compound_variable                        aller à l'état 117
    simple_indirect_reference                aller à l'état 118
    internal_functions_in_yacc               aller à l'état 119
    class_constant                           aller à l'état 120
    class_name_scalar                        aller à l'état 121


état 5

  535 internal_functions_in_yacc: "require_once (T_REQUIRE_ONCE)" . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 127
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 6

  534 internal_functions_in_yacc: "require (T_REQUIRE)" . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 128
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 7

  533 internal_functions_in_yacc: "eval (T_EVAL)" . '(' expr ')'

    '('  décalage et aller à l'état 129


état 8

  532 internal_functions_in_yacc: "include_once (T_INCLUDE_ONCE)" . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 130
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 9

  531 internal_functions_in_yacc: "include (T_INCLUDE)" . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 131
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 10

  341 expr_without_variable: "print (T_PRINT)" . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 132
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 11

  342 expr_without_variable: "yield (T_YIELD)" .
  347 yield_expr: "yield (T_YIELD)" . expr_without_variable
  348           | "yield (T_YIELD)" . variable
  349           | "yield (T_YIELD)" . expr "=> (T_DOUBLE_ARROW)" expr_without_variable
  350           | "yield (T_YIELD)" . expr "=> (T_DOUBLE_ARROW)" variable

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    $défaut  réduction par utilisation de la règle 342 (expr_without_variable)

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 133
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 134
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 135
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 12

  304 expr_without_variable: '+' . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 136
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 13

  305 expr_without_variable: '-' . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 137
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 14

  306 expr_without_variable: '!' . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 138
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 15

  307 expr_without_variable: '~' . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 139
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 16

  336 expr_without_variable: '@' . $@55 expr

    $défaut  réduction par utilisation de la règle 335 ($@55)

    $@55  aller à l'état 140


état 17

  333 expr_without_variable: "(unset) (T_UNSET_CAST)" . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 141
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 18

  332 expr_without_variable: "(bool) (T_BOOL_CAST)" . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 142
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 19

  331 expr_without_variable: "(object) (T_OBJECT_CAST)" . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 143
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 20

  330 expr_without_variable: "(array) (T_ARRAY_CAST)" . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 144
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 21

  329 expr_without_variable: "(string) (T_STRING_CAST)" . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 145
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 22

  328 expr_without_variable: "(double) (T_DOUBLE_CAST)" . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 146
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 23

  327 expr_without_variable: "(int) (T_INT_CAST)" . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 147
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 24

  283 expr_without_variable: "-- (T_DEC)" . rw_variable

    "identifier (T_STRING)"    décalage et aller à l'état 123
    "variable (T_VARIABLE)"    décalage et aller à l'état 35
    "static (T_STATIC)"        décalage et aller à l'état 148
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 149
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 150
    '$'                        décalage et aller à l'état 81

    namespace_name                     aller à l'état 151
    function_call                      aller à l'état 101
    class_name                         aller à l'état 152
    rw_variable                        aller à l'état 153
    variable                           aller à l'état 154
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 155
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118


état 25

  281 expr_without_variable: "++ (T_INC)" . rw_variable

    "identifier (T_STRING)"    décalage et aller à l'état 123
    "variable (T_VARIABLE)"    décalage et aller à l'état 35
    "static (T_STATIC)"        décalage et aller à l'état 148
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 149
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 150
    '$'                        décalage et aller à l'état 81

    namespace_name                     aller à l'état 151
    function_call                      aller à l'état 101
    class_name                         aller à l'état 152
    rw_variable                        aller à l'état 156
    variable                           aller à l'état 154
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 155
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118


état 26

  355 combined_scalar: '[' . array_pair_list ']'

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '&'                                           décalage et aller à l'état 157
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    $défaut  réduction par utilisation de la règle 504 (array_pair_list)

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 158
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    array_pair_list                    aller à l'état 159
    non_empty_array_pair_list          aller à l'état 160
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 27

  268 expr_without_variable: "clone (T_CLONE)" . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 161
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 28

  261 new_expr: "new (T_NEW)" . class_name_reference $@44 ctor_arguments

    "identifier (T_STRING)"    décalage et aller à l'état 123
    "variable (T_VARIABLE)"    décalage et aller à l'état 35
    "static (T_STATIC)"        décalage et aller à l'état 148
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 162
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 163
    '$'                        décalage et aller à l'état 81

    namespace_name                aller à l'état 164
    class_name                    aller à l'état 165
    class_name_reference          aller à l'état 166
    dynamic_class_name_reference  aller à l'état 167
    static_member                 aller à l'état 111
    variable_class_name           aller à l'état 168
    base_variable                 aller à l'état 169
    reference_variable            aller à l'état 170
    compound_variable             aller à l'état 117
    simple_indirect_reference     aller à l'état 171


état 29

  334 expr_without_variable: "exit (T_EXIT)" . exit_expr

    '('  décalage et aller à l'état 172

    $défaut  réduction par utilisation de la règle 395 (exit_expr)

    exit_expr         aller à l'état 173
    parenthesis_expr  aller à l'état 174


état 30

   38 unticked_statement: "if (T_IF)" . parenthesis_expr $@5 statement $@6 elseif_list else_single
   41                   | "if (T_IF)" . parenthesis_expr ':' $@7 inner_statement_list $@8 new_elseif_list new_else_single "endif (T_ENDIF)" ';'

    '('  décalage et aller à l'état 175

    parenthesis_expr  aller à l'état 176


état 31

  403 common_scalar: "integer number (T_LNUMBER)" .

    $défaut  réduction par utilisation de la règle 403 (common_scalar)


état 32

  404 common_scalar: "floating-point number (T_DNUMBER)" .

    $défaut  réduction par utilisation de la règle 404 (common_scalar)


état 33

    5 namespace_name: "identifier (T_STRING)" .
   34 statement: "identifier (T_STRING)" . ':'

    ':'  décalage et aller à l'état 177

    $défaut  réduction par utilisation de la règle 5 (namespace_name)


état 34

  427 scalar: "variable name (T_STRING_VARNAME)" .

    $défaut  réduction par utilisation de la règle 427 (scalar)


état 35

  484 compound_variable: "variable (T_VARIABLE)" .

    $défaut  réduction par utilisation de la règle 484 (compound_variable)


état 36

   65 unticked_statement: T_INLINE_HTML .

    $défaut  réduction par utilisation de la règle 65 (unticked_statement)


état 37

  353 combined_scalar_offset: "quoted-string (T_CONSTANT_ENCAPSED_STRING)" . '[' dim_offset ']'
  405 common_scalar: "quoted-string (T_CONSTANT_ENCAPSED_STRING)" .

    '['  décalage et aller à l'état 178

    $défaut  réduction par utilisation de la règle 405 (common_scalar)


état 38

   64 unticked_statement: "echo (T_ECHO)" . echo_expr_list ';'

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    echo_expr_list                     aller à l'état 179
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 180
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 39

   47 unticked_statement: "do (T_DO)" . $@11 statement "while (T_WHILE)" $@12 parenthesis_expr ';'

    $défaut  réduction par utilisation de la règle 45 ($@11)

    $@11  aller à l'état 181


état 40

   44 unticked_statement: "while (T_WHILE)" . $@9 parenthesis_expr @10 while_statement

    $défaut  réduction par utilisation de la règle 42 ($@9)

    $@9  aller à l'état 182


état 41

   51 unticked_statement: "for (T_FOR)" . '(' for_expr ';' $@13 for_expr ';' $@14 for_expr ')' $@15 for_statement

    '('  décalage et aller à l'état 183


état 42

   70 unticked_statement: "foreach (T_FOREACH)" . '(' variable "as (T_AS)" $@17 foreach_variable foreach_optional_arg ')' $@18 foreach_statement
   73                   | "foreach (T_FOREACH)" . '(' expr_without_variable "as (T_AS)" $@19 foreach_variable foreach_optional_arg ')' $@20 foreach_statement

    '('  décalage et aller à l'état 184


état 43

   75 unticked_statement: "declare (T_DECLARE)" . $@21 '(' declare_list ')' declare_statement

    $défaut  réduction par utilisation de la règle 74 ($@21)

    $@21  aller à l'état 185


état 44

   53 unticked_statement: "switch (T_SWITCH)" . parenthesis_expr $@16 switch_case_list

    '('  décalage et aller à l'état 175

    parenthesis_expr  aller à l'état 186


état 45

   54 unticked_statement: "break (T_BREAK)" . ';'
   55                   | "break (T_BREAK)" . expr ';'

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    ';'                                           décalage et aller à l'état 187
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 188
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 46

   56 unticked_statement: "continue (T_CONTINUE)" . ';'
   57                   | "continue (T_CONTINUE)" . expr ';'

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    ';'                                           décalage et aller à l'état 189
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 190
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 47

   81 unticked_statement: "goto (T_GOTO)" . "identifier (T_STRING)" ';'

    "identifier (T_STRING)"  décalage et aller à l'état 191


état 48

  356 function: "function (T_FUNCTION)" .

    $défaut  réduction par utilisation de la règle 356 (function)


état 49

   25 constant_declaration: "const (T_CONST)" . "identifier (T_STRING)" '=' static_scalar

    "identifier (T_STRING)"  décalage et aller à l'état 192


état 50

   58 unticked_statement: "return (T_RETURN)" . ';'
   59                   | "return (T_RETURN)" . expr_without_variable ';'
   60                   | "return (T_RETURN)" . variable ';'

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    ';'                                           décalage et aller à l'état 193
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 194
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 195
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 196
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 51

   79 unticked_statement: "try (T_TRY)" . $@22 '{' inner_statement_list '}' catch_statement $@23 finally_statement

    $défaut  réduction par utilisation de la règle 77 ($@22)

    $@22  aller à l'état 197


état 52

   80 unticked_statement: "throw (T_THROW)" . expr ';'

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 198
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 53

   16 top_statement: "use (T_USE)" . use_declarations ';'

    "identifier (T_STRING)"  décalage et aller à l'état 123
    "\\ (T_NS_SEPARATOR)"    décalage et aller à l'état 199

    namespace_name    aller à l'état 200
    use_declarations  aller à l'état 201
    use_declaration   aller à l'état 202


état 54

   62 unticked_statement: "global (T_GLOBAL)" . global_var_list ';'

    "variable (T_VARIABLE)"  décalage et aller à l'état 203
    '$'                      décalage et aller à l'état 204

    global_var_list  aller à l'état 205
    global_var       aller à l'état 206


état 55

  114 class_entry_type: "final (T_FINAL)" . "class (T_CLASS)"

    "class (T_CLASS)"  décalage et aller à l'état 207


état 56

  112 class_entry_type: "abstract (T_ABSTRACT)" . "class (T_CLASS)"

    "class (T_CLASS)"  décalage et aller à l'état 208


état 57

   63 unticked_statement: "static (T_STATIC)" . static_var_list ';'
  346 expr_without_variable: "static (T_STATIC)" . function is_reference @57 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'
  379 class_name: "static (T_STATIC)" .

    "variable (T_VARIABLE)"  décalage et aller à l'état 209
    "function (T_FUNCTION)"  décalage et aller à l'état 48

    $défaut  réduction par utilisation de la règle 379 (class_name)

    static_var_list  aller à l'état 210
    function         aller à l'état 211


état 58

   67 unticked_statement: "unset (T_UNSET)" . '(' unset_variables ')' ';'

    '('  décalage et aller à l'état 212


état 59

  528 internal_functions_in_yacc: "isset (T_ISSET)" . '(' isset_variables ')'

    '('  décalage et aller à l'état 213


état 60

  529 internal_functions_in_yacc: "empty (T_EMPTY)" . '(' variable ')'
  530                           | "empty (T_EMPTY)" . '(' expr_without_variable ')'

    '('  décalage et aller à l'état 214


état 61

   10 top_statement: "__halt_compiler (T_HALT_COMPILER)" . '(' ')' ';'

    '('  décalage et aller à l'état 215


état 62

  111 class_entry_type: "class (T_CLASS)" .

    $défaut  réduction par utilisation de la règle 111 (class_entry_type)


état 63

  113 class_entry_type: "trait (T_TRAIT)" .

    $défaut  réduction par utilisation de la règle 113 (class_entry_type)


état 64

  117 interface_entry: "interface (T_INTERFACE)" .

    $défaut  réduction par utilisation de la règle 117 (interface_entry)


état 65

  263 expr_without_variable: "list (T_LIST)" . '(' $@45 assignment_list ')' '=' expr

    '('  décalage et aller à l'état 216


état 66

  354 combined_scalar: "array (T_ARRAY)" . '(' array_pair_list ')'

    '('  décalage et aller à l'état 217


état 67

  436 scalar: "__CLASS__ (T_CLASS_C)" .

    $défaut  réduction par utilisation de la règle 436 (scalar)


état 68

  409 common_scalar: "__TRAIT__ (T_TRAIT_C)" .

    $défaut  réduction par utilisation de la règle 409 (common_scalar)


état 69

  410 common_scalar: "__METHOD__ (T_METHOD_C)" .

    $défaut  réduction par utilisation de la règle 410 (common_scalar)


état 70

  411 common_scalar: "__FUNCTION__ (T_FUNC_C)" .

    $défaut  réduction par utilisation de la règle 411 (common_scalar)


état 71

  406 common_scalar: "__LINE__ (T_LINE)" .

    $défaut  réduction par utilisation de la règle 406 (common_scalar)


état 72

  407 common_scalar: "__FILE__ (T_FILE)" .

    $défaut  réduction par utilisation de la règle 407 (common_scalar)


état 73

  413 common_scalar: "heredoc start (T_START_HEREDOC)" . "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" "heredoc end (T_END_HEREDOC)"
  414              | "heredoc start (T_START_HEREDOC)" . "heredoc end (T_END_HEREDOC)"
  435 scalar: "heredoc start (T_START_HEREDOC)" . encaps_list "heredoc end (T_END_HEREDOC)"

    "variable (T_VARIABLE)"                                     décalage et aller à l'état 218
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  décalage et aller à l'état 219
    "heredoc end (T_END_HEREDOC)"                               décalage et aller à l'état 220
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           décalage et aller à l'état 221
    "{$ (T_CURLY_OPEN)"                                         décalage et aller à l'état 222

    encaps_list  aller à l'état 223
    encaps_var   aller à l'état 224


état 74

   11 top_statement: "namespace (T_NAMESPACE)" . namespace_name ';'
   13              | "namespace (T_NAMESPACE)" . namespace_name '{' $@2 top_statement_list '}'
   15              | "namespace (T_NAMESPACE)" . '{' $@3 top_statement_list '}'
  366 function_call: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name @59 function_call_parameter_list
  381 class_name: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name
  431 scalar: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name

    "identifier (T_STRING)"  décalage et aller à l'état 123
    "\\ (T_NS_SEPARATOR)"    décalage et aller à l'état 225
    '{'                      décalage et aller à l'état 226

    namespace_name  aller à l'état 227


état 75

  412 common_scalar: "__NAMESPACE__ (T_NS_C)" .

    $défaut  réduction par utilisation de la règle 412 (common_scalar)


état 76

  408 common_scalar: "__DIR__ (T_DIR)" .

    $défaut  réduction par utilisation de la règle 408 (common_scalar)


état 77

  368 function_call: "\\ (T_NS_SEPARATOR)" . namespace_name @60 function_call_parameter_list
  382 class_name: "\\ (T_NS_SEPARATOR)" . namespace_name
  432 scalar: "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  décalage et aller à l'état 123

    namespace_name  aller à l'état 228


état 78

  320 expr_without_variable: '(' . new_expr ')' @51 instance_call
  447 parenthesis_expr: '(' . expr ')'
  448                 | '(' . yield_expr ')'

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 11
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 229
    expr_without_variable              aller à l'état 96
    yield_expr                         aller à l'état 230
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 231
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 79

   76 unticked_statement: ';' .

    $défaut  réduction par utilisation de la règle 76 (unticked_statement)


état 80

   35 unticked_statement: '{' . inner_statement_list '}'

    $défaut  réduction par utilisation de la règle 28 (inner_statement_list)

    inner_statement_list  aller à l'état 232


état 81

  485 compound_variable: '$' . '{' expr '}'
  496 simple_indirect_reference: '$' .

    '{'  décalage et aller à l'état 233

    $défaut  réduction par utilisation de la règle 496 (simple_indirect_reference)


état 82

  340 expr_without_variable: '`' . backticks_expr '`'

    "variable (T_VARIABLE)"                                     décalage et aller à l'état 218
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  décalage et aller à l'état 234
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           décalage et aller à l'état 221
    "{$ (T_CURLY_OPEN)"                                         décalage et aller à l'état 222

    $défaut  réduction par utilisation de la règle 398 (backticks_expr)

    backticks_expr  aller à l'état 235
    encaps_list     aller à l'état 236
    encaps_var      aller à l'état 224


état 83

  434 scalar: '"' . encaps_list '"'

    "variable (T_VARIABLE)"                                     décalage et aller à l'état 218
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  décalage et aller à l'état 237
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           décalage et aller à l'état 221
    "{$ (T_CURLY_OPEN)"                                         décalage et aller à l'état 222

    encaps_list  aller à l'état 238
    encaps_var   aller à l'état 224


état 84

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  364 function_call: namespace_name . @58 function_call_parameter_list
  380 class_name: namespace_name .
  430 scalar: namespace_name .

    "\\ (T_NS_SEPARATOR)"  décalage et aller à l'état 239

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  réduction par utilisation de la règle 380 (class_name)
    '('                            réduction par utilisation de la règle 363 (@58)
    $défaut                       réduction par utilisation de la règle 430 (scalar)

    @58  aller à l'état 240


état 85

    3 top_statement_list: top_statement_list $@1 top_statement .

    $défaut  réduction par utilisation de la règle 3 (top_statement_list)


état 86

   17 top_statement: constant_declaration . ';'
   24 constant_declaration: constant_declaration . ',' "identifier (T_STRING)" '=' static_scalar

    ','  décalage et aller à l'état 241
    ';'  décalage et aller à l'état 242


état 87

    7 top_statement: statement .

    $défaut  réduction par utilisation de la règle 7 (top_statement)


état 88

   33 statement: unticked_statement .

    $défaut  réduction par utilisation de la règle 33 (statement)


état 89

    8 top_statement: function_declaration_statement .

    $défaut  réduction par utilisation de la règle 8 (top_statement)


état 90

    9 top_statement: class_declaration_statement .

    $défaut  réduction par utilisation de la règle 9 (top_statement)


état 91

  101 function_declaration_statement: unticked_function_declaration_statement .

    $défaut  réduction par utilisation de la règle 101 (function_declaration_statement)


état 92

  102 class_declaration_statement: unticked_class_declaration_statement .

    $défaut  réduction par utilisation de la règle 102 (class_declaration_statement)


état 93

  108 unticked_class_declaration_statement: class_entry_type . "identifier (T_STRING)" extends_from $@32 implements_list '{' class_statement_list '}'

    "identifier (T_STRING)"  décalage et aller à l'état 243


état 94

  110 unticked_class_declaration_statement: interface_entry . "identifier (T_STRING)" $@33 interface_extends_list '{' class_statement_list '}'

    "identifier (T_STRING)"  décalage et aller à l'état 244


état 95

  318 expr_without_variable: new_expr .

    $défaut  réduction par utilisation de la règle 318 (expr_without_variable)


état 96

  446 expr: expr_without_variable .

    $défaut  réduction par utilisation de la règle 446 (expr)


état 97

   61 unticked_statement: yield_expr . ';'

    ';'  décalage et aller à l'état 245


état 98

  338 expr_without_variable: combined_scalar_offset .
  352 combined_scalar_offset: combined_scalar_offset . '[' dim_offset ']'

    '['  décalage et aller à l'état 246

    $défaut  réduction par utilisation de la règle 338 (expr_without_variable)


état 99

  339 expr_without_variable: combined_scalar .
  351 combined_scalar_offset: combined_scalar . '[' dim_offset ']'

    '['  décalage et aller à l'état 247

    $défaut  réduction par utilisation de la règle 339 (expr_without_variable)


état 100

  106 unticked_function_declaration_statement: function . is_reference "identifier (T_STRING)" $@31 '(' parameter_list ')' '{' inner_statement_list '}'
  344 expr_without_variable: function . is_reference @56 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'

    '&'  décalage et aller à l'état 248

    $défaut  réduction par utilisation de la règle 103 (is_reference)

    is_reference  aller à l'état 249


état 101

  474 array_function_dereference: function_call . $@72 '[' dim_offset ']'
  477 base_variable_with_function_calls: function_call .

    '['       réduction par utilisation de la règle 473 ($@72)
    $défaut  réduction par utilisation de la règle 477 (base_variable_with_function_calls)

    $@72  aller à l'état 250


état 102

  370 function_call: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name @61 function_call_parameter_list
  372              | class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects $@62 function_call_parameter_list
  469 static_member: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects
  541 class_constant: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)"
  544 class_name_scalar: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" "class (T_CLASS)"

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  décalage et aller à l'état 251


état 103

  433 scalar: common_scalar .

    $défaut  réduction par utilisation de la règle 433 (scalar)


état 104

  337 expr_without_variable: scalar .

    $défaut  réduction par utilisation de la règle 337 (expr_without_variable)


état 105

   66 unticked_statement: expr . ';'
  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "or (T_LOGICAL_OR)"           décalage et aller à l'état 252
    "xor (T_LOGICAL_XOR)"         décalage et aller à l'état 253
    "and (T_LOGICAL_AND)"         décalage et aller à l'état 254
    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277
    ';'                           décalage et aller à l'état 278


état 106

  317 expr_without_variable: parenthesis_expr .

    $défaut  réduction par utilisation de la règle 317 (expr_without_variable)


état 107

  445 expr: r_variable .

    $défaut  réduction par utilisation de la règle 445 (expr)


état 108

  280 expr_without_variable: rw_variable . "++ (T_INC)"
  282                      | rw_variable . "-- (T_DEC)"

    "-- (T_DEC)"  décalage et aller à l'état 279
    "++ (T_INC)"  décalage et aller à l'état 280


état 109

  264 expr_without_variable: variable . '=' expr
  265                      | variable . '=' '&' variable
  267                      | variable . '=' '&' "new (T_NEW)" class_name_reference $@46 ctor_arguments
  269                      | variable . "+= (T_PLUS_EQUAL)" expr
  270                      | variable . "-= (T_MINUS_EQUAL)" expr
  271                      | variable . "*= (T_MUL_EQUAL)" expr
  272                      | variable . "/= (T_DIV_EQUAL)" expr
  273                      | variable . ".= (T_CONCAT_EQUAL)" expr
  274                      | variable . "%= (T_MOD_EQUAL)" expr
  275                      | variable . "&= (T_AND_EQUAL)" expr
  276                      | variable . "|= (T_OR_EQUAL)" expr
  277                      | variable . "^= (T_XOR_EQUAL)" expr
  278                      | variable . "<<= (T_SL_EQUAL)" expr
  279                      | variable . ">>= (T_SR_EQUAL)" expr
  449 r_variable: variable .
  451 rw_variable: variable .

    '='                    décalage et aller à l'état 281
    ">>= (T_SR_EQUAL)"     décalage et aller à l'état 282
    "<<= (T_SL_EQUAL)"     décalage et aller à l'état 283
    "^= (T_XOR_EQUAL)"     décalage et aller à l'état 284
    "|= (T_OR_EQUAL)"      décalage et aller à l'état 285
    "&= (T_AND_EQUAL)"     décalage et aller à l'état 286
    "%= (T_MOD_EQUAL)"     décalage et aller à l'état 287
    ".= (T_CONCAT_EQUAL)"  décalage et aller à l'état 288
    "/= (T_DIV_EQUAL)"     décalage et aller à l'état 289
    "*= (T_MUL_EQUAL)"     décalage et aller à l'état 290
    "-= (T_MINUS_EQUAL)"   décalage et aller à l'état 291
    "+= (T_PLUS_EQUAL)"    décalage et aller à l'état 292

    "-- (T_DEC)"  réduction par utilisation de la règle 451 (rw_variable)
    "++ (T_INC)"  réduction par utilisation de la règle 451 (rw_variable)
    $défaut      réduction par utilisation de la règle 449 (r_variable)


état 110

  378 function_call: variable_without_objects . $@65 function_call_parameter_list

    $défaut  réduction par utilisation de la règle 377 ($@65)

    $@65  aller à l'état 293


état 111

  480 base_variable: static_member .

    $défaut  réduction par utilisation de la règle 480 (base_variable)


état 112

  374 function_call: variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name $@63 function_call_parameter_list
  376              | variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects $@64 function_call_parameter_list
  470 static_member: variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects
  542 class_constant: variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)"

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  décalage et aller à l'état 294


état 113

  472 array_function_dereference: array_function_dereference . '[' dim_offset ']'
  476 base_variable_with_function_calls: array_function_dereference .

    '['  décalage et aller à l'état 295

    $défaut  réduction par utilisation de la règle 476 (base_variable_with_function_calls)


état 114

  454 variable: base_variable_with_function_calls . "-> (T_OBJECT_OPERATOR)" $@68 object_property $@69 method_or_not variable_properties
  455         | base_variable_with_function_calls .

    "-> (T_OBJECT_OPERATOR)"  décalage et aller à l'état 296

    $défaut  réduction par utilisation de la règle 455 (variable)


état 115

  475 base_variable_with_function_calls: base_variable .

    $défaut  réduction par utilisation de la règle 475 (base_variable_with_function_calls)


état 116

  467 variable_without_objects: reference_variable .
  471 variable_class_name: reference_variable .
  478 base_variable: reference_variable .
  481 reference_variable: reference_variable . '[' dim_offset ']'
  482                   | reference_variable . '{' expr '}'

    '['  décalage et aller à l'état 297
    '{'  décalage et aller à l'état 298

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  réduction par utilisation de la règle 471 (variable_class_name)
    '('                            réduction par utilisation de la règle 467 (variable_without_objects)
    $défaut                       réduction par utilisation de la règle 478 (base_variable)


état 117

  483 reference_variable: compound_variable .

    $défaut  réduction par utilisation de la règle 483 (reference_variable)


état 118

  468 variable_without_objects: simple_indirect_reference . reference_variable
  479 base_variable: simple_indirect_reference . reference_variable
  497 simple_indirect_reference: simple_indirect_reference . '$'

    "variable (T_VARIABLE)"  décalage et aller à l'état 35
    '$'                      décalage et aller à l'état 299

    reference_variable  aller à l'état 300
    compound_variable   aller à l'état 117


état 119

  326 expr_without_variable: internal_functions_in_yacc .

    $défaut  réduction par utilisation de la règle 326 (expr_without_variable)


état 120

  429 scalar: class_constant .

    $défaut  réduction par utilisation de la règle 429 (scalar)


état 121

  428 scalar: class_name_scalar .

    $défaut  réduction par utilisation de la règle 428 (scalar)


état 122

  342 expr_without_variable: "yield (T_YIELD)" .

    $défaut  réduction par utilisation de la règle 342 (expr_without_variable)


état 123

    5 namespace_name: "identifier (T_STRING)" .

    $défaut  réduction par utilisation de la règle 5 (namespace_name)


état 124

  346 expr_without_variable: "static (T_STATIC)" . function is_reference @57 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'
  379 class_name: "static (T_STATIC)" .

    "function (T_FUNCTION)"  décalage et aller à l'état 48

    $défaut  réduction par utilisation de la règle 379 (class_name)

    function  aller à l'état 211


état 125

  366 function_call: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name @59 function_call_parameter_list
  381 class_name: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name
  431 scalar: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name

    "\\ (T_NS_SEPARATOR)"  décalage et aller à l'état 225


état 126

  344 expr_without_variable: function . is_reference @56 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'

    '&'  décalage et aller à l'état 248

    $défaut  réduction par utilisation de la règle 103 (is_reference)

    is_reference  aller à l'état 301


état 127

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  535 internal_functions_in_yacc: "require_once (T_REQUIRE_ONCE)" expr .

    "or (T_LOGICAL_OR)"           décalage et aller à l'état 252
    "xor (T_LOGICAL_XOR)"         décalage et aller à l'état 253
    "and (T_LOGICAL_AND)"         décalage et aller à l'état 254
    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 535 (internal_functions_in_yacc)


état 128

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  534 internal_functions_in_yacc: "require (T_REQUIRE)" expr .

    "or (T_LOGICAL_OR)"           décalage et aller à l'état 252
    "xor (T_LOGICAL_XOR)"         décalage et aller à l'état 253
    "and (T_LOGICAL_AND)"         décalage et aller à l'état 254
    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 534 (internal_functions_in_yacc)


état 129

  533 internal_functions_in_yacc: "eval (T_EVAL)" '(' . expr ')'

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 302
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 130

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  532 internal_functions_in_yacc: "include_once (T_INCLUDE_ONCE)" expr .

    "or (T_LOGICAL_OR)"           décalage et aller à l'état 252
    "xor (T_LOGICAL_XOR)"         décalage et aller à l'état 253
    "and (T_LOGICAL_AND)"         décalage et aller à l'état 254
    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 532 (internal_functions_in_yacc)


état 131

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  531 internal_functions_in_yacc: "include (T_INCLUDE)" expr .

    "or (T_LOGICAL_OR)"           décalage et aller à l'état 252
    "xor (T_LOGICAL_XOR)"         décalage et aller à l'état 253
    "and (T_LOGICAL_AND)"         décalage et aller à l'état 254
    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 531 (internal_functions_in_yacc)


état 132

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  341                      | "print (T_PRINT)" expr .

    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 341 (expr_without_variable)


état 133

  347 yield_expr: "yield (T_YIELD)" expr_without_variable .
  446 expr: expr_without_variable .

    ')'       réduction par utilisation de la règle 347 (yield_expr)
    ';'       réduction par utilisation de la règle 347 (yield_expr)
    $défaut  réduction par utilisation de la règle 446 (expr)


état 134

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  349 yield_expr: "yield (T_YIELD)" expr . "=> (T_DOUBLE_ARROW)" expr_without_variable
  350           | "yield (T_YIELD)" expr . "=> (T_DOUBLE_ARROW)" variable

    "or (T_LOGICAL_OR)"           décalage et aller à l'état 252
    "xor (T_LOGICAL_XOR)"         décalage et aller à l'état 253
    "and (T_LOGICAL_AND)"         décalage et aller à l'état 254
    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277
    "=> (T_DOUBLE_ARROW)"         décalage et aller à l'état 303


état 135

  264 expr_without_variable: variable . '=' expr
  265                      | variable . '=' '&' variable
  267                      | variable . '=' '&' "new (T_NEW)" class_name_reference $@46 ctor_arguments
  269                      | variable . "+= (T_PLUS_EQUAL)" expr
  270                      | variable . "-= (T_MINUS_EQUAL)" expr
  271                      | variable . "*= (T_MUL_EQUAL)" expr
  272                      | variable . "/= (T_DIV_EQUAL)" expr
  273                      | variable . ".= (T_CONCAT_EQUAL)" expr
  274                      | variable . "%= (T_MOD_EQUAL)" expr
  275                      | variable . "&= (T_AND_EQUAL)" expr
  276                      | variable . "|= (T_OR_EQUAL)" expr
  277                      | variable . "^= (T_XOR_EQUAL)" expr
  278                      | variable . "<<= (T_SL_EQUAL)" expr
  279                      | variable . ">>= (T_SR_EQUAL)" expr
  348 yield_expr: "yield (T_YIELD)" variable .
  449 r_variable: variable .
  451 rw_variable: variable .

    '='                    décalage et aller à l'état 281
    ">>= (T_SR_EQUAL)"     décalage et aller à l'état 282
    "<<= (T_SL_EQUAL)"     décalage et aller à l'état 283
    "^= (T_XOR_EQUAL)"     décalage et aller à l'état 284
    "|= (T_OR_EQUAL)"      décalage et aller à l'état 285
    "&= (T_AND_EQUAL)"     décalage et aller à l'état 286
    "%= (T_MOD_EQUAL)"     décalage et aller à l'état 287
    ".= (T_CONCAT_EQUAL)"  décalage et aller à l'état 288
    "/= (T_DIV_EQUAL)"     décalage et aller à l'état 289
    "*= (T_MUL_EQUAL)"     décalage et aller à l'état 290
    "-= (T_MINUS_EQUAL)"   décalage et aller à l'état 291
    "+= (T_PLUS_EQUAL)"    décalage et aller à l'état 292

    "-- (T_DEC)"  réduction par utilisation de la règle 451 (rw_variable)
    "++ (T_INC)"  réduction par utilisation de la règle 451 (rw_variable)
    ')'           réduction par utilisation de la règle 348 (yield_expr)
    ';'           réduction par utilisation de la règle 348 (yield_expr)
    $défaut      réduction par utilisation de la règle 449 (r_variable)


état 136

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  304                      | '+' expr .
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    $défaut  réduction par utilisation de la règle 304 (expr_without_variable)


état 137

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  305                      | '-' expr .
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    $défaut  réduction par utilisation de la règle 305 (expr_without_variable)


état 138

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  306                      | '!' expr .
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "instanceof (T_INSTANCEOF)"  décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 306 (expr_without_variable)


état 139

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  307                      | '~' expr .
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    $défaut  réduction par utilisation de la règle 307 (expr_without_variable)


état 140

  336 expr_without_variable: '@' $@55 . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 304
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 141

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  333                      | "(unset) (T_UNSET_CAST)" expr .

    $défaut  réduction par utilisation de la règle 333 (expr_without_variable)


état 142

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  332                      | "(bool) (T_BOOL_CAST)" expr .

    $défaut  réduction par utilisation de la règle 332 (expr_without_variable)


état 143

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  331                      | "(object) (T_OBJECT_CAST)" expr .

    $défaut  réduction par utilisation de la règle 331 (expr_without_variable)


état 144

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  330                      | "(array) (T_ARRAY_CAST)" expr .

    $défaut  réduction par utilisation de la règle 330 (expr_without_variable)


état 145

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  329                      | "(string) (T_STRING_CAST)" expr .

    $défaut  réduction par utilisation de la règle 329 (expr_without_variable)


état 146

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  328                      | "(double) (T_DOUBLE_CAST)" expr .

    $défaut  réduction par utilisation de la règle 328 (expr_without_variable)


état 147

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  327                      | "(int) (T_INT_CAST)" expr .

    $défaut  réduction par utilisation de la règle 327 (expr_without_variable)


état 148

  379 class_name: "static (T_STATIC)" .

    $défaut  réduction par utilisation de la règle 379 (class_name)


état 149

  366 function_call: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name @59 function_call_parameter_list
  381 class_name: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name

    "\\ (T_NS_SEPARATOR)"  décalage et aller à l'état 305


état 150

  368 function_call: "\\ (T_NS_SEPARATOR)" . namespace_name @60 function_call_parameter_list
  382 class_name: "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  décalage et aller à l'état 123

    namespace_name  aller à l'état 306


état 151

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  364 function_call: namespace_name . @58 function_call_parameter_list
  380 class_name: namespace_name .

    "\\ (T_NS_SEPARATOR)"  décalage et aller à l'état 239

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  réduction par utilisation de la règle 380 (class_name)
    $défaut                       réduction par utilisation de la règle 363 (@58)

    @58  aller à l'état 240


état 152

  370 function_call: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name @61 function_call_parameter_list
  372              | class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects $@62 function_call_parameter_list
  469 static_member: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  décalage et aller à l'état 307


état 153

  283 expr_without_variable: "-- (T_DEC)" rw_variable .

    $défaut  réduction par utilisation de la règle 283 (expr_without_variable)


état 154

  451 rw_variable: variable .

    $défaut  réduction par utilisation de la règle 451 (rw_variable)


état 155

  374 function_call: variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name $@63 function_call_parameter_list
  376              | variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects $@64 function_call_parameter_list
  470 static_member: variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  décalage et aller à l'état 308


état 156

  281 expr_without_variable: "++ (T_INC)" rw_variable .

    $défaut  réduction par utilisation de la règle 281 (expr_without_variable)


état 157

  513 non_empty_array_pair_list: '&' . w_variable

    "identifier (T_STRING)"    décalage et aller à l'état 123
    "variable (T_VARIABLE)"    décalage et aller à l'état 35
    "static (T_STATIC)"        décalage et aller à l'état 148
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 149
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 150
    '$'                        décalage et aller à l'état 81

    namespace_name                     aller à l'état 151
    function_call                      aller à l'état 101
    class_name                         aller à l'état 152
    w_variable                         aller à l'état 309
    variable                           aller à l'état 310
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 155
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118


état 158

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  508 non_empty_array_pair_list: expr . "=> (T_DOUBLE_ARROW)" expr
  509                          | expr .
  512                          | expr . "=> (T_DOUBLE_ARROW)" '&' w_variable

    "or (T_LOGICAL_OR)"           décalage et aller à l'état 252
    "xor (T_LOGICAL_XOR)"         décalage et aller à l'état 253
    "and (T_LOGICAL_AND)"         décalage et aller à l'état 254
    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277
    "=> (T_DOUBLE_ARROW)"         décalage et aller à l'état 311

    $défaut  réduction par utilisation de la règle 509 (non_empty_array_pair_list)


état 159

  355 combined_scalar: '[' array_pair_list . ']'

    ']'  décalage et aller à l'état 312


état 160

  505 array_pair_list: non_empty_array_pair_list . possible_comma
  506 non_empty_array_pair_list: non_empty_array_pair_list . ',' expr "=> (T_DOUBLE_ARROW)" expr
  507                          | non_empty_array_pair_list . ',' expr
  510                          | non_empty_array_pair_list . ',' expr "=> (T_DOUBLE_ARROW)" '&' w_variable
  511                          | non_empty_array_pair_list . ',' '&' w_variable

    ','  décalage et aller à l'état 313

    $défaut  réduction par utilisation de la règle 439 (possible_comma)

    possible_comma  aller à l'état 314


état 161

  268 expr_without_variable: "clone (T_CLONE)" expr .
  285                      | expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    $défaut  réduction par utilisation de la règle 268 (expr_without_variable)


état 162

  381 class_name: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name

    "\\ (T_NS_SEPARATOR)"  décalage et aller à l'état 315


état 163

  382 class_name: "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  décalage et aller à l'état 123

    namespace_name  aller à l'état 316


état 164

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  380 class_name: namespace_name .

    "\\ (T_NS_SEPARATOR)"  décalage et aller à l'état 239

    $défaut  réduction par utilisation de la règle 380 (class_name)


état 165

  386 class_name_reference: class_name .
  469 static_member: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  décalage et aller à l'état 317

    $défaut  réduction par utilisation de la règle 386 (class_name_reference)


état 166

  261 new_expr: "new (T_NEW)" class_name_reference . $@44 ctor_arguments

    $défaut  réduction par utilisation de la règle 260 ($@44)

    $@44  aller à l'état 318


état 167

  387 class_name_reference: dynamic_class_name_reference .

    $défaut  réduction par utilisation de la règle 387 (class_name_reference)


état 168

  470 static_member: variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  décalage et aller à l'état 319


état 169

  390 dynamic_class_name_reference: base_variable . "-> (T_OBJECT_OPERATOR)" $@66 object_property $@67 dynamic_class_name_variable_properties
  391                             | base_variable .

    "-> (T_OBJECT_OPERATOR)"  décalage et aller à l'état 320

    $défaut  réduction par utilisation de la règle 391 (dynamic_class_name_reference)


état 170

  471 variable_class_name: reference_variable .
  478 base_variable: reference_variable .
  481 reference_variable: reference_variable . '[' dim_offset ']'
  482                   | reference_variable . '{' expr '}'

    '['  décalage et aller à l'état 297
    '{'  décalage et aller à l'état 298

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  réduction par utilisation de la règle 471 (variable_class_name)
    $défaut                       réduction par utilisation de la règle 478 (base_variable)


état 171

  479 base_variable: simple_indirect_reference . reference_variable
  497 simple_indirect_reference: simple_indirect_reference . '$'

    "variable (T_VARIABLE)"  décalage et aller à l'état 35
    '$'                      décalage et aller à l'état 299

    reference_variable  aller à l'état 321
    compound_variable   aller à l'état 117


état 172

  396 exit_expr: '(' . ')'
  447 parenthesis_expr: '(' . expr ')'
  448                 | '(' . yield_expr ')'

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 11
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    ')'                                           décalage et aller à l'état 322
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    yield_expr                         aller à l'état 230
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 231
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 173

  334 expr_without_variable: "exit (T_EXIT)" exit_expr .

    $défaut  réduction par utilisation de la règle 334 (expr_without_variable)


état 174

  397 exit_expr: parenthesis_expr .

    $défaut  réduction par utilisation de la règle 397 (exit_expr)


état 175

  447 parenthesis_expr: '(' . expr ')'
  448                 | '(' . yield_expr ')'

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 11
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    yield_expr                         aller à l'état 230
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 231
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 176

   38 unticked_statement: "if (T_IF)" parenthesis_expr . $@5 statement $@6 elseif_list else_single
   41                   | "if (T_IF)" parenthesis_expr . ':' $@7 inner_statement_list $@8 new_elseif_list new_else_single "endif (T_ENDIF)" ';'

    ':'  décalage et aller à l'état 323

    $défaut  réduction par utilisation de la règle 36 ($@5)

    $@5  aller à l'état 324


état 177

   34 statement: "identifier (T_STRING)" ':' .

    $défaut  réduction par utilisation de la règle 34 (statement)


état 178

  353 combined_scalar_offset: "quoted-string (T_CONSTANT_ENCAPSED_STRING)" '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    $défaut  réduction par utilisation de la règle 486 (dim_offset)

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 325
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    dim_offset                         aller à l'état 326
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 179

   64 unticked_statement: "echo (T_ECHO)" echo_expr_list . ';'
  242 echo_expr_list: echo_expr_list . ',' expr

    ','  décalage et aller à l'état 327
    ';'  décalage et aller à l'état 328


état 180

  243 echo_expr_list: expr .
  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "or (T_LOGICAL_OR)"           décalage et aller à l'état 252
    "xor (T_LOGICAL_XOR)"         décalage et aller à l'état 253
    "and (T_LOGICAL_AND)"         décalage et aller à l'état 254
    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 243 (echo_expr_list)


état 181

   47 unticked_statement: "do (T_DO)" $@11 . statement "while (T_WHILE)" $@12 parenthesis_expr ';'

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 11
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "if (T_IF)"                                   décalage et aller à l'état 30
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 33
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    T_INLINE_HTML                                 décalage et aller à l'état 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "echo (T_ECHO)"                               décalage et aller à l'état 38
    "do (T_DO)"                                   décalage et aller à l'état 39
    "while (T_WHILE)"                             décalage et aller à l'état 40
    "for (T_FOR)"                                 décalage et aller à l'état 41
    "foreach (T_FOREACH)"                         décalage et aller à l'état 42
    "declare (T_DECLARE)"                         décalage et aller à l'état 43
    "switch (T_SWITCH)"                           décalage et aller à l'état 44
    "break (T_BREAK)"                             décalage et aller à l'état 45
    "continue (T_CONTINUE)"                       décalage et aller à l'état 46
    "goto (T_GOTO)"                               décalage et aller à l'état 47
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "return (T_RETURN)"                           décalage et aller à l'état 50
    "try (T_TRY)"                                 décalage et aller à l'état 51
    "throw (T_THROW)"                             décalage et aller à l'état 52
    "global (T_GLOBAL)"                           décalage et aller à l'état 54
    "static (T_STATIC)"                           décalage et aller à l'état 57
    "unset (T_UNSET)"                             décalage et aller à l'état 58
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    ';'                                           décalage et aller à l'état 79
    '{'                                           décalage et aller à l'état 80
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    statement                          aller à l'état 329
    unticked_statement                 aller à l'état 88
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    yield_expr                         aller à l'état 97
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 105
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 182

   44 unticked_statement: "while (T_WHILE)" $@9 . parenthesis_expr @10 while_statement

    '('  décalage et aller à l'état 175

    parenthesis_expr  aller à l'état 330


état 183

   51 unticked_statement: "for (T_FOR)" '(' . for_expr ';' $@13 for_expr ';' $@14 for_expr ')' $@15 for_statement

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    $défaut  réduction par utilisation de la règle 244 (for_expr)

    namespace_name                     aller à l'état 84
    for_expr                           aller à l'état 331
    non_empty_for_expr                 aller à l'état 332
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 333
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 184

   70 unticked_statement: "foreach (T_FOREACH)" '(' . variable "as (T_AS)" $@17 foreach_variable foreach_optional_arg ')' $@18 foreach_statement
   73                   | "foreach (T_FOREACH)" '(' . expr_without_variable "as (T_AS)" $@19 foreach_variable foreach_optional_arg ')' $@20 foreach_statement

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 334
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 195
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 335
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 185

   75 unticked_statement: "declare (T_DECLARE)" $@21 . '(' declare_list ')' declare_statement

    '('  décalage et aller à l'état 336


état 186

   53 unticked_statement: "switch (T_SWITCH)" parenthesis_expr . $@16 switch_case_list

    $défaut  réduction par utilisation de la règle 52 ($@16)

    $@16  aller à l'état 337


état 187

   54 unticked_statement: "break (T_BREAK)" ';' .

    $défaut  réduction par utilisation de la règle 54 (unticked_statement)


état 188

   55 unticked_statement: "break (T_BREAK)" expr . ';'
  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "or (T_LOGICAL_OR)"           décalage et aller à l'état 252
    "xor (T_LOGICAL_XOR)"         décalage et aller à l'état 253
    "and (T_LOGICAL_AND)"         décalage et aller à l'état 254
    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277
    ';'                           décalage et aller à l'état 338


état 189

   56 unticked_statement: "continue (T_CONTINUE)" ';' .

    $défaut  réduction par utilisation de la règle 56 (unticked_statement)


état 190

   57 unticked_statement: "continue (T_CONTINUE)" expr . ';'
  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "or (T_LOGICAL_OR)"           décalage et aller à l'état 252
    "xor (T_LOGICAL_XOR)"         décalage et aller à l'état 253
    "and (T_LOGICAL_AND)"         décalage et aller à l'état 254
    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277
    ';'                           décalage et aller à l'état 339


état 191

   81 unticked_statement: "goto (T_GOTO)" "identifier (T_STRING)" . ';'

    ';'  décalage et aller à l'état 340


état 192

   25 constant_declaration: "const (T_CONST)" "identifier (T_STRING)" . '=' static_scalar

    '='  décalage et aller à l'état 341


état 193

   58 unticked_statement: "return (T_RETURN)" ';' .

    $défaut  réduction par utilisation de la règle 58 (unticked_statement)


état 194

   59 unticked_statement: "return (T_RETURN)" expr_without_variable . ';'
  446 expr: expr_without_variable .

    ';'  décalage et aller à l'état 342

    $défaut  réduction par utilisation de la règle 446 (expr)


état 195

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "or (T_LOGICAL_OR)"           décalage et aller à l'état 252
    "xor (T_LOGICAL_XOR)"         décalage et aller à l'état 253
    "and (T_LOGICAL_AND)"         décalage et aller à l'état 254
    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277


état 196

   60 unticked_statement: "return (T_RETURN)" variable . ';'
  264 expr_without_variable: variable . '=' expr
  265                      | variable . '=' '&' variable
  267                      | variable . '=' '&' "new (T_NEW)" class_name_reference $@46 ctor_arguments
  269                      | variable . "+= (T_PLUS_EQUAL)" expr
  270                      | variable . "-= (T_MINUS_EQUAL)" expr
  271                      | variable . "*= (T_MUL_EQUAL)" expr
  272                      | variable . "/= (T_DIV_EQUAL)" expr
  273                      | variable . ".= (T_CONCAT_EQUAL)" expr
  274                      | variable . "%= (T_MOD_EQUAL)" expr
  275                      | variable . "&= (T_AND_EQUAL)" expr
  276                      | variable . "|= (T_OR_EQUAL)" expr
  277                      | variable . "^= (T_XOR_EQUAL)" expr
  278                      | variable . "<<= (T_SL_EQUAL)" expr
  279                      | variable . ">>= (T_SR_EQUAL)" expr
  449 r_variable: variable .
  451 rw_variable: variable .

    '='                    décalage et aller à l'état 281
    ">>= (T_SR_EQUAL)"     décalage et aller à l'état 282
    "<<= (T_SL_EQUAL)"     décalage et aller à l'état 283
    "^= (T_XOR_EQUAL)"     décalage et aller à l'état 284
    "|= (T_OR_EQUAL)"      décalage et aller à l'état 285
    "&= (T_AND_EQUAL)"     décalage et aller à l'état 286
    "%= (T_MOD_EQUAL)"     décalage et aller à l'état 287
    ".= (T_CONCAT_EQUAL)"  décalage et aller à l'état 288
    "/= (T_DIV_EQUAL)"     décalage et aller à l'état 289
    "*= (T_MUL_EQUAL)"     décalage et aller à l'état 290
    "-= (T_MINUS_EQUAL)"   décalage et aller à l'état 291
    "+= (T_PLUS_EQUAL)"    décalage et aller à l'état 292
    ';'                    décalage et aller à l'état 343

    "-- (T_DEC)"  réduction par utilisation de la règle 451 (rw_variable)
    "++ (T_INC)"  réduction par utilisation de la règle 451 (rw_variable)
    $défaut      réduction par utilisation de la règle 449 (r_variable)


état 197

   79 unticked_statement: "try (T_TRY)" $@22 . '{' inner_statement_list '}' catch_statement $@23 finally_statement

    '{'  décalage et aller à l'état 344


état 198

   80 unticked_statement: "throw (T_THROW)" expr . ';'
  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "or (T_LOGICAL_OR)"           décalage et aller à l'état 252
    "xor (T_LOGICAL_XOR)"         décalage et aller à l'état 253
    "and (T_LOGICAL_AND)"         décalage et aller à l'état 254
    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277
    ';'                           décalage et aller à l'état 345


état 199

   22 use_declaration: "\\ (T_NS_SEPARATOR)" . namespace_name
   23                | "\\ (T_NS_SEPARATOR)" . namespace_name "as (T_AS)" "identifier (T_STRING)"

    "identifier (T_STRING)"  décalage et aller à l'état 123

    namespace_name  aller à l'état 346


état 200

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
   20 use_declaration: namespace_name .
   21                | namespace_name . "as (T_AS)" "identifier (T_STRING)"

    "as (T_AS)"            décalage et aller à l'état 347
    "\\ (T_NS_SEPARATOR)"  décalage et aller à l'état 239

    $défaut  réduction par utilisation de la règle 20 (use_declaration)


état 201

   16 top_statement: "use (T_USE)" use_declarations . ';'
   18 use_declarations: use_declarations . ',' use_declaration

    ','  décalage et aller à l'état 348
    ';'  décalage et aller à l'état 349


état 202

   19 use_declarations: use_declaration .

    $défaut  réduction par utilisation de la règle 19 (use_declarations)


état 203

  186 global_var: "variable (T_VARIABLE)" .

    $défaut  réduction par utilisation de la règle 186 (global_var)


état 204

  187 global_var: '$' . r_variable
  188           | '$' . '{' expr '}'

    "identifier (T_STRING)"    décalage et aller à l'état 123
    "variable (T_VARIABLE)"    décalage et aller à l'état 35
    "static (T_STATIC)"        décalage et aller à l'état 148
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 149
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 150
    '{'                        décalage et aller à l'état 350
    '$'                        décalage et aller à l'état 81

    namespace_name                     aller à l'état 151
    function_call                      aller à l'état 101
    class_name                         aller à l'état 152
    r_variable                         aller à l'état 351
    variable                           aller à l'état 352
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 155
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118


état 205

   62 unticked_statement: "global (T_GLOBAL)" global_var_list . ';'
  184 global_var_list: global_var_list . ',' global_var

    ','  décalage et aller à l'état 353
    ';'  décalage et aller à l'état 354


état 206

  185 global_var_list: global_var .

    $défaut  réduction par utilisation de la règle 185 (global_var_list)


état 207

  114 class_entry_type: "final (T_FINAL)" "class (T_CLASS)" .

    $défaut  réduction par utilisation de la règle 114 (class_entry_type)


état 208

  112 class_entry_type: "abstract (T_ABSTRACT)" "class (T_CLASS)" .

    $défaut  réduction par utilisation de la règle 112 (class_entry_type)


état 209

  191 static_var_list: "variable (T_VARIABLE)" .
  192                | "variable (T_VARIABLE)" . '=' static_scalar

    '='  décalage et aller à l'état 355

    $défaut  réduction par utilisation de la règle 191 (static_var_list)


état 210

   63 unticked_statement: "static (T_STATIC)" static_var_list . ';'
  189 static_var_list: static_var_list . ',' "variable (T_VARIABLE)"
  190                | static_var_list . ',' "variable (T_VARIABLE)" '=' static_scalar

    ','  décalage et aller à l'état 356
    ';'  décalage et aller à l'état 357


état 211

  346 expr_without_variable: "static (T_STATIC)" function . is_reference @57 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'

    '&'  décalage et aller à l'état 248

    $défaut  réduction par utilisation de la règle 103 (is_reference)

    is_reference  aller à l'état 358


état 212

   67 unticked_statement: "unset (T_UNSET)" '(' . unset_variables ')' ';'

    "identifier (T_STRING)"    décalage et aller à l'état 123
    "variable (T_VARIABLE)"    décalage et aller à l'état 35
    "static (T_STATIC)"        décalage et aller à l'état 148
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 149
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 150
    '$'                        décalage et aller à l'état 81

    namespace_name                     aller à l'état 151
    unset_variables                    aller à l'état 359
    unset_variable                     aller à l'état 360
    function_call                      aller à l'état 101
    class_name                         aller à l'état 152
    variable                           aller à l'état 361
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 155
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118


état 213

  528 internal_functions_in_yacc: "isset (T_ISSET)" '(' . isset_variables ')'

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 362
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 195
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 363
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    isset_variables                    aller à l'état 364
    isset_variable                     aller à l'état 365
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 214

  529 internal_functions_in_yacc: "empty (T_EMPTY)" '(' . variable ')'
  530                           | "empty (T_EMPTY)" '(' . expr_without_variable ')'

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 366
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 195
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 367
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 215

   10 top_statement: "__halt_compiler (T_HALT_COMPILER)" '(' . ')' ';'

    ')'  décalage et aller à l'état 368


état 216

  263 expr_without_variable: "list (T_LIST)" '(' . $@45 assignment_list ')' '=' expr

    $défaut  réduction par utilisation de la règle 262 ($@45)

    $@45  aller à l'état 369


état 217

  354 combined_scalar: "array (T_ARRAY)" '(' . array_pair_list ')'

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '&'                                           décalage et aller à l'état 157
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    $défaut  réduction par utilisation de la règle 504 (array_pair_list)

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 158
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    array_pair_list                    aller à l'état 370
    non_empty_array_pair_list          aller à l'état 160
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 218

  518 encaps_var: "variable (T_VARIABLE)" .
  520           | "variable (T_VARIABLE)" . '[' $@75 encaps_var_offset ']'
  521           | "variable (T_VARIABLE)" . "-> (T_OBJECT_OPERATOR)" "identifier (T_STRING)"

    '['                       décalage et aller à l'état 371
    "-> (T_OBJECT_OPERATOR)"  décalage et aller à l'état 372

    $défaut  réduction par utilisation de la règle 518 (encaps_var)


état 219

  413 common_scalar: "heredoc start (T_START_HEREDOC)" "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . "heredoc end (T_END_HEREDOC)"
  517 encaps_list: "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . encaps_var

    "variable (T_VARIABLE)"            décalage et aller à l'état 218
    "heredoc end (T_END_HEREDOC)"      décalage et aller à l'état 373
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"  décalage et aller à l'état 221
    "{$ (T_CURLY_OPEN)"                décalage et aller à l'état 222

    encaps_var  aller à l'état 374


état 220

  414 common_scalar: "heredoc start (T_START_HEREDOC)" "heredoc end (T_END_HEREDOC)" .

    $défaut  réduction par utilisation de la règle 414 (common_scalar)


état 221

  522 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" . expr '}'
  523           | "${ (T_DOLLAR_OPEN_CURLY_BRACES)" . "variable name (T_STRING_VARNAME)" '[' expr ']' '}'

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 375
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 376
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 222

  524 encaps_var: "{$ (T_CURLY_OPEN)" . variable '}'

    "identifier (T_STRING)"    décalage et aller à l'état 123
    "variable (T_VARIABLE)"    décalage et aller à l'état 35
    "static (T_STATIC)"        décalage et aller à l'état 148
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 149
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 150
    '$'                        décalage et aller à l'état 81

    namespace_name                     aller à l'état 151
    function_call                      aller à l'état 101
    class_name                         aller à l'état 152
    variable                           aller à l'état 377
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 155
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118


état 223

  435 scalar: "heredoc start (T_START_HEREDOC)" encaps_list . "heredoc end (T_END_HEREDOC)"
  514 encaps_list: encaps_list . encaps_var
  515            | encaps_list . "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"

    "variable (T_VARIABLE)"                                     décalage et aller à l'état 218
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  décalage et aller à l'état 378
    "heredoc end (T_END_HEREDOC)"                               décalage et aller à l'état 379
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           décalage et aller à l'état 221
    "{$ (T_CURLY_OPEN)"                                         décalage et aller à l'état 222

    encaps_var  aller à l'état 380


état 224

  516 encaps_list: encaps_var .

    $défaut  réduction par utilisation de la règle 516 (encaps_list)


état 225

  366 function_call: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name @59 function_call_parameter_list
  381 class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name
  431 scalar: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  décalage et aller à l'état 123

    namespace_name  aller à l'état 381


état 226

   15 top_statement: "namespace (T_NAMESPACE)" '{' . $@3 top_statement_list '}'

    $défaut  réduction par utilisation de la règle 14 ($@3)

    $@3  aller à l'état 382


état 227

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
   11 top_statement: "namespace (T_NAMESPACE)" namespace_name . ';'
   13              | "namespace (T_NAMESPACE)" namespace_name . '{' $@2 top_statement_list '}'

    "\\ (T_NS_SEPARATOR)"  décalage et aller à l'état 239
    ';'                    décalage et aller à l'état 383
    '{'                    décalage et aller à l'état 384


état 228

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  368 function_call: "\\ (T_NS_SEPARATOR)" namespace_name . @60 function_call_parameter_list
  382 class_name: "\\ (T_NS_SEPARATOR)" namespace_name .
  432 scalar: "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  décalage et aller à l'état 239

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  réduction par utilisation de la règle 382 (class_name)
    '('                            réduction par utilisation de la règle 367 (@60)
    $défaut                       réduction par utilisation de la règle 432 (scalar)

    @60  aller à l'état 385


état 229

  318 expr_without_variable: new_expr .
  320                      | '(' new_expr . ')' @51 instance_call

    ')'  décalage et aller à l'état 386

    ')'       [réduction par utilisation de la règle 318 (expr_without_variable)]
    $défaut  réduction par utilisation de la règle 318 (expr_without_variable)


état 230

  448 parenthesis_expr: '(' yield_expr . ')'

    ')'  décalage et aller à l'état 387


état 231

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  447 parenthesis_expr: '(' expr . ')'

    "or (T_LOGICAL_OR)"           décalage et aller à l'état 252
    "xor (T_LOGICAL_XOR)"         décalage et aller à l'état 253
    "and (T_LOGICAL_AND)"         décalage et aller à l'état 254
    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277
    ')'                           décalage et aller à l'état 388


état 232

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
   35 unticked_statement: '{' inner_statement_list . '}'

    '}'  décalage et aller à l'état 389

    $défaut  réduction par utilisation de la règle 26 ($@4)

    $@4  aller à l'état 390


état 233

  485 compound_variable: '$' '{' . expr '}'

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 391
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 234

  399 backticks_expr: "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" .
  517 encaps_list: "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . encaps_var

    "variable (T_VARIABLE)"            décalage et aller à l'état 218
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"  décalage et aller à l'état 221
    "{$ (T_CURLY_OPEN)"                décalage et aller à l'état 222

    $défaut  réduction par utilisation de la règle 399 (backticks_expr)

    encaps_var  aller à l'état 374


état 235

  340 expr_without_variable: '`' backticks_expr . '`'

    '`'  décalage et aller à l'état 392


état 236

  400 backticks_expr: encaps_list .
  514 encaps_list: encaps_list . encaps_var
  515            | encaps_list . "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"

    "variable (T_VARIABLE)"                                     décalage et aller à l'état 218
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  décalage et aller à l'état 378
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           décalage et aller à l'état 221
    "{$ (T_CURLY_OPEN)"                                         décalage et aller à l'état 222

    $défaut  réduction par utilisation de la règle 400 (backticks_expr)

    encaps_var  aller à l'état 380


état 237

  517 encaps_list: "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . encaps_var

    "variable (T_VARIABLE)"            décalage et aller à l'état 218
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"  décalage et aller à l'état 221
    "{$ (T_CURLY_OPEN)"                décalage et aller à l'état 222

    encaps_var  aller à l'état 374


état 238

  434 scalar: '"' encaps_list . '"'
  514 encaps_list: encaps_list . encaps_var
  515            | encaps_list . "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"

    "variable (T_VARIABLE)"                                     décalage et aller à l'état 218
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  décalage et aller à l'état 378
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           décalage et aller à l'état 221
    "{$ (T_CURLY_OPEN)"                                         décalage et aller à l'état 222
    '"'                                                         décalage et aller à l'état 393

    encaps_var  aller à l'état 380


état 239

    6 namespace_name: namespace_name "\\ (T_NS_SEPARATOR)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  décalage et aller à l'état 394


état 240

  364 function_call: namespace_name @58 . function_call_parameter_list

    '('  décalage et aller à l'état 395

    function_call_parameter_list  aller à l'état 396


état 241

   24 constant_declaration: constant_declaration ',' . "identifier (T_STRING)" '=' static_scalar

    "identifier (T_STRING)"  décalage et aller à l'état 397


état 242

   17 top_statement: constant_declaration ';' .

    $défaut  réduction par utilisation de la règle 17 (top_statement)


état 243

  108 unticked_class_declaration_statement: class_entry_type "identifier (T_STRING)" . extends_from $@32 implements_list '{' class_statement_list '}'

    "extends (T_EXTENDS)"  décalage et aller à l'état 398

    $défaut  réduction par utilisation de la règle 115 (extends_from)

    extends_from  aller à l'état 399


état 244

  110 unticked_class_declaration_statement: interface_entry "identifier (T_STRING)" . $@33 interface_extends_list '{' class_statement_list '}'

    $défaut  réduction par utilisation de la règle 109 ($@33)

    $@33  aller à l'état 400


état 245

   61 unticked_statement: yield_expr ';' .

    $défaut  réduction par utilisation de la règle 61 (unticked_statement)


état 246

  352 combined_scalar_offset: combined_scalar_offset '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    $défaut  réduction par utilisation de la règle 486 (dim_offset)

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 325
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    dim_offset                         aller à l'état 401
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 247

  351 combined_scalar_offset: combined_scalar '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    $défaut  réduction par utilisation de la règle 486 (dim_offset)

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 325
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    dim_offset                         aller à l'état 402
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 248

  104 is_reference: '&' .

    $défaut  réduction par utilisation de la règle 104 (is_reference)


état 249

  106 unticked_function_declaration_statement: function is_reference . "identifier (T_STRING)" $@31 '(' parameter_list ')' '{' inner_statement_list '}'
  344 expr_without_variable: function is_reference . @56 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'

    "identifier (T_STRING)"  décalage et aller à l'état 403

    $défaut  réduction par utilisation de la règle 343 (@56)

    @56  aller à l'état 404


état 250

  474 array_function_dereference: function_call $@72 . '[' dim_offset ']'

    '['  décalage et aller à l'état 405


état 251

  370 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_name @61 function_call_parameter_list
  372              | class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects $@62 function_call_parameter_list
  469 static_member: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects
  541 class_constant: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . "identifier (T_STRING)"
  544 class_name_scalar: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . "class (T_CLASS)"

    "identifier (T_STRING)"  décalage et aller à l'état 406
    "variable (T_VARIABLE)"  décalage et aller à l'état 35
    "class (T_CLASS)"        décalage et aller à l'état 407
    '{'                      décalage et aller à l'état 408
    '$'                      décalage et aller à l'état 81

    variable_without_objects   aller à l'état 409
    reference_variable         aller à l'état 410
    compound_variable          aller à l'état 117
    variable_name              aller à l'état 411
    simple_indirect_reference  aller à l'état 412


état 252

  289 expr_without_variable: expr "or (T_LOGICAL_OR)" . $@49 expr

    $défaut  réduction par utilisation de la règle 288 ($@49)

    $@49  aller à l'état 413


état 253

  292 expr_without_variable: expr "xor (T_LOGICAL_XOR)" . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 414
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 254

  291 expr_without_variable: expr "and (T_LOGICAL_AND)" . $@50 expr

    $défaut  réduction par utilisation de la règle 290 ($@50)

    $@50  aller à l'état 415


état 255

  323 expr_without_variable: expr '?' . $@52 expr ':' $@53 expr
  325                      | expr '?' . ':' $@54 expr

    ':'  décalage et aller à l'état 416

    $défaut  réduction par utilisation de la règle 321 ($@52)

    $@52  aller à l'état 417


état 256

  285 expr_without_variable: expr "|| (T_BOOLEAN_OR)" . $@47 expr

    $défaut  réduction par utilisation de la règle 284 ($@47)

    $@47  aller à l'état 418


état 257

  287 expr_without_variable: expr "&& (T_BOOLEAN_AND)" . $@48 expr

    $défaut  réduction par utilisation de la règle 286 ($@48)

    $@48  aller à l'état 419


état 258

  293 expr_without_variable: expr '|' . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 420
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 259

  295 expr_without_variable: expr '^' . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 421
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 260

  294 expr_without_variable: expr '&' . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 422
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 261

  309 expr_without_variable: expr "!== (T_IS_NOT_IDENTICAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 423
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 262

  308 expr_without_variable: expr "=== (T_IS_IDENTICAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 424
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 263

  311 expr_without_variable: expr "!= (T_IS_NOT_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 425
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 264

  310 expr_without_variable: expr "== (T_IS_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 426
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 265

  312 expr_without_variable: expr '<' . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 427
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 266

  314 expr_without_variable: expr '>' . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 428
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 267

  315 expr_without_variable: expr ">= (T_IS_GREATER_OR_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 429
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 268

  313 expr_without_variable: expr "<= (T_IS_SMALLER_OR_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 430
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 269

  303 expr_without_variable: expr ">> (T_SR)" . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 431
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 270

  302 expr_without_variable: expr "<< (T_SL)" . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 432
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 271

  297 expr_without_variable: expr '+' . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 433
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 272

  298 expr_without_variable: expr '-' . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 434
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 273

  296 expr_without_variable: expr '.' . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 435
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 274

  299 expr_without_variable: expr '*' . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 436
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 275

  300 expr_without_variable: expr '/' . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 437
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 276

  301 expr_without_variable: expr '%' . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 438
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 277

  316 expr_without_variable: expr "instanceof (T_INSTANCEOF)" . class_name_reference

    "identifier (T_STRING)"    décalage et aller à l'état 123
    "variable (T_VARIABLE)"    décalage et aller à l'état 35
    "static (T_STATIC)"        décalage et aller à l'état 148
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 162
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 163
    '$'                        décalage et aller à l'état 81

    namespace_name                aller à l'état 164
    class_name                    aller à l'état 165
    class_name_reference          aller à l'état 439
    dynamic_class_name_reference  aller à l'état 167
    static_member                 aller à l'état 111
    variable_class_name           aller à l'état 168
    base_variable                 aller à l'état 169
    reference_variable            aller à l'état 170
    compound_variable             aller à l'état 117
    simple_indirect_reference     aller à l'état 171


état 278

   66 unticked_statement: expr ';' .

    $défaut  réduction par utilisation de la règle 66 (unticked_statement)


état 279

  282 expr_without_variable: rw_variable "-- (T_DEC)" .

    $défaut  réduction par utilisation de la règle 282 (expr_without_variable)


état 280

  280 expr_without_variable: rw_variable "++ (T_INC)" .

    $défaut  réduction par utilisation de la règle 280 (expr_without_variable)


état 281

  264 expr_without_variable: variable '=' . expr
  265                      | variable '=' . '&' variable
  267                      | variable '=' . '&' "new (T_NEW)" class_name_reference $@46 ctor_arguments

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '&'                                           décalage et aller à l'état 440
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 441
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 282

  279 expr_without_variable: variable ">>= (T_SR_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 442
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 283

  278 expr_without_variable: variable "<<= (T_SL_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 443
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 284

  277 expr_without_variable: variable "^= (T_XOR_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 444
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 285

  276 expr_without_variable: variable "|= (T_OR_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 445
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 286

  275 expr_without_variable: variable "&= (T_AND_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 446
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 287

  274 expr_without_variable: variable "%= (T_MOD_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 447
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 288

  273 expr_without_variable: variable ".= (T_CONCAT_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 448
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 289

  272 expr_without_variable: variable "/= (T_DIV_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 449
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 290

  271 expr_without_variable: variable "*= (T_MUL_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 450
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 291

  270 expr_without_variable: variable "-= (T_MINUS_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 451
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 292

  269 expr_without_variable: variable "+= (T_PLUS_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 452
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 293

  378 function_call: variable_without_objects $@65 . function_call_parameter_list

    '('  décalage et aller à l'état 395

    function_call_parameter_list  aller à l'état 453


état 294

  374 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_name $@63 function_call_parameter_list
  376              | variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects $@64 function_call_parameter_list
  470 static_member: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects
  542 class_constant: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  décalage et aller à l'état 454
    "variable (T_VARIABLE)"  décalage et aller à l'état 35
    '{'                      décalage et aller à l'état 408
    '$'                      décalage et aller à l'état 81

    variable_without_objects   aller à l'état 455
    reference_variable         aller à l'état 410
    compound_variable          aller à l'état 117
    variable_name              aller à l'état 456
    simple_indirect_reference  aller à l'état 412


état 295

  472 array_function_dereference: array_function_dereference '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    $défaut  réduction par utilisation de la règle 486 (dim_offset)

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 325
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    dim_offset                         aller à l'état 457
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 296

  454 variable: base_variable_with_function_calls "-> (T_OBJECT_OPERATOR)" . $@68 object_property $@69 method_or_not variable_properties

    $défaut  réduction par utilisation de la règle 452 ($@68)

    $@68  aller à l'état 458


état 297

  481 reference_variable: reference_variable '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    $défaut  réduction par utilisation de la règle 486 (dim_offset)

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 325
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    dim_offset                         aller à l'état 459
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 298

  482 reference_variable: reference_variable '{' . expr '}'

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 460
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 299

  485 compound_variable: '$' . '{' expr '}'
  497 simple_indirect_reference: simple_indirect_reference '$' .

    '{'  décalage et aller à l'état 233

    $défaut  réduction par utilisation de la règle 497 (simple_indirect_reference)


état 300

  468 variable_without_objects: simple_indirect_reference reference_variable .
  479 base_variable: simple_indirect_reference reference_variable .
  481 reference_variable: reference_variable . '[' dim_offset ']'
  482                   | reference_variable . '{' expr '}'

    '['  décalage et aller à l'état 297
    '{'  décalage et aller à l'état 298

    '('       réduction par utilisation de la règle 468 (variable_without_objects)
    $défaut  réduction par utilisation de la règle 479 (base_variable)


état 301

  344 expr_without_variable: function is_reference . @56 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'

    $défaut  réduction par utilisation de la règle 343 (@56)

    @56  aller à l'état 404


état 302

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  533 internal_functions_in_yacc: "eval (T_EVAL)" '(' expr . ')'

    "or (T_LOGICAL_OR)"           décalage et aller à l'état 252
    "xor (T_LOGICAL_XOR)"         décalage et aller à l'état 253
    "and (T_LOGICAL_AND)"         décalage et aller à l'état 254
    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277
    ')'                           décalage et aller à l'état 461


état 303

  349 yield_expr: "yield (T_YIELD)" expr "=> (T_DOUBLE_ARROW)" . expr_without_variable
  350           | "yield (T_YIELD)" expr "=> (T_DOUBLE_ARROW)" . variable

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 462
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 195
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 463
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 304

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  336                      | '@' $@55 expr .

    $défaut  réduction par utilisation de la règle 336 (expr_without_variable)


état 305

  366 function_call: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name @59 function_call_parameter_list
  381 class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  décalage et aller à l'état 123

    namespace_name  aller à l'état 464


état 306

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  368 function_call: "\\ (T_NS_SEPARATOR)" namespace_name . @60 function_call_parameter_list
  382 class_name: "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  décalage et aller à l'état 239

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  réduction par utilisation de la règle 382 (class_name)
    $défaut                       réduction par utilisation de la règle 367 (@60)

    @60  aller à l'état 385


état 307

  370 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_name @61 function_call_parameter_list
  372              | class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects $@62 function_call_parameter_list
  469 static_member: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects

    "identifier (T_STRING)"  décalage et aller à l'état 465
    "variable (T_VARIABLE)"  décalage et aller à l'état 35
    '{'                      décalage et aller à l'état 408
    '$'                      décalage et aller à l'état 81

    variable_without_objects   aller à l'état 409
    reference_variable         aller à l'état 410
    compound_variable          aller à l'état 117
    variable_name              aller à l'état 411
    simple_indirect_reference  aller à l'état 412


état 308

  374 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_name $@63 function_call_parameter_list
  376              | variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects $@64 function_call_parameter_list
  470 static_member: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects

    "identifier (T_STRING)"  décalage et aller à l'état 465
    "variable (T_VARIABLE)"  décalage et aller à l'état 35
    '{'                      décalage et aller à l'état 408
    '$'                      décalage et aller à l'état 81

    variable_without_objects   aller à l'état 455
    reference_variable         aller à l'état 410
    compound_variable          aller à l'état 117
    variable_name              aller à l'état 456
    simple_indirect_reference  aller à l'état 412


état 309

  513 non_empty_array_pair_list: '&' w_variable .

    $défaut  réduction par utilisation de la règle 513 (non_empty_array_pair_list)


état 310

  450 w_variable: variable .

    $défaut  réduction par utilisation de la règle 450 (w_variable)


état 311

  508 non_empty_array_pair_list: expr "=> (T_DOUBLE_ARROW)" . expr
  512                          | expr "=> (T_DOUBLE_ARROW)" . '&' w_variable

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '&'                                           décalage et aller à l'état 466
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 467
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 312

  355 combined_scalar: '[' array_pair_list ']' .

    $défaut  réduction par utilisation de la règle 355 (combined_scalar)


état 313

  440 possible_comma: ',' .
  506 non_empty_array_pair_list: non_empty_array_pair_list ',' . expr "=> (T_DOUBLE_ARROW)" expr
  507                          | non_empty_array_pair_list ',' . expr
  510                          | non_empty_array_pair_list ',' . expr "=> (T_DOUBLE_ARROW)" '&' w_variable
  511                          | non_empty_array_pair_list ',' . '&' w_variable

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '&'                                           décalage et aller à l'état 468
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    $défaut  réduction par utilisation de la règle 440 (possible_comma)

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 469
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 314

  505 array_pair_list: non_empty_array_pair_list possible_comma .

    $défaut  réduction par utilisation de la règle 505 (array_pair_list)


état 315

  381 class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  décalage et aller à l'état 123

    namespace_name  aller à l'état 470


état 316

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  382 class_name: "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  décalage et aller à l'état 239

    $défaut  réduction par utilisation de la règle 382 (class_name)


état 317

  469 static_member: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects

    "variable (T_VARIABLE)"  décalage et aller à l'état 35
    '$'                      décalage et aller à l'état 81

    variable_without_objects   aller à l'état 471
    reference_variable         aller à l'état 410
    compound_variable          aller à l'état 117
    simple_indirect_reference  aller à l'état 412


état 318

  261 new_expr: "new (T_NEW)" class_name_reference $@44 . ctor_arguments

    '('  décalage et aller à l'état 395

    $défaut  réduction par utilisation de la règle 401 (ctor_arguments)

    function_call_parameter_list  aller à l'état 472
    ctor_arguments                aller à l'état 473


état 319

  470 static_member: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects

    "variable (T_VARIABLE)"  décalage et aller à l'état 35
    '$'                      décalage et aller à l'état 81

    variable_without_objects   aller à l'état 474
    reference_variable         aller à l'état 410
    compound_variable          aller à l'état 117
    simple_indirect_reference  aller à l'état 412


état 320

  390 dynamic_class_name_reference: base_variable "-> (T_OBJECT_OPERATOR)" . $@66 object_property $@67 dynamic_class_name_variable_properties

    $défaut  réduction par utilisation de la règle 388 ($@66)

    $@66  aller à l'état 475


état 321

  479 base_variable: simple_indirect_reference reference_variable .
  481 reference_variable: reference_variable . '[' dim_offset ']'
  482                   | reference_variable . '{' expr '}'

    '['  décalage et aller à l'état 297
    '{'  décalage et aller à l'état 298

    $défaut  réduction par utilisation de la règle 479 (base_variable)


état 322

  396 exit_expr: '(' ')' .

    $défaut  réduction par utilisation de la règle 396 (exit_expr)


état 323

   41 unticked_statement: "if (T_IF)" parenthesis_expr ':' . $@7 inner_statement_list $@8 new_elseif_list new_else_single "endif (T_ENDIF)" ';'

    $défaut  réduction par utilisation de la règle 39 ($@7)

    $@7  aller à l'état 476


état 324

   38 unticked_statement: "if (T_IF)" parenthesis_expr $@5 . statement $@6 elseif_list else_single

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 11
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "if (T_IF)"                                   décalage et aller à l'état 30
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 33
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    T_INLINE_HTML                                 décalage et aller à l'état 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "echo (T_ECHO)"                               décalage et aller à l'état 38
    "do (T_DO)"                                   décalage et aller à l'état 39
    "while (T_WHILE)"                             décalage et aller à l'état 40
    "for (T_FOR)"                                 décalage et aller à l'état 41
    "foreach (T_FOREACH)"                         décalage et aller à l'état 42
    "declare (T_DECLARE)"                         décalage et aller à l'état 43
    "switch (T_SWITCH)"                           décalage et aller à l'état 44
    "break (T_BREAK)"                             décalage et aller à l'état 45
    "continue (T_CONTINUE)"                       décalage et aller à l'état 46
    "goto (T_GOTO)"                               décalage et aller à l'état 47
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "return (T_RETURN)"                           décalage et aller à l'état 50
    "try (T_TRY)"                                 décalage et aller à l'état 51
    "throw (T_THROW)"                             décalage et aller à l'état 52
    "global (T_GLOBAL)"                           décalage et aller à l'état 54
    "static (T_STATIC)"                           décalage et aller à l'état 57
    "unset (T_UNSET)"                             décalage et aller à l'état 58
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    ';'                                           décalage et aller à l'état 79
    '{'                                           décalage et aller à l'état 80
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    statement                          aller à l'état 477
    unticked_statement                 aller à l'état 88
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    yield_expr                         aller à l'état 97
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 105
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 325

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  487 dim_offset: expr .

    "or (T_LOGICAL_OR)"           décalage et aller à l'état 252
    "xor (T_LOGICAL_XOR)"         décalage et aller à l'état 253
    "and (T_LOGICAL_AND)"         décalage et aller à l'état 254
    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 487 (dim_offset)


état 326

  353 combined_scalar_offset: "quoted-string (T_CONSTANT_ENCAPSED_STRING)" '[' dim_offset . ']'

    ']'  décalage et aller à l'état 478


état 327

  242 echo_expr_list: echo_expr_list ',' . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 479
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 328

   64 unticked_statement: "echo (T_ECHO)" echo_expr_list ';' .

    $défaut  réduction par utilisation de la règle 64 (unticked_statement)


état 329

   47 unticked_statement: "do (T_DO)" $@11 statement . "while (T_WHILE)" $@12 parenthesis_expr ';'

    "while (T_WHILE)"  décalage et aller à l'état 480


état 330

   44 unticked_statement: "while (T_WHILE)" $@9 parenthesis_expr . @10 while_statement

    $défaut  réduction par utilisation de la règle 43 (@10)

    @10  aller à l'état 481


état 331

   51 unticked_statement: "for (T_FOR)" '(' for_expr . ';' $@13 for_expr ';' $@14 for_expr ')' $@15 for_statement

    ';'  décalage et aller à l'état 482


état 332

  245 for_expr: non_empty_for_expr .
  247 non_empty_for_expr: non_empty_for_expr . ',' $@41 expr

    ','  décalage et aller à l'état 483

    $défaut  réduction par utilisation de la règle 245 (for_expr)


état 333

  248 non_empty_for_expr: expr .
  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "or (T_LOGICAL_OR)"           décalage et aller à l'état 252
    "xor (T_LOGICAL_XOR)"         décalage et aller à l'état 253
    "and (T_LOGICAL_AND)"         décalage et aller à l'état 254
    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 248 (non_empty_for_expr)


état 334

   73 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable . "as (T_AS)" $@19 foreach_variable foreach_optional_arg ')' $@20 foreach_statement
  446 expr: expr_without_variable .

    "as (T_AS)"  décalage et aller à l'état 484

    $défaut  réduction par utilisation de la règle 446 (expr)


état 335

   70 unticked_statement: "foreach (T_FOREACH)" '(' variable . "as (T_AS)" $@17 foreach_variable foreach_optional_arg ')' $@18 foreach_statement
  264 expr_without_variable: variable . '=' expr
  265                      | variable . '=' '&' variable
  267                      | variable . '=' '&' "new (T_NEW)" class_name_reference $@46 ctor_arguments
  269                      | variable . "+= (T_PLUS_EQUAL)" expr
  270                      | variable . "-= (T_MINUS_EQUAL)" expr
  271                      | variable . "*= (T_MUL_EQUAL)" expr
  272                      | variable . "/= (T_DIV_EQUAL)" expr
  273                      | variable . ".= (T_CONCAT_EQUAL)" expr
  274                      | variable . "%= (T_MOD_EQUAL)" expr
  275                      | variable . "&= (T_AND_EQUAL)" expr
  276                      | variable . "|= (T_OR_EQUAL)" expr
  277                      | variable . "^= (T_XOR_EQUAL)" expr
  278                      | variable . "<<= (T_SL_EQUAL)" expr
  279                      | variable . ">>= (T_SR_EQUAL)" expr
  449 r_variable: variable .
  451 rw_variable: variable .

    '='                    décalage et aller à l'état 281
    ">>= (T_SR_EQUAL)"     décalage et aller à l'état 282
    "<<= (T_SL_EQUAL)"     décalage et aller à l'état 283
    "^= (T_XOR_EQUAL)"     décalage et aller à l'état 284
    "|= (T_OR_EQUAL)"      décalage et aller à l'état 285
    "&= (T_AND_EQUAL)"     décalage et aller à l'état 286
    "%= (T_MOD_EQUAL)"     décalage et aller à l'état 287
    ".= (T_CONCAT_EQUAL)"  décalage et aller à l'état 288
    "/= (T_DIV_EQUAL)"     décalage et aller à l'état 289
    "*= (T_MUL_EQUAL)"     décalage et aller à l'état 290
    "-= (T_MINUS_EQUAL)"   décalage et aller à l'état 291
    "+= (T_PLUS_EQUAL)"    décalage et aller à l'état 292
    "as (T_AS)"            décalage et aller à l'état 485

    "-- (T_DEC)"  réduction par utilisation de la règle 451 (rw_variable)
    "++ (T_INC)"  réduction par utilisation de la règle 451 (rw_variable)
    $défaut      réduction par utilisation de la règle 449 (r_variable)


état 336

   75 unticked_statement: "declare (T_DECLARE)" $@21 '(' . declare_list ')' declare_statement

    "identifier (T_STRING)"  décalage et aller à l'état 486

    declare_list  aller à l'état 487


état 337

   53 unticked_statement: "switch (T_SWITCH)" parenthesis_expr $@16 . switch_case_list

    ':'  décalage et aller à l'état 488
    '{'  décalage et aller à l'état 489

    switch_case_list  aller à l'état 490


état 338

   55 unticked_statement: "break (T_BREAK)" expr ';' .

    $défaut  réduction par utilisation de la règle 55 (unticked_statement)


état 339

   57 unticked_statement: "continue (T_CONTINUE)" expr ';' .

    $défaut  réduction par utilisation de la règle 57 (unticked_statement)


état 340

   81 unticked_statement: "goto (T_GOTO)" "identifier (T_STRING)" ';' .

    $défaut  réduction par utilisation de la règle 81 (unticked_statement)


état 341

   25 constant_declaration: "const (T_CONST)" "identifier (T_STRING)" '=' . static_scalar

    '+'                                           décalage et aller à l'état 491
    '-'                                           décalage et aller à l'état 492
    '['                                           décalage et aller à l'état 493
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 494
    "static (T_STATIC)"                           décalage et aller à l'état 148
    "array (T_ARRAY)"                             décalage et aller à l'état 495
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 496
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 497
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 498
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 499

    namespace_name            aller à l'état 500
    class_name                aller à l'état 501
    common_scalar             aller à l'état 502
    static_scalar             aller à l'état 503
    static_class_constant     aller à l'état 504
    static_class_name_scalar  aller à l'état 505


état 342

   59 unticked_statement: "return (T_RETURN)" expr_without_variable ';' .

    $défaut  réduction par utilisation de la règle 59 (unticked_statement)


état 343

   60 unticked_statement: "return (T_RETURN)" variable ';' .

    $défaut  réduction par utilisation de la règle 60 (unticked_statement)


état 344

   79 unticked_statement: "try (T_TRY)" $@22 '{' . inner_statement_list '}' catch_statement $@23 finally_statement

    $défaut  réduction par utilisation de la règle 28 (inner_statement_list)

    inner_statement_list  aller à l'état 506


état 345

   80 unticked_statement: "throw (T_THROW)" expr ';' .

    $défaut  réduction par utilisation de la règle 80 (unticked_statement)


état 346

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
   22 use_declaration: "\\ (T_NS_SEPARATOR)" namespace_name .
   23                | "\\ (T_NS_SEPARATOR)" namespace_name . "as (T_AS)" "identifier (T_STRING)"

    "as (T_AS)"            décalage et aller à l'état 507
    "\\ (T_NS_SEPARATOR)"  décalage et aller à l'état 239

    $défaut  réduction par utilisation de la règle 22 (use_declaration)


état 347

   21 use_declaration: namespace_name "as (T_AS)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  décalage et aller à l'état 508


état 348

   18 use_declarations: use_declarations ',' . use_declaration

    "identifier (T_STRING)"  décalage et aller à l'état 123
    "\\ (T_NS_SEPARATOR)"    décalage et aller à l'état 199

    namespace_name   aller à l'état 200
    use_declaration  aller à l'état 509


état 349

   16 top_statement: "use (T_USE)" use_declarations ';' .

    $défaut  réduction par utilisation de la règle 16 (top_statement)


état 350

  188 global_var: '$' '{' . expr '}'

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 510
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 351

  187 global_var: '$' r_variable .

    $défaut  réduction par utilisation de la règle 187 (global_var)


état 352

  449 r_variable: variable .

    $défaut  réduction par utilisation de la règle 449 (r_variable)


état 353

  184 global_var_list: global_var_list ',' . global_var

    "variable (T_VARIABLE)"  décalage et aller à l'état 203
    '$'                      décalage et aller à l'état 204

    global_var  aller à l'état 511


état 354

   62 unticked_statement: "global (T_GLOBAL)" global_var_list ';' .

    $défaut  réduction par utilisation de la règle 62 (unticked_statement)


état 355

  192 static_var_list: "variable (T_VARIABLE)" '=' . static_scalar

    '+'                                           décalage et aller à l'état 491
    '-'                                           décalage et aller à l'état 492
    '['                                           décalage et aller à l'état 493
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 494
    "static (T_STATIC)"                           décalage et aller à l'état 148
    "array (T_ARRAY)"                             décalage et aller à l'état 495
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 496
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 497
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 498
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 499

    namespace_name            aller à l'état 500
    class_name                aller à l'état 501
    common_scalar             aller à l'état 502
    static_scalar             aller à l'état 512
    static_class_constant     aller à l'état 504
    static_class_name_scalar  aller à l'état 505


état 356

  189 static_var_list: static_var_list ',' . "variable (T_VARIABLE)"
  190                | static_var_list ',' . "variable (T_VARIABLE)" '=' static_scalar

    "variable (T_VARIABLE)"  décalage et aller à l'état 513


état 357

   63 unticked_statement: "static (T_STATIC)" static_var_list ';' .

    $défaut  réduction par utilisation de la règle 63 (unticked_statement)


état 358

  346 expr_without_variable: "static (T_STATIC)" function is_reference . @57 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'

    $défaut  réduction par utilisation de la règle 345 (@57)

    @57  aller à l'état 514


état 359

   67 unticked_statement: "unset (T_UNSET)" '(' unset_variables . ')' ';'
   99 unset_variables: unset_variables . ',' unset_variable

    ','  décalage et aller à l'état 515
    ')'  décalage et aller à l'état 516


état 360

   98 unset_variables: unset_variable .

    $défaut  réduction par utilisation de la règle 98 (unset_variables)


état 361

  100 unset_variable: variable .

    $défaut  réduction par utilisation de la règle 100 (unset_variable)


état 362

  446 expr: expr_without_variable .
  540 isset_variable: expr_without_variable .

    ','       réduction par utilisation de la règle 540 (isset_variable)
    ')'       réduction par utilisation de la règle 540 (isset_variable)
    $défaut  réduction par utilisation de la règle 446 (expr)


état 363

  264 expr_without_variable: variable . '=' expr
  265                      | variable . '=' '&' variable
  267                      | variable . '=' '&' "new (T_NEW)" class_name_reference $@46 ctor_arguments
  269                      | variable . "+= (T_PLUS_EQUAL)" expr
  270                      | variable . "-= (T_MINUS_EQUAL)" expr
  271                      | variable . "*= (T_MUL_EQUAL)" expr
  272                      | variable . "/= (T_DIV_EQUAL)" expr
  273                      | variable . ".= (T_CONCAT_EQUAL)" expr
  274                      | variable . "%= (T_MOD_EQUAL)" expr
  275                      | variable . "&= (T_AND_EQUAL)" expr
  276                      | variable . "|= (T_OR_EQUAL)" expr
  277                      | variable . "^= (T_XOR_EQUAL)" expr
  278                      | variable . "<<= (T_SL_EQUAL)" expr
  279                      | variable . ">>= (T_SR_EQUAL)" expr
  449 r_variable: variable .
  451 rw_variable: variable .
  539 isset_variable: variable .

    '='                    décalage et aller à l'état 281
    ">>= (T_SR_EQUAL)"     décalage et aller à l'état 282
    "<<= (T_SL_EQUAL)"     décalage et aller à l'état 283
    "^= (T_XOR_EQUAL)"     décalage et aller à l'état 284
    "|= (T_OR_EQUAL)"      décalage et aller à l'état 285
    "&= (T_AND_EQUAL)"     décalage et aller à l'état 286
    "%= (T_MOD_EQUAL)"     décalage et aller à l'état 287
    ".= (T_CONCAT_EQUAL)"  décalage et aller à l'état 288
    "/= (T_DIV_EQUAL)"     décalage et aller à l'état 289
    "*= (T_MUL_EQUAL)"     décalage et aller à l'état 290
    "-= (T_MINUS_EQUAL)"   décalage et aller à l'état 291
    "+= (T_PLUS_EQUAL)"    décalage et aller à l'état 292

    ','           réduction par utilisation de la règle 539 (isset_variable)
    "-- (T_DEC)"  réduction par utilisation de la règle 451 (rw_variable)
    "++ (T_INC)"  réduction par utilisation de la règle 451 (rw_variable)
    ')'           réduction par utilisation de la règle 539 (isset_variable)
    $défaut      réduction par utilisation de la règle 449 (r_variable)


état 364

  528 internal_functions_in_yacc: "isset (T_ISSET)" '(' isset_variables . ')'
  538 isset_variables: isset_variables . ',' $@76 isset_variable

    ','  décalage et aller à l'état 517
    ')'  décalage et aller à l'état 518


état 365

  536 isset_variables: isset_variable .

    $défaut  réduction par utilisation de la règle 536 (isset_variables)


état 366

  446 expr: expr_without_variable .
  530 internal_functions_in_yacc: "empty (T_EMPTY)" '(' expr_without_variable . ')'

    ')'  décalage et aller à l'état 519

    $défaut  réduction par utilisation de la règle 446 (expr)


état 367

  264 expr_without_variable: variable . '=' expr
  265                      | variable . '=' '&' variable
  267                      | variable . '=' '&' "new (T_NEW)" class_name_reference $@46 ctor_arguments
  269                      | variable . "+= (T_PLUS_EQUAL)" expr
  270                      | variable . "-= (T_MINUS_EQUAL)" expr
  271                      | variable . "*= (T_MUL_EQUAL)" expr
  272                      | variable . "/= (T_DIV_EQUAL)" expr
  273                      | variable . ".= (T_CONCAT_EQUAL)" expr
  274                      | variable . "%= (T_MOD_EQUAL)" expr
  275                      | variable . "&= (T_AND_EQUAL)" expr
  276                      | variable . "|= (T_OR_EQUAL)" expr
  277                      | variable . "^= (T_XOR_EQUAL)" expr
  278                      | variable . "<<= (T_SL_EQUAL)" expr
  279                      | variable . ">>= (T_SR_EQUAL)" expr
  449 r_variable: variable .
  451 rw_variable: variable .
  529 internal_functions_in_yacc: "empty (T_EMPTY)" '(' variable . ')'

    '='                    décalage et aller à l'état 281
    ">>= (T_SR_EQUAL)"     décalage et aller à l'état 282
    "<<= (T_SL_EQUAL)"     décalage et aller à l'état 283
    "^= (T_XOR_EQUAL)"     décalage et aller à l'état 284
    "|= (T_OR_EQUAL)"      décalage et aller à l'état 285
    "&= (T_AND_EQUAL)"     décalage et aller à l'état 286
    "%= (T_MOD_EQUAL)"     décalage et aller à l'état 287
    ".= (T_CONCAT_EQUAL)"  décalage et aller à l'état 288
    "/= (T_DIV_EQUAL)"     décalage et aller à l'état 289
    "*= (T_MUL_EQUAL)"     décalage et aller à l'état 290
    "-= (T_MINUS_EQUAL)"   décalage et aller à l'état 291
    "+= (T_PLUS_EQUAL)"    décalage et aller à l'état 292
    ')'                    décalage et aller à l'état 520

    "-- (T_DEC)"  réduction par utilisation de la règle 451 (rw_variable)
    "++ (T_INC)"  réduction par utilisation de la règle 451 (rw_variable)
    $défaut      réduction par utilisation de la règle 449 (r_variable)


état 368

   10 top_statement: "__halt_compiler (T_HALT_COMPILER)" '(' ')' . ';'

    ';'  décalage et aller à l'état 521


état 369

  263 expr_without_variable: "list (T_LIST)" '(' $@45 . assignment_list ')' '=' expr

    "identifier (T_STRING)"    décalage et aller à l'état 123
    "variable (T_VARIABLE)"    décalage et aller à l'état 35
    "static (T_STATIC)"        décalage et aller à l'état 148
    "list (T_LIST)"            décalage et aller à l'état 522
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 149
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 150
    '$'                        décalage et aller à l'état 81

    $défaut  réduction par utilisation de la règle 503 (assignment_list_element)

    namespace_name                     aller à l'état 151
    function_call                      aller à l'état 101
    class_name                         aller à l'état 152
    variable                           aller à l'état 523
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 155
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    assignment_list                    aller à l'état 524
    assignment_list_element            aller à l'état 525


état 370

  354 combined_scalar: "array (T_ARRAY)" '(' array_pair_list . ')'

    ')'  décalage et aller à l'état 526


état 371

  520 encaps_var: "variable (T_VARIABLE)" '[' . $@75 encaps_var_offset ']'

    $défaut  réduction par utilisation de la règle 519 ($@75)

    $@75  aller à l'état 527


état 372

  521 encaps_var: "variable (T_VARIABLE)" "-> (T_OBJECT_OPERATOR)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  décalage et aller à l'état 528


état 373

  413 common_scalar: "heredoc start (T_START_HEREDOC)" "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" "heredoc end (T_END_HEREDOC)" .

    $défaut  réduction par utilisation de la règle 413 (common_scalar)


état 374

  517 encaps_list: "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" encaps_var .

    $défaut  réduction par utilisation de la règle 517 (encaps_list)


état 375

  427 scalar: "variable name (T_STRING_VARNAME)" .
  523 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" . '[' expr ']' '}'

    '['  décalage et aller à l'état 529

    $défaut  réduction par utilisation de la règle 427 (scalar)


état 376

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  522 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" expr . '}'

    "or (T_LOGICAL_OR)"           décalage et aller à l'état 252
    "xor (T_LOGICAL_XOR)"         décalage et aller à l'état 253
    "and (T_LOGICAL_AND)"         décalage et aller à l'état 254
    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277
    '}'                           décalage et aller à l'état 530


état 377

  524 encaps_var: "{$ (T_CURLY_OPEN)" variable . '}'

    '}'  décalage et aller à l'état 531


état 378

  515 encaps_list: encaps_list "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" .

    $défaut  réduction par utilisation de la règle 515 (encaps_list)


état 379

  435 scalar: "heredoc start (T_START_HEREDOC)" encaps_list "heredoc end (T_END_HEREDOC)" .

    $défaut  réduction par utilisation de la règle 435 (scalar)


état 380

  514 encaps_list: encaps_list encaps_var .

    $défaut  réduction par utilisation de la règle 514 (encaps_list)


état 381

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  366 function_call: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name . @59 function_call_parameter_list
  381 class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name .
  431 scalar: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  décalage et aller à l'état 239

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  réduction par utilisation de la règle 381 (class_name)
    '('                            réduction par utilisation de la règle 365 (@59)
    $défaut                       réduction par utilisation de la règle 431 (scalar)

    @59  aller à l'état 532


état 382

   15 top_statement: "namespace (T_NAMESPACE)" '{' $@3 . top_statement_list '}'

    $défaut  réduction par utilisation de la règle 4 (top_statement_list)

    top_statement_list  aller à l'état 533


état 383

   11 top_statement: "namespace (T_NAMESPACE)" namespace_name ';' .

    $défaut  réduction par utilisation de la règle 11 (top_statement)


état 384

   13 top_statement: "namespace (T_NAMESPACE)" namespace_name '{' . $@2 top_statement_list '}'

    $défaut  réduction par utilisation de la règle 12 ($@2)

    $@2  aller à l'état 534


état 385

  368 function_call: "\\ (T_NS_SEPARATOR)" namespace_name @60 . function_call_parameter_list

    '('  décalage et aller à l'état 395

    function_call_parameter_list  aller à l'état 535


état 386

  320 expr_without_variable: '(' new_expr ')' . @51 instance_call

    $défaut  réduction par utilisation de la règle 319 (@51)

    @51  aller à l'état 536


état 387

  448 parenthesis_expr: '(' yield_expr ')' .

    $défaut  réduction par utilisation de la règle 448 (parenthesis_expr)


état 388

  447 parenthesis_expr: '(' expr ')' .

    $défaut  réduction par utilisation de la règle 447 (parenthesis_expr)


état 389

   35 unticked_statement: '{' inner_statement_list '}' .

    $défaut  réduction par utilisation de la règle 35 (unticked_statement)


état 390

   27 inner_statement_list: inner_statement_list $@4 . inner_statement

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 11
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "if (T_IF)"                                   décalage et aller à l'état 30
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 33
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    T_INLINE_HTML                                 décalage et aller à l'état 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "echo (T_ECHO)"                               décalage et aller à l'état 38
    "do (T_DO)"                                   décalage et aller à l'état 39
    "while (T_WHILE)"                             décalage et aller à l'état 40
    "for (T_FOR)"                                 décalage et aller à l'état 41
    "foreach (T_FOREACH)"                         décalage et aller à l'état 42
    "declare (T_DECLARE)"                         décalage et aller à l'état 43
    "switch (T_SWITCH)"                           décalage et aller à l'état 44
    "break (T_BREAK)"                             décalage et aller à l'état 45
    "continue (T_CONTINUE)"                       décalage et aller à l'état 46
    "goto (T_GOTO)"                               décalage et aller à l'état 47
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "return (T_RETURN)"                           décalage et aller à l'état 50
    "try (T_TRY)"                                 décalage et aller à l'état 51
    "throw (T_THROW)"                             décalage et aller à l'état 52
    "global (T_GLOBAL)"                           décalage et aller à l'état 54
    "final (T_FINAL)"                             décalage et aller à l'état 55
    "abstract (T_ABSTRACT)"                       décalage et aller à l'état 56
    "static (T_STATIC)"                           décalage et aller à l'état 57
    "unset (T_UNSET)"                             décalage et aller à l'état 58
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "__halt_compiler (T_HALT_COMPILER)"           décalage et aller à l'état 537
    "class (T_CLASS)"                             décalage et aller à l'état 62
    "trait (T_TRAIT)"                             décalage et aller à l'état 63
    "interface (T_INTERFACE)"                     décalage et aller à l'état 64
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    ';'                                           décalage et aller à l'état 79
    '{'                                           décalage et aller à l'état 80
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                           aller à l'état 84
    inner_statement                          aller à l'état 538
    statement                                aller à l'état 539
    unticked_statement                       aller à l'état 88
    function_declaration_statement           aller à l'état 540
    class_declaration_statement              aller à l'état 541
    unticked_function_declaration_statement  aller à l'état 91
    unticked_class_declaration_statement     aller à l'état 92
    class_entry_type                         aller à l'état 93
    interface_entry                          aller à l'état 94
    new_expr                                 aller à l'état 95
    expr_without_variable                    aller à l'état 96
    yield_expr                               aller à l'état 97
    combined_scalar_offset                   aller à l'état 98
    combined_scalar                          aller à l'état 99
    function                                 aller à l'état 100
    function_call                            aller à l'état 101
    class_name                               aller à l'état 102
    common_scalar                            aller à l'état 103
    scalar                                   aller à l'état 104
    expr                                     aller à l'état 105
    parenthesis_expr                         aller à l'état 106
    r_variable                               aller à l'état 107
    rw_variable                              aller à l'état 108
    variable                                 aller à l'état 109
    variable_without_objects                 aller à l'état 110
    static_member                            aller à l'état 111
    variable_class_name                      aller à l'état 112
    array_function_dereference               aller à l'état 113
    base_variable_with_function_calls        aller à l'état 114
    base_variable                            aller à l'état 115
    reference_variable                       aller à l'état 116
    compound_variable                        aller à l'état 117
    simple_indirect_reference                aller à l'état 118
    internal_functions_in_yacc               aller à l'état 119
    class_constant                           aller à l'état 120
    class_name_scalar                        aller à l'état 121


état 391

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  485 compound_variable: '$' '{' expr . '}'

    "or (T_LOGICAL_OR)"           décalage et aller à l'état 252
    "xor (T_LOGICAL_XOR)"         décalage et aller à l'état 253
    "and (T_LOGICAL_AND)"         décalage et aller à l'état 254
    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277
    '}'                           décalage et aller à l'état 542


état 392

  340 expr_without_variable: '`' backticks_expr '`' .

    $défaut  réduction par utilisation de la règle 340 (expr_without_variable)


état 393

  434 scalar: '"' encaps_list '"' .

    $défaut  réduction par utilisation de la règle 434 (scalar)


état 394

    6 namespace_name: namespace_name "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)" .

    $défaut  réduction par utilisation de la règle 6 (namespace_name)


état 395

  175 function_call_parameter_list: '(' . ')'
  176                             | '(' . non_empty_function_call_parameter_list ')'
  177                             | '(' . yield_expr ')'

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 11
    '&'                                           décalage et aller à l'état 543
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    ')'                                           décalage et aller à l'état 544
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                          aller à l'état 84
    non_empty_function_call_parameter_list  aller à l'état 545
    new_expr                                aller à l'état 95
    expr_without_variable                   aller à l'état 546
    yield_expr                              aller à l'état 547
    combined_scalar_offset                  aller à l'état 98
    combined_scalar                         aller à l'état 99
    function                                aller à l'état 126
    function_call                           aller à l'état 101
    class_name                              aller à l'état 102
    common_scalar                           aller à l'état 103
    scalar                                  aller à l'état 104
    expr                                    aller à l'état 195
    parenthesis_expr                        aller à l'état 106
    r_variable                              aller à l'état 107
    rw_variable                             aller à l'état 108
    variable                                aller à l'état 548
    variable_without_objects                aller à l'état 110
    static_member                           aller à l'état 111
    variable_class_name                     aller à l'état 112
    array_function_dereference              aller à l'état 113
    base_variable_with_function_calls       aller à l'état 114
    base_variable                           aller à l'état 115
    reference_variable                      aller à l'état 116
    compound_variable                       aller à l'état 117
    simple_indirect_reference               aller à l'état 118
    internal_functions_in_yacc              aller à l'état 119
    class_constant                          aller à l'état 120
    class_name_scalar                       aller à l'état 121


état 396

  364 function_call: namespace_name @58 function_call_parameter_list .

    $défaut  réduction par utilisation de la règle 364 (function_call)


état 397

   24 constant_declaration: constant_declaration ',' "identifier (T_STRING)" . '=' static_scalar

    '='  décalage et aller à l'état 549


état 398

  116 extends_from: "extends (T_EXTENDS)" . fully_qualified_class_name

    "identifier (T_STRING)"    décalage et aller à l'état 123
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 550
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 551

    namespace_name              aller à l'état 552
    fully_qualified_class_name  aller à l'état 553


état 399

  108 unticked_class_declaration_statement: class_entry_type "identifier (T_STRING)" extends_from . $@32 implements_list '{' class_statement_list '}'

    $défaut  réduction par utilisation de la règle 107 ($@32)

    $@32  aller à l'état 554


état 400

  110 unticked_class_declaration_statement: interface_entry "identifier (T_STRING)" $@33 . interface_extends_list '{' class_statement_list '}'

    "extends (T_EXTENDS)"  décalage et aller à l'état 555

    $défaut  réduction par utilisation de la règle 118 (interface_extends_list)

    interface_extends_list  aller à l'état 556


état 401

  352 combined_scalar_offset: combined_scalar_offset '[' dim_offset . ']'

    ']'  décalage et aller à l'état 557


état 402

  351 combined_scalar_offset: combined_scalar '[' dim_offset . ']'

    ']'  décalage et aller à l'état 558


état 403

  106 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" . $@31 '(' parameter_list ')' '{' inner_statement_list '}'

    $défaut  réduction par utilisation de la règle 105 ($@31)

    $@31  aller à l'état 559


état 404

  344 expr_without_variable: function is_reference @56 . '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'

    '('  décalage et aller à l'état 560


état 405

  474 array_function_dereference: function_call $@72 '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    $défaut  réduction par utilisation de la règle 486 (dim_offset)

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 325
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    dim_offset                         aller à l'état 561
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 406

  494 variable_name: "identifier (T_STRING)" .
  541 class_constant: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)" .

    '('       réduction par utilisation de la règle 494 (variable_name)
    $défaut  réduction par utilisation de la règle 541 (class_constant)


état 407

  544 class_name_scalar: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "class (T_CLASS)" .

    $défaut  réduction par utilisation de la règle 544 (class_name_scalar)


état 408

  495 variable_name: '{' . expr '}'

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 562
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 409

  372 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects . $@62 function_call_parameter_list
  469 static_member: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects .

    '('       réduction par utilisation de la règle 371 ($@62)
    $défaut  réduction par utilisation de la règle 469 (static_member)

    $@62  aller à l'état 563


état 410

  467 variable_without_objects: reference_variable .
  481 reference_variable: reference_variable . '[' dim_offset ']'
  482                   | reference_variable . '{' expr '}'

    '['  décalage et aller à l'état 297
    '{'  décalage et aller à l'état 298

    $défaut  réduction par utilisation de la règle 467 (variable_without_objects)


état 411

  370 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name . @61 function_call_parameter_list

    $défaut  réduction par utilisation de la règle 369 (@61)

    @61  aller à l'état 564


état 412

  468 variable_without_objects: simple_indirect_reference . reference_variable
  497 simple_indirect_reference: simple_indirect_reference . '$'

    "variable (T_VARIABLE)"  décalage et aller à l'état 35
    '$'                      décalage et aller à l'état 299

    reference_variable  aller à l'état 565
    compound_variable   aller à l'état 117


état 413

  289 expr_without_variable: expr "or (T_LOGICAL_OR)" $@49 . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 566
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 414

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  292                      | expr "xor (T_LOGICAL_XOR)" expr .
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "and (T_LOGICAL_AND)"         décalage et aller à l'état 254
    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 292 (expr_without_variable)


état 415

  291 expr_without_variable: expr "and (T_LOGICAL_AND)" $@50 . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 567
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 416

  325 expr_without_variable: expr '?' ':' . $@54 expr

    $défaut  réduction par utilisation de la règle 324 ($@54)

    $@54  aller à l'état 568


état 417

  323 expr_without_variable: expr '?' $@52 . expr ':' $@53 expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 569
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 418

  285 expr_without_variable: expr "|| (T_BOOLEAN_OR)" $@47 . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 570
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 419

  287 expr_without_variable: expr "&& (T_BOOLEAN_AND)" $@48 . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 571
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 420

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  293                      | expr '|' expr .
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 293 (expr_without_variable)


état 421

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  295                      | expr '^' expr .
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 295 (expr_without_variable)


état 422

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  294                      | expr '&' expr .
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 294 (expr_without_variable)


état 423

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  309                      | expr "!== (T_IS_NOT_IDENTICAL)" expr .
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    "!== (T_IS_NOT_IDENTICAL)"  erreur (non-associative)
    "=== (T_IS_IDENTICAL)"      erreur (non-associative)
    "!= (T_IS_NOT_EQUAL)"       erreur (non-associative)
    "== (T_IS_EQUAL)"           erreur (non-associative)

    $défaut  réduction par utilisation de la règle 309 (expr_without_variable)


état 424

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  308                      | expr "=== (T_IS_IDENTICAL)" expr .
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    "!== (T_IS_NOT_IDENTICAL)"  erreur (non-associative)
    "=== (T_IS_IDENTICAL)"      erreur (non-associative)
    "!= (T_IS_NOT_EQUAL)"       erreur (non-associative)
    "== (T_IS_EQUAL)"           erreur (non-associative)

    $défaut  réduction par utilisation de la règle 308 (expr_without_variable)


état 425

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  311                      | expr "!= (T_IS_NOT_EQUAL)" expr .
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    "!== (T_IS_NOT_IDENTICAL)"  erreur (non-associative)
    "=== (T_IS_IDENTICAL)"      erreur (non-associative)
    "!= (T_IS_NOT_EQUAL)"       erreur (non-associative)
    "== (T_IS_EQUAL)"           erreur (non-associative)

    $défaut  réduction par utilisation de la règle 311 (expr_without_variable)


état 426

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  310                      | expr "== (T_IS_EQUAL)" expr .
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    "!== (T_IS_NOT_IDENTICAL)"  erreur (non-associative)
    "=== (T_IS_IDENTICAL)"      erreur (non-associative)
    "!= (T_IS_NOT_EQUAL)"       erreur (non-associative)
    "== (T_IS_EQUAL)"           erreur (non-associative)

    $défaut  réduction par utilisation de la règle 310 (expr_without_variable)


état 427

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  312                      | expr '<' expr .
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    ">> (T_SR)"                  décalage et aller à l'état 269
    "<< (T_SL)"                  décalage et aller à l'état 270
    '+'                          décalage et aller à l'état 271
    '-'                          décalage et aller à l'état 272
    '.'                          décalage et aller à l'état 273
    '*'                          décalage et aller à l'état 274
    '/'                          décalage et aller à l'état 275
    '%'                          décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"  décalage et aller à l'état 277

    '<'                           erreur (non-associative)
    '>'                           erreur (non-associative)
    ">= (T_IS_GREATER_OR_EQUAL)"  erreur (non-associative)
    "<= (T_IS_SMALLER_OR_EQUAL)"  erreur (non-associative)

    $défaut  réduction par utilisation de la règle 312 (expr_without_variable)


état 428

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  314                      | expr '>' expr .
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    ">> (T_SR)"                  décalage et aller à l'état 269
    "<< (T_SL)"                  décalage et aller à l'état 270
    '+'                          décalage et aller à l'état 271
    '-'                          décalage et aller à l'état 272
    '.'                          décalage et aller à l'état 273
    '*'                          décalage et aller à l'état 274
    '/'                          décalage et aller à l'état 275
    '%'                          décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"  décalage et aller à l'état 277

    '<'                           erreur (non-associative)
    '>'                           erreur (non-associative)
    ">= (T_IS_GREATER_OR_EQUAL)"  erreur (non-associative)
    "<= (T_IS_SMALLER_OR_EQUAL)"  erreur (non-associative)

    $défaut  réduction par utilisation de la règle 314 (expr_without_variable)


état 429

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  315                      | expr ">= (T_IS_GREATER_OR_EQUAL)" expr .
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    ">> (T_SR)"                  décalage et aller à l'état 269
    "<< (T_SL)"                  décalage et aller à l'état 270
    '+'                          décalage et aller à l'état 271
    '-'                          décalage et aller à l'état 272
    '.'                          décalage et aller à l'état 273
    '*'                          décalage et aller à l'état 274
    '/'                          décalage et aller à l'état 275
    '%'                          décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"  décalage et aller à l'état 277

    '<'                           erreur (non-associative)
    '>'                           erreur (non-associative)
    ">= (T_IS_GREATER_OR_EQUAL)"  erreur (non-associative)
    "<= (T_IS_SMALLER_OR_EQUAL)"  erreur (non-associative)

    $défaut  réduction par utilisation de la règle 315 (expr_without_variable)


état 430

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  313                      | expr "<= (T_IS_SMALLER_OR_EQUAL)" expr .
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    ">> (T_SR)"                  décalage et aller à l'état 269
    "<< (T_SL)"                  décalage et aller à l'état 270
    '+'                          décalage et aller à l'état 271
    '-'                          décalage et aller à l'état 272
    '.'                          décalage et aller à l'état 273
    '*'                          décalage et aller à l'état 274
    '/'                          décalage et aller à l'état 275
    '%'                          décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"  décalage et aller à l'état 277

    '<'                           erreur (non-associative)
    '>'                           erreur (non-associative)
    ">= (T_IS_GREATER_OR_EQUAL)"  erreur (non-associative)
    "<= (T_IS_SMALLER_OR_EQUAL)"  erreur (non-associative)

    $défaut  réduction par utilisation de la règle 313 (expr_without_variable)


état 431

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  303                      | expr ">> (T_SR)" expr .
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '+'                          décalage et aller à l'état 271
    '-'                          décalage et aller à l'état 272
    '.'                          décalage et aller à l'état 273
    '*'                          décalage et aller à l'état 274
    '/'                          décalage et aller à l'état 275
    '%'                          décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"  décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 303 (expr_without_variable)


état 432

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  302                      | expr "<< (T_SL)" expr .
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '+'                          décalage et aller à l'état 271
    '-'                          décalage et aller à l'état 272
    '.'                          décalage et aller à l'état 273
    '*'                          décalage et aller à l'état 274
    '/'                          décalage et aller à l'état 275
    '%'                          décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"  décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 302 (expr_without_variable)


état 433

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  297                      | expr '+' expr .
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '*'                          décalage et aller à l'état 274
    '/'                          décalage et aller à l'état 275
    '%'                          décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"  décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 297 (expr_without_variable)


état 434

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  298                      | expr '-' expr .
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '*'                          décalage et aller à l'état 274
    '/'                          décalage et aller à l'état 275
    '%'                          décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"  décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 298 (expr_without_variable)


état 435

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  296                      | expr '.' expr .
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '*'                          décalage et aller à l'état 274
    '/'                          décalage et aller à l'état 275
    '%'                          décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"  décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 296 (expr_without_variable)


état 436

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  299                      | expr '*' expr .
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "instanceof (T_INSTANCEOF)"  décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 299 (expr_without_variable)


état 437

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  300                      | expr '/' expr .
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "instanceof (T_INSTANCEOF)"  décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 300 (expr_without_variable)


état 438

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  301                      | expr '%' expr .
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "instanceof (T_INSTANCEOF)"  décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 301 (expr_without_variable)


état 439

  316 expr_without_variable: expr "instanceof (T_INSTANCEOF)" class_name_reference .

    $défaut  réduction par utilisation de la règle 316 (expr_without_variable)


état 440

  265 expr_without_variable: variable '=' '&' . variable
  267                      | variable '=' '&' . "new (T_NEW)" class_name_reference $@46 ctor_arguments

    "new (T_NEW)"              décalage et aller à l'état 572
    "identifier (T_STRING)"    décalage et aller à l'état 123
    "variable (T_VARIABLE)"    décalage et aller à l'état 35
    "static (T_STATIC)"        décalage et aller à l'état 148
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 149
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 150
    '$'                        décalage et aller à l'état 81

    namespace_name                     aller à l'état 151
    function_call                      aller à l'état 101
    class_name                         aller à l'état 152
    variable                           aller à l'état 573
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 155
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118


état 441

  264 expr_without_variable: variable '=' expr .
  285                      | expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 264 (expr_without_variable)


état 442

  279 expr_without_variable: variable ">>= (T_SR_EQUAL)" expr .
  285                      | expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 279 (expr_without_variable)


état 443

  278 expr_without_variable: variable "<<= (T_SL_EQUAL)" expr .
  285                      | expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 278 (expr_without_variable)


état 444

  277 expr_without_variable: variable "^= (T_XOR_EQUAL)" expr .
  285                      | expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 277 (expr_without_variable)


état 445

  276 expr_without_variable: variable "|= (T_OR_EQUAL)" expr .
  285                      | expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 276 (expr_without_variable)


état 446

  275 expr_without_variable: variable "&= (T_AND_EQUAL)" expr .
  285                      | expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 275 (expr_without_variable)


état 447

  274 expr_without_variable: variable "%= (T_MOD_EQUAL)" expr .
  285                      | expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 274 (expr_without_variable)


état 448

  273 expr_without_variable: variable ".= (T_CONCAT_EQUAL)" expr .
  285                      | expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 273 (expr_without_variable)


état 449

  272 expr_without_variable: variable "/= (T_DIV_EQUAL)" expr .
  285                      | expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 272 (expr_without_variable)


état 450

  271 expr_without_variable: variable "*= (T_MUL_EQUAL)" expr .
  285                      | expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 271 (expr_without_variable)


état 451

  270 expr_without_variable: variable "-= (T_MINUS_EQUAL)" expr .
  285                      | expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 270 (expr_without_variable)


état 452

  269 expr_without_variable: variable "+= (T_PLUS_EQUAL)" expr .
  285                      | expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 269 (expr_without_variable)


état 453

  378 function_call: variable_without_objects $@65 function_call_parameter_list .

    $défaut  réduction par utilisation de la règle 378 (function_call)


état 454

  494 variable_name: "identifier (T_STRING)" .
  542 class_constant: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)" .

    '('       réduction par utilisation de la règle 494 (variable_name)
    $défaut  réduction par utilisation de la règle 542 (class_constant)


état 455

  376 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects . $@64 function_call_parameter_list
  470 static_member: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects .

    '('       réduction par utilisation de la règle 375 ($@64)
    $défaut  réduction par utilisation de la règle 470 (static_member)

    $@64  aller à l'état 574


état 456

  374 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name . $@63 function_call_parameter_list

    $défaut  réduction par utilisation de la règle 373 ($@63)

    $@63  aller à l'état 575


état 457

  472 array_function_dereference: array_function_dereference '[' dim_offset . ']'

    ']'  décalage et aller à l'état 576


état 458

  454 variable: base_variable_with_function_calls "-> (T_OBJECT_OPERATOR)" $@68 . object_property $@69 method_or_not variable_properties

    "identifier (T_STRING)"  décalage et aller à l'état 465
    "variable (T_VARIABLE)"  décalage et aller à l'état 35
    '{'                      décalage et aller à l'état 408
    '$'                      décalage et aller à l'état 81

    variable_without_objects   aller à l'état 577
    reference_variable         aller à l'état 410
    compound_variable          aller à l'état 117
    object_property            aller à l'état 578
    object_dim_list            aller à l'état 579
    variable_name              aller à l'état 580
    simple_indirect_reference  aller à l'état 412


état 459

  481 reference_variable: reference_variable '[' dim_offset . ']'

    ']'  décalage et aller à l'état 581


état 460

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  482 reference_variable: reference_variable '{' expr . '}'

    "or (T_LOGICAL_OR)"           décalage et aller à l'état 252
    "xor (T_LOGICAL_XOR)"         décalage et aller à l'état 253
    "and (T_LOGICAL_AND)"         décalage et aller à l'état 254
    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277
    '}'                           décalage et aller à l'état 582


état 461

  533 internal_functions_in_yacc: "eval (T_EVAL)" '(' expr ')' .

    $défaut  réduction par utilisation de la règle 533 (internal_functions_in_yacc)


état 462

  349 yield_expr: "yield (T_YIELD)" expr "=> (T_DOUBLE_ARROW)" expr_without_variable .
  446 expr: expr_without_variable .

    ')'       réduction par utilisation de la règle 349 (yield_expr)
    ';'       réduction par utilisation de la règle 349 (yield_expr)
    $défaut  réduction par utilisation de la règle 446 (expr)


état 463

  264 expr_without_variable: variable . '=' expr
  265                      | variable . '=' '&' variable
  267                      | variable . '=' '&' "new (T_NEW)" class_name_reference $@46 ctor_arguments
  269                      | variable . "+= (T_PLUS_EQUAL)" expr
  270                      | variable . "-= (T_MINUS_EQUAL)" expr
  271                      | variable . "*= (T_MUL_EQUAL)" expr
  272                      | variable . "/= (T_DIV_EQUAL)" expr
  273                      | variable . ".= (T_CONCAT_EQUAL)" expr
  274                      | variable . "%= (T_MOD_EQUAL)" expr
  275                      | variable . "&= (T_AND_EQUAL)" expr
  276                      | variable . "|= (T_OR_EQUAL)" expr
  277                      | variable . "^= (T_XOR_EQUAL)" expr
  278                      | variable . "<<= (T_SL_EQUAL)" expr
  279                      | variable . ">>= (T_SR_EQUAL)" expr
  350 yield_expr: "yield (T_YIELD)" expr "=> (T_DOUBLE_ARROW)" variable .
  449 r_variable: variable .
  451 rw_variable: variable .

    '='                    décalage et aller à l'état 281
    ">>= (T_SR_EQUAL)"     décalage et aller à l'état 282
    "<<= (T_SL_EQUAL)"     décalage et aller à l'état 283
    "^= (T_XOR_EQUAL)"     décalage et aller à l'état 284
    "|= (T_OR_EQUAL)"      décalage et aller à l'état 285
    "&= (T_AND_EQUAL)"     décalage et aller à l'état 286
    "%= (T_MOD_EQUAL)"     décalage et aller à l'état 287
    ".= (T_CONCAT_EQUAL)"  décalage et aller à l'état 288
    "/= (T_DIV_EQUAL)"     décalage et aller à l'état 289
    "*= (T_MUL_EQUAL)"     décalage et aller à l'état 290
    "-= (T_MINUS_EQUAL)"   décalage et aller à l'état 291
    "+= (T_PLUS_EQUAL)"    décalage et aller à l'état 292

    "-- (T_DEC)"  réduction par utilisation de la règle 451 (rw_variable)
    "++ (T_INC)"  réduction par utilisation de la règle 451 (rw_variable)
    ')'           réduction par utilisation de la règle 350 (yield_expr)
    ';'           réduction par utilisation de la règle 350 (yield_expr)
    $défaut      réduction par utilisation de la règle 449 (r_variable)


état 464

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  366 function_call: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name . @59 function_call_parameter_list
  381 class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  décalage et aller à l'état 239

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  réduction par utilisation de la règle 381 (class_name)
    $défaut                       réduction par utilisation de la règle 365 (@59)

    @59  aller à l'état 532


état 465

  494 variable_name: "identifier (T_STRING)" .

    $défaut  réduction par utilisation de la règle 494 (variable_name)


état 466

  512 non_empty_array_pair_list: expr "=> (T_DOUBLE_ARROW)" '&' . w_variable

    "identifier (T_STRING)"    décalage et aller à l'état 123
    "variable (T_VARIABLE)"    décalage et aller à l'état 35
    "static (T_STATIC)"        décalage et aller à l'état 148
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 149
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 150
    '$'                        décalage et aller à l'état 81

    namespace_name                     aller à l'état 151
    function_call                      aller à l'état 101
    class_name                         aller à l'état 152
    w_variable                         aller à l'état 583
    variable                           aller à l'état 310
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 155
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118


état 467

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  508 non_empty_array_pair_list: expr "=> (T_DOUBLE_ARROW)" expr .

    "or (T_LOGICAL_OR)"           décalage et aller à l'état 252
    "xor (T_LOGICAL_XOR)"         décalage et aller à l'état 253
    "and (T_LOGICAL_AND)"         décalage et aller à l'état 254
    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 508 (non_empty_array_pair_list)


état 468

  511 non_empty_array_pair_list: non_empty_array_pair_list ',' '&' . w_variable

    "identifier (T_STRING)"    décalage et aller à l'état 123
    "variable (T_VARIABLE)"    décalage et aller à l'état 35
    "static (T_STATIC)"        décalage et aller à l'état 148
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 149
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 150
    '$'                        décalage et aller à l'état 81

    namespace_name                     aller à l'état 151
    function_call                      aller à l'état 101
    class_name                         aller à l'état 152
    w_variable                         aller à l'état 584
    variable                           aller à l'état 310
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 155
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118


état 469

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  506 non_empty_array_pair_list: non_empty_array_pair_list ',' expr . "=> (T_DOUBLE_ARROW)" expr
  507                          | non_empty_array_pair_list ',' expr .
  510                          | non_empty_array_pair_list ',' expr . "=> (T_DOUBLE_ARROW)" '&' w_variable

    "or (T_LOGICAL_OR)"           décalage et aller à l'état 252
    "xor (T_LOGICAL_XOR)"         décalage et aller à l'état 253
    "and (T_LOGICAL_AND)"         décalage et aller à l'état 254
    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277
    "=> (T_DOUBLE_ARROW)"         décalage et aller à l'état 585

    $défaut  réduction par utilisation de la règle 507 (non_empty_array_pair_list)


état 470

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  381 class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  décalage et aller à l'état 239

    $défaut  réduction par utilisation de la règle 381 (class_name)


état 471

  469 static_member: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects .

    $défaut  réduction par utilisation de la règle 469 (static_member)


état 472

  402 ctor_arguments: function_call_parameter_list .

    $défaut  réduction par utilisation de la règle 402 (ctor_arguments)


état 473

  261 new_expr: "new (T_NEW)" class_name_reference $@44 ctor_arguments .

    $défaut  réduction par utilisation de la règle 261 (new_expr)


état 474

  470 static_member: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects .

    $défaut  réduction par utilisation de la règle 470 (static_member)


état 475

  390 dynamic_class_name_reference: base_variable "-> (T_OBJECT_OPERATOR)" $@66 . object_property $@67 dynamic_class_name_variable_properties

    "identifier (T_STRING)"  décalage et aller à l'état 465
    "variable (T_VARIABLE)"  décalage et aller à l'état 35
    '{'                      décalage et aller à l'état 408
    '$'                      décalage et aller à l'état 81

    variable_without_objects   aller à l'état 577
    reference_variable         aller à l'état 410
    compound_variable          aller à l'état 117
    object_property            aller à l'état 586
    object_dim_list            aller à l'état 579
    variable_name              aller à l'état 580
    simple_indirect_reference  aller à l'état 412


état 476

   41 unticked_statement: "if (T_IF)" parenthesis_expr ':' $@7 . inner_statement_list $@8 new_elseif_list new_else_single "endif (T_ENDIF)" ';'

    $défaut  réduction par utilisation de la règle 28 (inner_statement_list)

    inner_statement_list  aller à l'état 587


état 477

   38 unticked_statement: "if (T_IF)" parenthesis_expr $@5 statement . $@6 elseif_list else_single

    $défaut  réduction par utilisation de la règle 37 ($@6)

    $@6  aller à l'état 588


état 478

  353 combined_scalar_offset: "quoted-string (T_CONSTANT_ENCAPSED_STRING)" '[' dim_offset ']' .

    $défaut  réduction par utilisation de la règle 353 (combined_scalar_offset)


état 479

  242 echo_expr_list: echo_expr_list ',' expr .
  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "or (T_LOGICAL_OR)"           décalage et aller à l'état 252
    "xor (T_LOGICAL_XOR)"         décalage et aller à l'état 253
    "and (T_LOGICAL_AND)"         décalage et aller à l'état 254
    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 242 (echo_expr_list)


état 480

   47 unticked_statement: "do (T_DO)" $@11 statement "while (T_WHILE)" . $@12 parenthesis_expr ';'

    $défaut  réduction par utilisation de la règle 46 ($@12)

    $@12  aller à l'état 589


état 481

   44 unticked_statement: "while (T_WHILE)" $@9 parenthesis_expr @10 . while_statement

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 11
    ':'                                           décalage et aller à l'état 590
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "if (T_IF)"                                   décalage et aller à l'état 30
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 33
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    T_INLINE_HTML                                 décalage et aller à l'état 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "echo (T_ECHO)"                               décalage et aller à l'état 38
    "do (T_DO)"                                   décalage et aller à l'état 39
    "while (T_WHILE)"                             décalage et aller à l'état 40
    "for (T_FOR)"                                 décalage et aller à l'état 41
    "foreach (T_FOREACH)"                         décalage et aller à l'état 42
    "declare (T_DECLARE)"                         décalage et aller à l'état 43
    "switch (T_SWITCH)"                           décalage et aller à l'état 44
    "break (T_BREAK)"                             décalage et aller à l'état 45
    "continue (T_CONTINUE)"                       décalage et aller à l'état 46
    "goto (T_GOTO)"                               décalage et aller à l'état 47
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "return (T_RETURN)"                           décalage et aller à l'état 50
    "try (T_TRY)"                                 décalage et aller à l'état 51
    "throw (T_THROW)"                             décalage et aller à l'état 52
    "global (T_GLOBAL)"                           décalage et aller à l'état 54
    "static (T_STATIC)"                           décalage et aller à l'état 57
    "unset (T_UNSET)"                             décalage et aller à l'état 58
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    ';'                                           décalage et aller à l'état 79
    '{'                                           décalage et aller à l'état 80
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    statement                          aller à l'état 591
    unticked_statement                 aller à l'état 88
    while_statement                    aller à l'état 592
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    yield_expr                         aller à l'état 97
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 105
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 482

   51 unticked_statement: "for (T_FOR)" '(' for_expr ';' . $@13 for_expr ';' $@14 for_expr ')' $@15 for_statement

    $défaut  réduction par utilisation de la règle 48 ($@13)

    $@13  aller à l'état 593


état 483

  247 non_empty_for_expr: non_empty_for_expr ',' . $@41 expr

    $défaut  réduction par utilisation de la règle 246 ($@41)

    $@41  aller à l'état 594


état 484

   73 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable "as (T_AS)" . $@19 foreach_variable foreach_optional_arg ')' $@20 foreach_statement

    $défaut  réduction par utilisation de la règle 71 ($@19)

    $@19  aller à l'état 595


état 485

   70 unticked_statement: "foreach (T_FOREACH)" '(' variable "as (T_AS)" . $@17 foreach_variable foreach_optional_arg ')' $@18 foreach_statement

    $défaut  réduction par utilisation de la règle 68 ($@17)

    $@17  aller à l'état 596


état 486

  136 declare_list: "identifier (T_STRING)" . '=' static_scalar

    '='  décalage et aller à l'état 597


état 487

   75 unticked_statement: "declare (T_DECLARE)" $@21 '(' declare_list . ')' declare_statement
  137 declare_list: declare_list . ',' "identifier (T_STRING)" '=' static_scalar

    ','  décalage et aller à l'état 598
    ')'  décalage et aller à l'état 599


état 488

  140 switch_case_list: ':' . case_list "endswitch (T_ENDSWITCH)" ';'
  141                 | ':' . ';' case_list "endswitch (T_ENDSWITCH)" ';'

    ';'  décalage et aller à l'état 600

    $défaut  réduction par utilisation de la règle 142 (case_list)

    case_list  aller à l'état 601


état 489

  138 switch_case_list: '{' . case_list '}'
  139                 | '{' . ';' case_list '}'

    ';'  décalage et aller à l'état 602

    $défaut  réduction par utilisation de la règle 142 (case_list)

    case_list  aller à l'état 603


état 490

   53 unticked_statement: "switch (T_SWITCH)" parenthesis_expr $@16 switch_case_list .

    $défaut  réduction par utilisation de la règle 53 (unticked_statement)


état 491

  420 static_scalar: '+' . static_scalar

    '+'                                           décalage et aller à l'état 491
    '-'                                           décalage et aller à l'état 492
    '['                                           décalage et aller à l'état 493
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 494
    "static (T_STATIC)"                           décalage et aller à l'état 148
    "array (T_ARRAY)"                             décalage et aller à l'état 495
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 496
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 497
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 498
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 499

    namespace_name            aller à l'état 500
    class_name                aller à l'état 501
    common_scalar             aller à l'état 502
    static_scalar             aller à l'état 604
    static_class_constant     aller à l'état 504
    static_class_name_scalar  aller à l'état 505


état 492

  421 static_scalar: '-' . static_scalar

    '+'                                           décalage et aller à l'état 491
    '-'                                           décalage et aller à l'état 492
    '['                                           décalage et aller à l'état 493
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 494
    "static (T_STATIC)"                           décalage et aller à l'état 148
    "array (T_ARRAY)"                             décalage et aller à l'état 495
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 496
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 497
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 498
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 499

    namespace_name            aller à l'état 500
    class_name                aller à l'état 501
    common_scalar             aller à l'état 502
    static_scalar             aller à l'état 605
    static_class_constant     aller à l'état 504
    static_class_name_scalar  aller à l'état 505


état 493

  423 static_scalar: '[' . static_array_pair_list ']'

    '+'                                           décalage et aller à l'état 491
    '-'                                           décalage et aller à l'état 492
    '['                                           décalage et aller à l'état 493
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 494
    "static (T_STATIC)"                           décalage et aller à l'état 148
    "array (T_ARRAY)"                             décalage et aller à l'état 495
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 496
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 497
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 498
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 499

    $défaut  réduction par utilisation de la règle 437 (static_array_pair_list)

    namespace_name                    aller à l'état 500
    class_name                        aller à l'état 501
    common_scalar                     aller à l'état 502
    static_scalar                     aller à l'état 606
    static_class_constant             aller à l'état 504
    static_array_pair_list            aller à l'état 607
    non_empty_static_array_pair_list  aller à l'état 608
    static_class_name_scalar          aller à l'état 505


état 494

  405 common_scalar: "quoted-string (T_CONSTANT_ENCAPSED_STRING)" .

    $défaut  réduction par utilisation de la règle 405 (common_scalar)


état 495

  422 static_scalar: "array (T_ARRAY)" . '(' static_array_pair_list ')'

    '('  décalage et aller à l'état 609


état 496

  425 static_scalar: "__CLASS__ (T_CLASS_C)" .

    $défaut  réduction par utilisation de la règle 425 (static_scalar)


état 497

  413 common_scalar: "heredoc start (T_START_HEREDOC)" . "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" "heredoc end (T_END_HEREDOC)"
  414              | "heredoc start (T_START_HEREDOC)" . "heredoc end (T_END_HEREDOC)"

    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  décalage et aller à l'état 610
    "heredoc end (T_END_HEREDOC)"                               décalage et aller à l'état 220


état 498

  381 class_name: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name
  418 static_scalar: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name

    "\\ (T_NS_SEPARATOR)"  décalage et aller à l'état 611


état 499

  382 class_name: "\\ (T_NS_SEPARATOR)" . namespace_name
  419 static_scalar: "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  décalage et aller à l'état 123

    namespace_name  aller à l'état 612


état 500

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  380 class_name: namespace_name .
  417 static_scalar: namespace_name .

    "\\ (T_NS_SEPARATOR)"  décalage et aller à l'état 239

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  réduction par utilisation de la règle 380 (class_name)
    $défaut                       réduction par utilisation de la règle 417 (static_scalar)


état 501

  426 static_class_constant: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)"
  543 static_class_name_scalar: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" "class (T_CLASS)"

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  décalage et aller à l'état 613


état 502

  415 static_scalar: common_scalar .

    $défaut  réduction par utilisation de la règle 415 (static_scalar)


état 503

   25 constant_declaration: "const (T_CONST)" "identifier (T_STRING)" '=' static_scalar .

    $défaut  réduction par utilisation de la règle 25 (constant_declaration)


état 504

  424 static_scalar: static_class_constant .

    $défaut  réduction par utilisation de la règle 424 (static_scalar)


état 505

  416 static_scalar: static_class_name_scalar .

    $défaut  réduction par utilisation de la règle 416 (static_scalar)


état 506

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
   79 unticked_statement: "try (T_TRY)" $@22 '{' inner_statement_list . '}' catch_statement $@23 finally_statement

    '}'  décalage et aller à l'état 614

    $défaut  réduction par utilisation de la règle 26 ($@4)

    $@4  aller à l'état 390


état 507

   23 use_declaration: "\\ (T_NS_SEPARATOR)" namespace_name "as (T_AS)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  décalage et aller à l'état 615


état 508

   21 use_declaration: namespace_name "as (T_AS)" "identifier (T_STRING)" .

    $défaut  réduction par utilisation de la règle 21 (use_declaration)


état 509

   18 use_declarations: use_declarations ',' use_declaration .

    $défaut  réduction par utilisation de la règle 18 (use_declarations)


état 510

  188 global_var: '$' '{' expr . '}'
  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "or (T_LOGICAL_OR)"           décalage et aller à l'état 252
    "xor (T_LOGICAL_XOR)"         décalage et aller à l'état 253
    "and (T_LOGICAL_AND)"         décalage et aller à l'état 254
    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277
    '}'                           décalage et aller à l'état 616


état 511

  184 global_var_list: global_var_list ',' global_var .

    $défaut  réduction par utilisation de la règle 184 (global_var_list)


état 512

  192 static_var_list: "variable (T_VARIABLE)" '=' static_scalar .

    $défaut  réduction par utilisation de la règle 192 (static_var_list)


état 513

  189 static_var_list: static_var_list ',' "variable (T_VARIABLE)" .
  190                | static_var_list ',' "variable (T_VARIABLE)" . '=' static_scalar

    '='  décalage et aller à l'état 617

    $défaut  réduction par utilisation de la règle 189 (static_var_list)


état 514

  346 expr_without_variable: "static (T_STATIC)" function is_reference @57 . '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'

    '('  décalage et aller à l'état 618


état 515

   99 unset_variables: unset_variables ',' . unset_variable

    "identifier (T_STRING)"    décalage et aller à l'état 123
    "variable (T_VARIABLE)"    décalage et aller à l'état 35
    "static (T_STATIC)"        décalage et aller à l'état 148
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 149
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 150
    '$'                        décalage et aller à l'état 81

    namespace_name                     aller à l'état 151
    unset_variable                     aller à l'état 619
    function_call                      aller à l'état 101
    class_name                         aller à l'état 152
    variable                           aller à l'état 361
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 155
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118


état 516

   67 unticked_statement: "unset (T_UNSET)" '(' unset_variables ')' . ';'

    ';'  décalage et aller à l'état 620


état 517

  538 isset_variables: isset_variables ',' . $@76 isset_variable

    $défaut  réduction par utilisation de la règle 537 ($@76)

    $@76  aller à l'état 621


état 518

  528 internal_functions_in_yacc: "isset (T_ISSET)" '(' isset_variables ')' .

    $défaut  réduction par utilisation de la règle 528 (internal_functions_in_yacc)


état 519

  530 internal_functions_in_yacc: "empty (T_EMPTY)" '(' expr_without_variable ')' .

    $défaut  réduction par utilisation de la règle 530 (internal_functions_in_yacc)


état 520

  529 internal_functions_in_yacc: "empty (T_EMPTY)" '(' variable ')' .

    $défaut  réduction par utilisation de la règle 529 (internal_functions_in_yacc)


état 521

   10 top_statement: "__halt_compiler (T_HALT_COMPILER)" '(' ')' ';' .

    $défaut  réduction par utilisation de la règle 10 (top_statement)


état 522

  502 assignment_list_element: "list (T_LIST)" . '(' $@74 assignment_list ')'

    '('  décalage et aller à l'état 622


état 523

  500 assignment_list_element: variable .

    $défaut  réduction par utilisation de la règle 500 (assignment_list_element)


état 524

  263 expr_without_variable: "list (T_LIST)" '(' $@45 assignment_list . ')' '=' expr
  498 assignment_list: assignment_list . ',' assignment_list_element

    ','  décalage et aller à l'état 623
    ')'  décalage et aller à l'état 624


état 525

  499 assignment_list: assignment_list_element .

    $défaut  réduction par utilisation de la règle 499 (assignment_list)


état 526

  354 combined_scalar: "array (T_ARRAY)" '(' array_pair_list ')' .

    $défaut  réduction par utilisation de la règle 354 (combined_scalar)


état 527

  520 encaps_var: "variable (T_VARIABLE)" '[' $@75 . encaps_var_offset ']'

    "identifier (T_STRING)"  décalage et aller à l'état 625
    "variable (T_VARIABLE)"  décalage et aller à l'état 626
    "number (T_NUM_STRING)"  décalage et aller à l'état 627

    encaps_var_offset  aller à l'état 628


état 528

  521 encaps_var: "variable (T_VARIABLE)" "-> (T_OBJECT_OPERATOR)" "identifier (T_STRING)" .

    $défaut  réduction par utilisation de la règle 521 (encaps_var)


état 529

  523 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" '[' . expr ']' '}'

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 629
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 530

  522 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" expr '}' .

    $défaut  réduction par utilisation de la règle 522 (encaps_var)


état 531

  524 encaps_var: "{$ (T_CURLY_OPEN)" variable '}' .

    $défaut  réduction par utilisation de la règle 524 (encaps_var)


état 532

  366 function_call: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name @59 . function_call_parameter_list

    '('  décalage et aller à l'état 395

    function_call_parameter_list  aller à l'état 630


état 533

    3 top_statement_list: top_statement_list . $@1 top_statement
   15 top_statement: "namespace (T_NAMESPACE)" '{' $@3 top_statement_list . '}'

    '}'  décalage et aller à l'état 631

    $défaut  réduction par utilisation de la règle 2 ($@1)

    $@1  aller à l'état 4


état 534

   13 top_statement: "namespace (T_NAMESPACE)" namespace_name '{' $@2 . top_statement_list '}'

    $défaut  réduction par utilisation de la règle 4 (top_statement_list)

    top_statement_list  aller à l'état 632


état 535

  368 function_call: "\\ (T_NS_SEPARATOR)" namespace_name @60 function_call_parameter_list .

    $défaut  réduction par utilisation de la règle 368 (function_call)


état 536

  320 expr_without_variable: '(' new_expr ')' @51 . instance_call

    '['                       réduction par utilisation de la règle 258 ($@43)
    "-> (T_OBJECT_OPERATOR)"  réduction par utilisation de la règle 258 ($@43)
    $défaut                  réduction par utilisation de la règle 257 (instance_call)

    instance_call  aller à l'état 633
    $@43           aller à l'état 634


état 537

   32 inner_statement: "__halt_compiler (T_HALT_COMPILER)" . '(' ')' ';'

    '('  décalage et aller à l'état 635


état 538

   27 inner_statement_list: inner_statement_list $@4 inner_statement .

    $défaut  réduction par utilisation de la règle 27 (inner_statement_list)


état 539

   29 inner_statement: statement .

    $défaut  réduction par utilisation de la règle 29 (inner_statement)


état 540

   30 inner_statement: function_declaration_statement .

    $défaut  réduction par utilisation de la règle 30 (inner_statement)


état 541

   31 inner_statement: class_declaration_statement .

    $défaut  réduction par utilisation de la règle 31 (inner_statement)


état 542

  485 compound_variable: '$' '{' expr '}' .

    $défaut  réduction par utilisation de la règle 485 (compound_variable)


état 543

  180 non_empty_function_call_parameter_list: '&' . w_variable

    "identifier (T_STRING)"    décalage et aller à l'état 123
    "variable (T_VARIABLE)"    décalage et aller à l'état 35
    "static (T_STATIC)"        décalage et aller à l'état 148
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 149
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 150
    '$'                        décalage et aller à l'état 81

    namespace_name                     aller à l'état 151
    function_call                      aller à l'état 101
    class_name                         aller à l'état 152
    w_variable                         aller à l'état 636
    variable                           aller à l'état 310
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 155
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118


état 544

  175 function_call_parameter_list: '(' ')' .

    $défaut  réduction par utilisation de la règle 175 (function_call_parameter_list)


état 545

  176 function_call_parameter_list: '(' non_empty_function_call_parameter_list . ')'
  181 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list . ',' expr_without_variable
  182                                       | non_empty_function_call_parameter_list . ',' variable
  183                                       | non_empty_function_call_parameter_list . ',' '&' w_variable

    ','  décalage et aller à l'état 637
    ')'  décalage et aller à l'état 638


état 546

  178 non_empty_function_call_parameter_list: expr_without_variable .
  446 expr: expr_without_variable .

    ','       réduction par utilisation de la règle 178 (non_empty_function_call_parameter_list)
    ')'       réduction par utilisation de la règle 178 (non_empty_function_call_parameter_list)
    $défaut  réduction par utilisation de la règle 446 (expr)


état 547

  177 function_call_parameter_list: '(' yield_expr . ')'

    ')'  décalage et aller à l'état 639


état 548

  179 non_empty_function_call_parameter_list: variable .
  264 expr_without_variable: variable . '=' expr
  265                      | variable . '=' '&' variable
  267                      | variable . '=' '&' "new (T_NEW)" class_name_reference $@46 ctor_arguments
  269                      | variable . "+= (T_PLUS_EQUAL)" expr
  270                      | variable . "-= (T_MINUS_EQUAL)" expr
  271                      | variable . "*= (T_MUL_EQUAL)" expr
  272                      | variable . "/= (T_DIV_EQUAL)" expr
  273                      | variable . ".= (T_CONCAT_EQUAL)" expr
  274                      | variable . "%= (T_MOD_EQUAL)" expr
  275                      | variable . "&= (T_AND_EQUAL)" expr
  276                      | variable . "|= (T_OR_EQUAL)" expr
  277                      | variable . "^= (T_XOR_EQUAL)" expr
  278                      | variable . "<<= (T_SL_EQUAL)" expr
  279                      | variable . ">>= (T_SR_EQUAL)" expr
  449 r_variable: variable .
  451 rw_variable: variable .

    '='                    décalage et aller à l'état 281
    ">>= (T_SR_EQUAL)"     décalage et aller à l'état 282
    "<<= (T_SL_EQUAL)"     décalage et aller à l'état 283
    "^= (T_XOR_EQUAL)"     décalage et aller à l'état 284
    "|= (T_OR_EQUAL)"      décalage et aller à l'état 285
    "&= (T_AND_EQUAL)"     décalage et aller à l'état 286
    "%= (T_MOD_EQUAL)"     décalage et aller à l'état 287
    ".= (T_CONCAT_EQUAL)"  décalage et aller à l'état 288
    "/= (T_DIV_EQUAL)"     décalage et aller à l'état 289
    "*= (T_MUL_EQUAL)"     décalage et aller à l'état 290
    "-= (T_MINUS_EQUAL)"   décalage et aller à l'état 291
    "+= (T_PLUS_EQUAL)"    décalage et aller à l'état 292

    ','           réduction par utilisation de la règle 179 (non_empty_function_call_parameter_list)
    "-- (T_DEC)"  réduction par utilisation de la règle 451 (rw_variable)
    "++ (T_INC)"  réduction par utilisation de la règle 451 (rw_variable)
    ')'           réduction par utilisation de la règle 179 (non_empty_function_call_parameter_list)
    $défaut      réduction par utilisation de la règle 449 (r_variable)


état 549

   24 constant_declaration: constant_declaration ',' "identifier (T_STRING)" '=' . static_scalar

    '+'                                           décalage et aller à l'état 491
    '-'                                           décalage et aller à l'état 492
    '['                                           décalage et aller à l'état 493
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 494
    "static (T_STATIC)"                           décalage et aller à l'état 148
    "array (T_ARRAY)"                             décalage et aller à l'état 495
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 496
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 497
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 498
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 499

    namespace_name            aller à l'état 500
    class_name                aller à l'état 501
    common_scalar             aller à l'état 502
    static_scalar             aller à l'état 640
    static_class_constant     aller à l'état 504
    static_class_name_scalar  aller à l'état 505


état 550

  384 fully_qualified_class_name: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name

    "\\ (T_NS_SEPARATOR)"  décalage et aller à l'état 641


état 551

  385 fully_qualified_class_name: "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  décalage et aller à l'état 123

    namespace_name  aller à l'état 642


état 552

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  383 fully_qualified_class_name: namespace_name .

    "\\ (T_NS_SEPARATOR)"  décalage et aller à l'état 239

    $défaut  réduction par utilisation de la règle 383 (fully_qualified_class_name)


état 553

  116 extends_from: "extends (T_EXTENDS)" fully_qualified_class_name .

    $défaut  réduction par utilisation de la règle 116 (extends_from)


état 554

  108 unticked_class_declaration_statement: class_entry_type "identifier (T_STRING)" extends_from $@32 . implements_list '{' class_statement_list '}'

    "implements (T_IMPLEMENTS)"  décalage et aller à l'état 643

    $défaut  réduction par utilisation de la règle 120 (implements_list)

    implements_list  aller à l'état 644


état 555

  119 interface_extends_list: "extends (T_EXTENDS)" . interface_list

    "identifier (T_STRING)"    décalage et aller à l'état 123
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 550
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 551

    namespace_name              aller à l'état 552
    interface_list              aller à l'état 645
    fully_qualified_class_name  aller à l'état 646


état 556

  110 unticked_class_declaration_statement: interface_entry "identifier (T_STRING)" $@33 interface_extends_list . '{' class_statement_list '}'

    '{'  décalage et aller à l'état 647


état 557

  352 combined_scalar_offset: combined_scalar_offset '[' dim_offset ']' .

    $défaut  réduction par utilisation de la règle 352 (combined_scalar_offset)


état 558

  351 combined_scalar_offset: combined_scalar '[' dim_offset ']' .

    $défaut  réduction par utilisation de la règle 351 (combined_scalar_offset)


état 559

  106 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" $@31 . '(' parameter_list ')' '{' inner_statement_list '}'

    '('  décalage et aller à l'état 648


état 560

  344 expr_without_variable: function is_reference @56 '(' . parameter_list ')' lexical_vars '{' inner_statement_list '}'

    "identifier (T_STRING)"    décalage et aller à l'état 123
    "array (T_ARRAY)"          décalage et aller à l'état 649
    "callable (T_CALLABLE)"    décalage et aller à l'état 650
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 550
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 551

    ')'       réduction par utilisation de la règle 162 (parameter_list)
    $défaut  réduction par utilisation de la règle 171 (optional_class_type)

    namespace_name              aller à l'état 552
    parameter_list              aller à l'état 651
    non_empty_parameter_list    aller à l'état 652
    optional_class_type         aller à l'état 653
    fully_qualified_class_name  aller à l'état 654


état 561

  474 array_function_dereference: function_call $@72 '[' dim_offset . ']'

    ']'  décalage et aller à l'état 655


état 562

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  495 variable_name: '{' expr . '}'

    "or (T_LOGICAL_OR)"           décalage et aller à l'état 252
    "xor (T_LOGICAL_XOR)"         décalage et aller à l'état 253
    "and (T_LOGICAL_AND)"         décalage et aller à l'état 254
    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277
    '}'                           décalage et aller à l'état 656


état 563

  372 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects $@62 . function_call_parameter_list

    '('  décalage et aller à l'état 395

    function_call_parameter_list  aller à l'état 657


état 564

  370 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name @61 . function_call_parameter_list

    '('  décalage et aller à l'état 395

    function_call_parameter_list  aller à l'état 658


état 565

  468 variable_without_objects: simple_indirect_reference reference_variable .
  481 reference_variable: reference_variable . '[' dim_offset ']'
  482                   | reference_variable . '{' expr '}'

    '['  décalage et aller à l'état 297
    '{'  décalage et aller à l'état 298

    $défaut  réduction par utilisation de la règle 468 (variable_without_objects)


état 566

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  289                      | expr "or (T_LOGICAL_OR)" $@49 expr .
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "xor (T_LOGICAL_XOR)"         décalage et aller à l'état 253
    "and (T_LOGICAL_AND)"         décalage et aller à l'état 254
    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 289 (expr_without_variable)


état 567

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  291                      | expr "and (T_LOGICAL_AND)" $@50 expr .
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 291 (expr_without_variable)


état 568

  325 expr_without_variable: expr '?' ':' $@54 . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 659
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 569

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  323                      | expr '?' $@52 expr . ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "or (T_LOGICAL_OR)"           décalage et aller à l'état 252
    "xor (T_LOGICAL_XOR)"         décalage et aller à l'état 253
    "and (T_LOGICAL_AND)"         décalage et aller à l'état 254
    '?'                           décalage et aller à l'état 255
    ':'                           décalage et aller à l'état 660
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277


état 570

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  285                      | expr "|| (T_BOOLEAN_OR)" $@47 expr .
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 285 (expr_without_variable)


état 571

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  287                      | expr "&& (T_BOOLEAN_AND)" $@48 expr .
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 287 (expr_without_variable)


état 572

  267 expr_without_variable: variable '=' '&' "new (T_NEW)" . class_name_reference $@46 ctor_arguments

    "identifier (T_STRING)"    décalage et aller à l'état 123
    "variable (T_VARIABLE)"    décalage et aller à l'état 35
    "static (T_STATIC)"        décalage et aller à l'état 148
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 162
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 163
    '$'                        décalage et aller à l'état 81

    namespace_name                aller à l'état 164
    class_name                    aller à l'état 165
    class_name_reference          aller à l'état 661
    dynamic_class_name_reference  aller à l'état 167
    static_member                 aller à l'état 111
    variable_class_name           aller à l'état 168
    base_variable                 aller à l'état 169
    reference_variable            aller à l'état 170
    compound_variable             aller à l'état 117
    simple_indirect_reference     aller à l'état 171


état 573

  265 expr_without_variable: variable '=' '&' variable .

    $défaut  réduction par utilisation de la règle 265 (expr_without_variable)


état 574

  376 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects $@64 . function_call_parameter_list

    '('  décalage et aller à l'état 395

    function_call_parameter_list  aller à l'état 662


état 575

  374 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name $@63 . function_call_parameter_list

    '('  décalage et aller à l'état 395

    function_call_parameter_list  aller à l'état 663


état 576

  472 array_function_dereference: array_function_dereference '[' dim_offset ']' .

    $défaut  réduction par utilisation de la règle 472 (array_function_dereference)


état 577

  490 object_property: variable_without_objects . $@73

    $défaut  réduction par utilisation de la règle 489 ($@73)

    $@73  aller à l'état 664


état 578

  454 variable: base_variable_with_function_calls "-> (T_OBJECT_OPERATOR)" $@68 object_property . $@69 method_or_not variable_properties

    $défaut  réduction par utilisation de la règle 453 ($@69)

    $@69  aller à l'état 665


état 579

  488 object_property: object_dim_list .
  491 object_dim_list: object_dim_list . '[' dim_offset ']'
  492                | object_dim_list . '{' expr '}'

    '['  décalage et aller à l'état 666
    '{'  décalage et aller à l'état 667

    $défaut  réduction par utilisation de la règle 488 (object_property)


état 580

  493 object_dim_list: variable_name .

    $défaut  réduction par utilisation de la règle 493 (object_dim_list)


état 581

  481 reference_variable: reference_variable '[' dim_offset ']' .

    $défaut  réduction par utilisation de la règle 481 (reference_variable)


état 582

  482 reference_variable: reference_variable '{' expr '}' .

    $défaut  réduction par utilisation de la règle 482 (reference_variable)


état 583

  512 non_empty_array_pair_list: expr "=> (T_DOUBLE_ARROW)" '&' w_variable .

    $défaut  réduction par utilisation de la règle 512 (non_empty_array_pair_list)


état 584

  511 non_empty_array_pair_list: non_empty_array_pair_list ',' '&' w_variable .

    $défaut  réduction par utilisation de la règle 511 (non_empty_array_pair_list)


état 585

  506 non_empty_array_pair_list: non_empty_array_pair_list ',' expr "=> (T_DOUBLE_ARROW)" . expr
  510                          | non_empty_array_pair_list ',' expr "=> (T_DOUBLE_ARROW)" . '&' w_variable

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '&'                                           décalage et aller à l'état 668
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 669
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 586

  390 dynamic_class_name_reference: base_variable "-> (T_OBJECT_OPERATOR)" $@66 object_property . $@67 dynamic_class_name_variable_properties

    $défaut  réduction par utilisation de la règle 389 ($@67)

    $@67  aller à l'état 670


état 587

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
   41 unticked_statement: "if (T_IF)" parenthesis_expr ':' $@7 inner_statement_list . $@8 new_elseif_list new_else_single "endif (T_ENDIF)" ';'

    "elseif (T_ELSEIF)"  réduction par utilisation de la règle 40 ($@8)
    "else (T_ELSE)"      réduction par utilisation de la règle 40 ($@8)
    "endif (T_ENDIF)"    réduction par utilisation de la règle 40 ($@8)
    $défaut             réduction par utilisation de la règle 26 ($@4)

    $@4  aller à l'état 390
    $@8  aller à l'état 671


état 588

   38 unticked_statement: "if (T_IF)" parenthesis_expr $@5 statement $@6 . elseif_list else_single

    $défaut  réduction par utilisation de la règle 151 (elseif_list)

    elseif_list  aller à l'état 672


état 589

   47 unticked_statement: "do (T_DO)" $@11 statement "while (T_WHILE)" $@12 . parenthesis_expr ';'

    '('  décalage et aller à l'état 175

    parenthesis_expr  aller à l'état 673


état 590

  150 while_statement: ':' . inner_statement_list "endwhile (T_ENDWHILE)" ';'

    $défaut  réduction par utilisation de la règle 28 (inner_statement_list)

    inner_statement_list  aller à l'état 674


état 591

  149 while_statement: statement .

    $défaut  réduction par utilisation de la règle 149 (while_statement)


état 592

   44 unticked_statement: "while (T_WHILE)" $@9 parenthesis_expr @10 while_statement .

    $défaut  réduction par utilisation de la règle 44 (unticked_statement)


état 593

   51 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@13 . for_expr ';' $@14 for_expr ')' $@15 for_statement

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    $défaut  réduction par utilisation de la règle 244 (for_expr)

    namespace_name                     aller à l'état 84
    for_expr                           aller à l'état 675
    non_empty_for_expr                 aller à l'état 332
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 333
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 594

  247 non_empty_for_expr: non_empty_for_expr ',' $@41 . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 676
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 595

   73 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable "as (T_AS)" $@19 . foreach_variable foreach_optional_arg ')' $@20 foreach_statement

    '&'                        décalage et aller à l'état 677
    "identifier (T_STRING)"    décalage et aller à l'état 123
    "variable (T_VARIABLE)"    décalage et aller à l'état 35
    "static (T_STATIC)"        décalage et aller à l'état 148
    "list (T_LIST)"            décalage et aller à l'état 678
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 149
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 150
    '$'                        décalage et aller à l'état 81

    namespace_name                     aller à l'état 151
    foreach_variable                   aller à l'état 679
    function_call                      aller à l'état 101
    class_name                         aller à l'état 152
    variable                           aller à l'état 680
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 155
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118


état 596

   70 unticked_statement: "foreach (T_FOREACH)" '(' variable "as (T_AS)" $@17 . foreach_variable foreach_optional_arg ')' $@18 foreach_statement

    '&'                        décalage et aller à l'état 677
    "identifier (T_STRING)"    décalage et aller à l'état 123
    "variable (T_VARIABLE)"    décalage et aller à l'état 35
    "static (T_STATIC)"        décalage et aller à l'état 148
    "list (T_LIST)"            décalage et aller à l'état 678
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 149
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 150
    '$'                        décalage et aller à l'état 81

    namespace_name                     aller à l'état 151
    foreach_variable                   aller à l'état 681
    function_call                      aller à l'état 101
    class_name                         aller à l'état 152
    variable                           aller à l'état 680
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 155
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118


état 597

  136 declare_list: "identifier (T_STRING)" '=' . static_scalar

    '+'                                           décalage et aller à l'état 491
    '-'                                           décalage et aller à l'état 492
    '['                                           décalage et aller à l'état 493
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 494
    "static (T_STATIC)"                           décalage et aller à l'état 148
    "array (T_ARRAY)"                             décalage et aller à l'état 495
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 496
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 497
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 498
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 499

    namespace_name            aller à l'état 500
    class_name                aller à l'état 501
    common_scalar             aller à l'état 502
    static_scalar             aller à l'état 682
    static_class_constant     aller à l'état 504
    static_class_name_scalar  aller à l'état 505


état 598

  137 declare_list: declare_list ',' . "identifier (T_STRING)" '=' static_scalar

    "identifier (T_STRING)"  décalage et aller à l'état 683


état 599

   75 unticked_statement: "declare (T_DECLARE)" $@21 '(' declare_list ')' . declare_statement

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 11
    ':'                                           décalage et aller à l'état 684
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "if (T_IF)"                                   décalage et aller à l'état 30
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 33
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    T_INLINE_HTML                                 décalage et aller à l'état 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "echo (T_ECHO)"                               décalage et aller à l'état 38
    "do (T_DO)"                                   décalage et aller à l'état 39
    "while (T_WHILE)"                             décalage et aller à l'état 40
    "for (T_FOR)"                                 décalage et aller à l'état 41
    "foreach (T_FOREACH)"                         décalage et aller à l'état 42
    "declare (T_DECLARE)"                         décalage et aller à l'état 43
    "switch (T_SWITCH)"                           décalage et aller à l'état 44
    "break (T_BREAK)"                             décalage et aller à l'état 45
    "continue (T_CONTINUE)"                       décalage et aller à l'état 46
    "goto (T_GOTO)"                               décalage et aller à l'état 47
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "return (T_RETURN)"                           décalage et aller à l'état 50
    "try (T_TRY)"                                 décalage et aller à l'état 51
    "throw (T_THROW)"                             décalage et aller à l'état 52
    "global (T_GLOBAL)"                           décalage et aller à l'état 54
    "static (T_STATIC)"                           décalage et aller à l'état 57
    "unset (T_UNSET)"                             décalage et aller à l'état 58
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    ';'                                           décalage et aller à l'état 79
    '{'                                           décalage et aller à l'état 80
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    statement                          aller à l'état 685
    unticked_statement                 aller à l'état 88
    declare_statement                  aller à l'état 686
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    yield_expr                         aller à l'état 97
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 105
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 600

  141 switch_case_list: ':' ';' . case_list "endswitch (T_ENDSWITCH)" ';'

    $défaut  réduction par utilisation de la règle 142 (case_list)

    case_list  aller à l'état 687


état 601

  140 switch_case_list: ':' case_list . "endswitch (T_ENDSWITCH)" ';'
  144 case_list: case_list . "case (T_CASE)" expr case_separator $@35 inner_statement_list
  146          | case_list . "default (T_DEFAULT)" case_separator $@36 inner_statement_list

    "endswitch (T_ENDSWITCH)"  décalage et aller à l'état 688
    "case (T_CASE)"            décalage et aller à l'état 689
    "default (T_DEFAULT)"      décalage et aller à l'état 690


état 602

  139 switch_case_list: '{' ';' . case_list '}'

    $défaut  réduction par utilisation de la règle 142 (case_list)

    case_list  aller à l'état 691


état 603

  138 switch_case_list: '{' case_list . '}'
  144 case_list: case_list . "case (T_CASE)" expr case_separator $@35 inner_statement_list
  146          | case_list . "default (T_DEFAULT)" case_separator $@36 inner_statement_list

    "case (T_CASE)"        décalage et aller à l'état 689
    "default (T_DEFAULT)"  décalage et aller à l'état 690
    '}'                    décalage et aller à l'état 692


état 604

  420 static_scalar: '+' static_scalar .

    $défaut  réduction par utilisation de la règle 420 (static_scalar)


état 605

  421 static_scalar: '-' static_scalar .

    $défaut  réduction par utilisation de la règle 421 (static_scalar)


état 606

  443 non_empty_static_array_pair_list: static_scalar . "=> (T_DOUBLE_ARROW)" static_scalar
  444                                 | static_scalar .

    "=> (T_DOUBLE_ARROW)"  décalage et aller à l'état 693

    $défaut  réduction par utilisation de la règle 444 (non_empty_static_array_pair_list)


état 607

  423 static_scalar: '[' static_array_pair_list . ']'

    ']'  décalage et aller à l'état 694


état 608

  438 static_array_pair_list: non_empty_static_array_pair_list . possible_comma
  441 non_empty_static_array_pair_list: non_empty_static_array_pair_list . ',' static_scalar "=> (T_DOUBLE_ARROW)" static_scalar
  442                                 | non_empty_static_array_pair_list . ',' static_scalar

    ','  décalage et aller à l'état 695

    $défaut  réduction par utilisation de la règle 439 (possible_comma)

    possible_comma  aller à l'état 696


état 609

  422 static_scalar: "array (T_ARRAY)" '(' . static_array_pair_list ')'

    '+'                                           décalage et aller à l'état 491
    '-'                                           décalage et aller à l'état 492
    '['                                           décalage et aller à l'état 493
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 494
    "static (T_STATIC)"                           décalage et aller à l'état 148
    "array (T_ARRAY)"                             décalage et aller à l'état 495
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 496
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 497
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 498
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 499

    $défaut  réduction par utilisation de la règle 437 (static_array_pair_list)

    namespace_name                    aller à l'état 500
    class_name                        aller à l'état 501
    common_scalar                     aller à l'état 502
    static_scalar                     aller à l'état 606
    static_class_constant             aller à l'état 504
    static_array_pair_list            aller à l'état 697
    non_empty_static_array_pair_list  aller à l'état 608
    static_class_name_scalar          aller à l'état 505


état 610

  413 common_scalar: "heredoc start (T_START_HEREDOC)" "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . "heredoc end (T_END_HEREDOC)"

    "heredoc end (T_END_HEREDOC)"  décalage et aller à l'état 373


état 611

  381 class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name
  418 static_scalar: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  décalage et aller à l'état 123

    namespace_name  aller à l'état 698


état 612

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  382 class_name: "\\ (T_NS_SEPARATOR)" namespace_name .
  419 static_scalar: "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  décalage et aller à l'état 239

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  réduction par utilisation de la règle 382 (class_name)
    $défaut                       réduction par utilisation de la règle 419 (static_scalar)


état 613

  426 static_class_constant: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . "identifier (T_STRING)"
  543 static_class_name_scalar: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . "class (T_CLASS)"

    "identifier (T_STRING)"  décalage et aller à l'état 699
    "class (T_CLASS)"        décalage et aller à l'état 700


état 614

   79 unticked_statement: "try (T_TRY)" $@22 '{' inner_statement_list '}' . catch_statement $@23 finally_statement

    "catch (T_CATCH)"  décalage et aller à l'état 701

    $défaut  réduction par utilisation de la règle 82 (catch_statement)

    catch_statement  aller à l'état 702


état 615

   23 use_declaration: "\\ (T_NS_SEPARATOR)" namespace_name "as (T_AS)" "identifier (T_STRING)" .

    $défaut  réduction par utilisation de la règle 23 (use_declaration)


état 616

  188 global_var: '$' '{' expr '}' .

    $défaut  réduction par utilisation de la règle 188 (global_var)


état 617

  190 static_var_list: static_var_list ',' "variable (T_VARIABLE)" '=' . static_scalar

    '+'                                           décalage et aller à l'état 491
    '-'                                           décalage et aller à l'état 492
    '['                                           décalage et aller à l'état 493
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 494
    "static (T_STATIC)"                           décalage et aller à l'état 148
    "array (T_ARRAY)"                             décalage et aller à l'état 495
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 496
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 497
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 498
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 499

    namespace_name            aller à l'état 500
    class_name                aller à l'état 501
    common_scalar             aller à l'état 502
    static_scalar             aller à l'état 703
    static_class_constant     aller à l'état 504
    static_class_name_scalar  aller à l'état 505


état 618

  346 expr_without_variable: "static (T_STATIC)" function is_reference @57 '(' . parameter_list ')' lexical_vars '{' inner_statement_list '}'

    "identifier (T_STRING)"    décalage et aller à l'état 123
    "array (T_ARRAY)"          décalage et aller à l'état 649
    "callable (T_CALLABLE)"    décalage et aller à l'état 650
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 550
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 551

    ')'       réduction par utilisation de la règle 162 (parameter_list)
    $défaut  réduction par utilisation de la règle 171 (optional_class_type)

    namespace_name              aller à l'état 552
    parameter_list              aller à l'état 704
    non_empty_parameter_list    aller à l'état 652
    optional_class_type         aller à l'état 653
    fully_qualified_class_name  aller à l'état 654


état 619

   99 unset_variables: unset_variables ',' unset_variable .

    $défaut  réduction par utilisation de la règle 99 (unset_variables)


état 620

   67 unticked_statement: "unset (T_UNSET)" '(' unset_variables ')' ';' .

    $défaut  réduction par utilisation de la règle 67 (unticked_statement)


état 621

  538 isset_variables: isset_variables ',' $@76 . isset_variable

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 362
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 195
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 363
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    isset_variable                     aller à l'état 705
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 622

  502 assignment_list_element: "list (T_LIST)" '(' . $@74 assignment_list ')'

    $défaut  réduction par utilisation de la règle 501 ($@74)

    $@74  aller à l'état 706


état 623

  498 assignment_list: assignment_list ',' . assignment_list_element

    "identifier (T_STRING)"    décalage et aller à l'état 123
    "variable (T_VARIABLE)"    décalage et aller à l'état 35
    "static (T_STATIC)"        décalage et aller à l'état 148
    "list (T_LIST)"            décalage et aller à l'état 522
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 149
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 150
    '$'                        décalage et aller à l'état 81

    $défaut  réduction par utilisation de la règle 503 (assignment_list_element)

    namespace_name                     aller à l'état 151
    function_call                      aller à l'état 101
    class_name                         aller à l'état 152
    variable                           aller à l'état 523
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 155
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    assignment_list_element            aller à l'état 707


état 624

  263 expr_without_variable: "list (T_LIST)" '(' $@45 assignment_list ')' . '=' expr

    '='  décalage et aller à l'état 708


état 625

  525 encaps_var_offset: "identifier (T_STRING)" .

    $défaut  réduction par utilisation de la règle 525 (encaps_var_offset)


état 626

  527 encaps_var_offset: "variable (T_VARIABLE)" .

    $défaut  réduction par utilisation de la règle 527 (encaps_var_offset)


état 627

  526 encaps_var_offset: "number (T_NUM_STRING)" .

    $défaut  réduction par utilisation de la règle 526 (encaps_var_offset)


état 628

  520 encaps_var: "variable (T_VARIABLE)" '[' $@75 encaps_var_offset . ']'

    ']'  décalage et aller à l'état 709


état 629

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  523 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" '[' expr . ']' '}'

    "or (T_LOGICAL_OR)"           décalage et aller à l'état 252
    "xor (T_LOGICAL_XOR)"         décalage et aller à l'état 253
    "and (T_LOGICAL_AND)"         décalage et aller à l'état 254
    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277
    ']'                           décalage et aller à l'état 710


état 630

  366 function_call: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name @59 function_call_parameter_list .

    $défaut  réduction par utilisation de la règle 366 (function_call)


état 631

   15 top_statement: "namespace (T_NAMESPACE)" '{' $@3 top_statement_list '}' .

    $défaut  réduction par utilisation de la règle 15 (top_statement)


état 632

    3 top_statement_list: top_statement_list . $@1 top_statement
   13 top_statement: "namespace (T_NAMESPACE)" namespace_name '{' $@2 top_statement_list . '}'

    '}'  décalage et aller à l'état 711

    $défaut  réduction par utilisation de la règle 2 ($@1)

    $@1  aller à l'état 4


état 633

  320 expr_without_variable: '(' new_expr ')' @51 instance_call .

    $défaut  réduction par utilisation de la règle 320 (expr_without_variable)


état 634

  259 instance_call: $@43 . chaining_instance_call

    '['                       décalage et aller à l'état 712
    "-> (T_OBJECT_OPERATOR)"  décalage et aller à l'état 713

    chaining_method_or_property  aller à l'état 714
    chaining_dereference         aller à l'état 715
    chaining_instance_call       aller à l'état 716
    variable_property            aller à l'état 717


état 635

   32 inner_statement: "__halt_compiler (T_HALT_COMPILER)" '(' . ')' ';'

    ')'  décalage et aller à l'état 718


état 636

  180 non_empty_function_call_parameter_list: '&' w_variable .

    $défaut  réduction par utilisation de la règle 180 (non_empty_function_call_parameter_list)


état 637

  181 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list ',' . expr_without_variable
  182                                       | non_empty_function_call_parameter_list ',' . variable
  183                                       | non_empty_function_call_parameter_list ',' . '&' w_variable

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '&'                                           décalage et aller à l'état 719
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 720
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 195
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 721
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 638

  176 function_call_parameter_list: '(' non_empty_function_call_parameter_list ')' .

    $défaut  réduction par utilisation de la règle 176 (function_call_parameter_list)


état 639

  177 function_call_parameter_list: '(' yield_expr ')' .

    $défaut  réduction par utilisation de la règle 177 (function_call_parameter_list)


état 640

   24 constant_declaration: constant_declaration ',' "identifier (T_STRING)" '=' static_scalar .

    $défaut  réduction par utilisation de la règle 24 (constant_declaration)


état 641

  384 fully_qualified_class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  décalage et aller à l'état 123

    namespace_name  aller à l'état 722


état 642

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  385 fully_qualified_class_name: "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  décalage et aller à l'état 239

    $défaut  réduction par utilisation de la règle 385 (fully_qualified_class_name)


état 643

  121 implements_list: "implements (T_IMPLEMENTS)" . interface_list

    "identifier (T_STRING)"    décalage et aller à l'état 123
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 550
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 551

    namespace_name              aller à l'état 552
    interface_list              aller à l'état 723
    fully_qualified_class_name  aller à l'état 646


état 644

  108 unticked_class_declaration_statement: class_entry_type "identifier (T_STRING)" extends_from $@32 implements_list . '{' class_statement_list '}'

    '{'  décalage et aller à l'état 724


état 645

  119 interface_extends_list: "extends (T_EXTENDS)" interface_list .
  123 interface_list: interface_list . ',' fully_qualified_class_name

    ','  décalage et aller à l'état 725

    $défaut  réduction par utilisation de la règle 119 (interface_extends_list)


état 646

  122 interface_list: fully_qualified_class_name .

    $défaut  réduction par utilisation de la règle 122 (interface_list)


état 647

  110 unticked_class_declaration_statement: interface_entry "identifier (T_STRING)" $@33 interface_extends_list '{' . class_statement_list '}'

    $défaut  réduction par utilisation de la règle 194 (class_statement_list)

    class_statement_list  aller à l'état 726


état 648

  106 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" $@31 '(' . parameter_list ')' '{' inner_statement_list '}'

    "identifier (T_STRING)"    décalage et aller à l'état 123
    "array (T_ARRAY)"          décalage et aller à l'état 649
    "callable (T_CALLABLE)"    décalage et aller à l'état 650
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 550
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 551

    ')'       réduction par utilisation de la règle 162 (parameter_list)
    $défaut  réduction par utilisation de la règle 171 (optional_class_type)

    namespace_name              aller à l'état 552
    parameter_list              aller à l'état 727
    non_empty_parameter_list    aller à l'état 652
    optional_class_type         aller à l'état 653
    fully_qualified_class_name  aller à l'état 654


état 649

  172 optional_class_type: "array (T_ARRAY)" .

    $défaut  réduction par utilisation de la règle 172 (optional_class_type)


état 650

  173 optional_class_type: "callable (T_CALLABLE)" .

    $défaut  réduction par utilisation de la règle 173 (optional_class_type)


état 651

  344 expr_without_variable: function is_reference @56 '(' parameter_list . ')' lexical_vars '{' inner_statement_list '}'

    ')'  décalage et aller à l'état 728


état 652

  161 parameter_list: non_empty_parameter_list .
  167 non_empty_parameter_list: non_empty_parameter_list . ',' optional_class_type "variable (T_VARIABLE)"
  168                         | non_empty_parameter_list . ',' optional_class_type '&' "variable (T_VARIABLE)"
  169                         | non_empty_parameter_list . ',' optional_class_type '&' "variable (T_VARIABLE)" '=' static_scalar
  170                         | non_empty_parameter_list . ',' optional_class_type "variable (T_VARIABLE)" '=' static_scalar

    ','  décalage et aller à l'état 729

    $défaut  réduction par utilisation de la règle 161 (parameter_list)


état 653

  163 non_empty_parameter_list: optional_class_type . "variable (T_VARIABLE)"
  164                         | optional_class_type . '&' "variable (T_VARIABLE)"
  165                         | optional_class_type . '&' "variable (T_VARIABLE)" '=' static_scalar
  166                         | optional_class_type . "variable (T_VARIABLE)" '=' static_scalar

    '&'                      décalage et aller à l'état 730
    "variable (T_VARIABLE)"  décalage et aller à l'état 731


état 654

  174 optional_class_type: fully_qualified_class_name .

    $défaut  réduction par utilisation de la règle 174 (optional_class_type)


état 655

  474 array_function_dereference: function_call $@72 '[' dim_offset ']' .

    $défaut  réduction par utilisation de la règle 474 (array_function_dereference)


état 656

  495 variable_name: '{' expr '}' .

    $défaut  réduction par utilisation de la règle 495 (variable_name)


état 657

  372 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects $@62 function_call_parameter_list .

    $défaut  réduction par utilisation de la règle 372 (function_call)


état 658

  370 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name @61 function_call_parameter_list .

    $défaut  réduction par utilisation de la règle 370 (function_call)


état 659

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  325                      | expr '?' ':' $@54 expr .

    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 325 (expr_without_variable)


état 660

  323 expr_without_variable: expr '?' $@52 expr ':' . $@53 expr

    $défaut  réduction par utilisation de la règle 322 ($@53)

    $@53  aller à l'état 732


état 661

  267 expr_without_variable: variable '=' '&' "new (T_NEW)" class_name_reference . $@46 ctor_arguments

    $défaut  réduction par utilisation de la règle 266 ($@46)

    $@46  aller à l'état 733


état 662

  376 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects $@64 function_call_parameter_list .

    $défaut  réduction par utilisation de la règle 376 (function_call)


état 663

  374 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name $@63 function_call_parameter_list .

    $défaut  réduction par utilisation de la règle 374 (function_call)


état 664

  490 object_property: variable_without_objects $@73 .

    $défaut  réduction par utilisation de la règle 490 (object_property)


état 665

  454 variable: base_variable_with_function_calls "-> (T_OBJECT_OPERATOR)" $@68 object_property $@69 . method_or_not variable_properties

    '('       réduction par utilisation de la règle 462 (@71)
    $défaut  réduction par utilisation de la règle 466 (method_or_not)

    array_method_dereference  aller à l'état 734
    method                    aller à l'état 735
    @71                       aller à l'état 736
    method_or_not             aller à l'état 737


état 666

  491 object_dim_list: object_dim_list '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    $défaut  réduction par utilisation de la règle 486 (dim_offset)

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 325
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    dim_offset                         aller à l'état 738
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 667

  492 object_dim_list: object_dim_list '{' . expr '}'

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 739
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 668

  510 non_empty_array_pair_list: non_empty_array_pair_list ',' expr "=> (T_DOUBLE_ARROW)" '&' . w_variable

    "identifier (T_STRING)"    décalage et aller à l'état 123
    "variable (T_VARIABLE)"    décalage et aller à l'état 35
    "static (T_STATIC)"        décalage et aller à l'état 148
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 149
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 150
    '$'                        décalage et aller à l'état 81

    namespace_name                     aller à l'état 151
    function_call                      aller à l'état 101
    class_name                         aller à l'état 152
    w_variable                         aller à l'état 740
    variable                           aller à l'état 310
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 155
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118


état 669

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  506 non_empty_array_pair_list: non_empty_array_pair_list ',' expr "=> (T_DOUBLE_ARROW)" expr .

    "or (T_LOGICAL_OR)"           décalage et aller à l'état 252
    "xor (T_LOGICAL_XOR)"         décalage et aller à l'état 253
    "and (T_LOGICAL_AND)"         décalage et aller à l'état 254
    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 506 (non_empty_array_pair_list)


état 670

  390 dynamic_class_name_reference: base_variable "-> (T_OBJECT_OPERATOR)" $@66 object_property $@67 . dynamic_class_name_variable_properties

    $défaut  réduction par utilisation de la règle 393 (dynamic_class_name_variable_properties)

    dynamic_class_name_variable_properties  aller à l'état 741


état 671

   41 unticked_statement: "if (T_IF)" parenthesis_expr ':' $@7 inner_statement_list $@8 . new_elseif_list new_else_single "endif (T_ENDIF)" ';'

    $défaut  réduction par utilisation de la règle 154 (new_elseif_list)

    new_elseif_list  aller à l'état 742


état 672

   38 unticked_statement: "if (T_IF)" parenthesis_expr $@5 statement $@6 elseif_list . else_single
  153 elseif_list: elseif_list . "elseif (T_ELSEIF)" parenthesis_expr $@37 statement

    "elseif (T_ELSEIF)"  décalage et aller à l'état 743
    "else (T_ELSE)"      décalage et aller à l'état 744

    "elseif (T_ELSEIF)"  [réduction par utilisation de la règle 157 (else_single)]
    "else (T_ELSE)"      [réduction par utilisation de la règle 157 (else_single)]
    $défaut             réduction par utilisation de la règle 157 (else_single)

    else_single  aller à l'état 745


état 673

   47 unticked_statement: "do (T_DO)" $@11 statement "while (T_WHILE)" $@12 parenthesis_expr . ';'

    ';'  décalage et aller à l'état 746


état 674

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  150 while_statement: ':' inner_statement_list . "endwhile (T_ENDWHILE)" ';'

    "endwhile (T_ENDWHILE)"  décalage et aller à l'état 747

    $défaut  réduction par utilisation de la règle 26 ($@4)

    $@4  aller à l'état 390


état 675

   51 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@13 for_expr . ';' $@14 for_expr ')' $@15 for_statement

    ';'  décalage et aller à l'état 748


état 676

  247 non_empty_for_expr: non_empty_for_expr ',' $@41 expr .
  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "or (T_LOGICAL_OR)"           décalage et aller à l'état 252
    "xor (T_LOGICAL_XOR)"         décalage et aller à l'état 253
    "and (T_LOGICAL_AND)"         décalage et aller à l'état 254
    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 247 (non_empty_for_expr)


état 677

  127 foreach_variable: '&' . variable

    "identifier (T_STRING)"    décalage et aller à l'état 123
    "variable (T_VARIABLE)"    décalage et aller à l'état 35
    "static (T_STATIC)"        décalage et aller à l'état 148
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 149
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 150
    '$'                        décalage et aller à l'état 81

    namespace_name                     aller à l'état 151
    function_call                      aller à l'état 101
    class_name                         aller à l'état 152
    variable                           aller à l'état 749
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 155
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118


état 678

  129 foreach_variable: "list (T_LIST)" . '(' $@34 assignment_list ')'

    '('  décalage et aller à l'état 750


état 679

   73 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable "as (T_AS)" $@19 foreach_variable . foreach_optional_arg ')' $@20 foreach_statement

    "=> (T_DOUBLE_ARROW)"  décalage et aller à l'état 751

    $défaut  réduction par utilisation de la règle 124 (foreach_optional_arg)

    foreach_optional_arg  aller à l'état 752


état 680

  126 foreach_variable: variable .

    $défaut  réduction par utilisation de la règle 126 (foreach_variable)


état 681

   70 unticked_statement: "foreach (T_FOREACH)" '(' variable "as (T_AS)" $@17 foreach_variable . foreach_optional_arg ')' $@18 foreach_statement

    "=> (T_DOUBLE_ARROW)"  décalage et aller à l'état 751

    $défaut  réduction par utilisation de la règle 124 (foreach_optional_arg)

    foreach_optional_arg  aller à l'état 753


état 682

  136 declare_list: "identifier (T_STRING)" '=' static_scalar .

    $défaut  réduction par utilisation de la règle 136 (declare_list)


état 683

  137 declare_list: declare_list ',' "identifier (T_STRING)" . '=' static_scalar

    '='  décalage et aller à l'état 754


état 684

  135 declare_statement: ':' . inner_statement_list "enddeclare (T_ENDDECLARE)" ';'

    $défaut  réduction par utilisation de la règle 28 (inner_statement_list)

    inner_statement_list  aller à l'état 755


état 685

  134 declare_statement: statement .

    $défaut  réduction par utilisation de la règle 134 (declare_statement)


état 686

   75 unticked_statement: "declare (T_DECLARE)" $@21 '(' declare_list ')' declare_statement .

    $défaut  réduction par utilisation de la règle 75 (unticked_statement)


état 687

  141 switch_case_list: ':' ';' case_list . "endswitch (T_ENDSWITCH)" ';'
  144 case_list: case_list . "case (T_CASE)" expr case_separator $@35 inner_statement_list
  146          | case_list . "default (T_DEFAULT)" case_separator $@36 inner_statement_list

    "endswitch (T_ENDSWITCH)"  décalage et aller à l'état 756
    "case (T_CASE)"            décalage et aller à l'état 689
    "default (T_DEFAULT)"      décalage et aller à l'état 690


état 688

  140 switch_case_list: ':' case_list "endswitch (T_ENDSWITCH)" . ';'

    ';'  décalage et aller à l'état 757


état 689

  144 case_list: case_list "case (T_CASE)" . expr case_separator $@35 inner_statement_list

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 758
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 690

  146 case_list: case_list "default (T_DEFAULT)" . case_separator $@36 inner_statement_list

    ':'  décalage et aller à l'état 759
    ';'  décalage et aller à l'état 760

    case_separator  aller à l'état 761


état 691

  139 switch_case_list: '{' ';' case_list . '}'
  144 case_list: case_list . "case (T_CASE)" expr case_separator $@35 inner_statement_list
  146          | case_list . "default (T_DEFAULT)" case_separator $@36 inner_statement_list

    "case (T_CASE)"        décalage et aller à l'état 689
    "default (T_DEFAULT)"  décalage et aller à l'état 690
    '}'                    décalage et aller à l'état 762


état 692

  138 switch_case_list: '{' case_list '}' .

    $défaut  réduction par utilisation de la règle 138 (switch_case_list)


état 693

  443 non_empty_static_array_pair_list: static_scalar "=> (T_DOUBLE_ARROW)" . static_scalar

    '+'                                           décalage et aller à l'état 491
    '-'                                           décalage et aller à l'état 492
    '['                                           décalage et aller à l'état 493
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 494
    "static (T_STATIC)"                           décalage et aller à l'état 148
    "array (T_ARRAY)"                             décalage et aller à l'état 495
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 496
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 497
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 498
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 499

    namespace_name            aller à l'état 500
    class_name                aller à l'état 501
    common_scalar             aller à l'état 502
    static_scalar             aller à l'état 763
    static_class_constant     aller à l'état 504
    static_class_name_scalar  aller à l'état 505


état 694

  423 static_scalar: '[' static_array_pair_list ']' .

    $défaut  réduction par utilisation de la règle 423 (static_scalar)


état 695

  440 possible_comma: ',' .
  441 non_empty_static_array_pair_list: non_empty_static_array_pair_list ',' . static_scalar "=> (T_DOUBLE_ARROW)" static_scalar
  442                                 | non_empty_static_array_pair_list ',' . static_scalar

    '+'                                           décalage et aller à l'état 491
    '-'                                           décalage et aller à l'état 492
    '['                                           décalage et aller à l'état 493
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 494
    "static (T_STATIC)"                           décalage et aller à l'état 148
    "array (T_ARRAY)"                             décalage et aller à l'état 495
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 496
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 497
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 498
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 499

    $défaut  réduction par utilisation de la règle 440 (possible_comma)

    namespace_name            aller à l'état 500
    class_name                aller à l'état 501
    common_scalar             aller à l'état 502
    static_scalar             aller à l'état 764
    static_class_constant     aller à l'état 504
    static_class_name_scalar  aller à l'état 505


état 696

  438 static_array_pair_list: non_empty_static_array_pair_list possible_comma .

    $défaut  réduction par utilisation de la règle 438 (static_array_pair_list)


état 697

  422 static_scalar: "array (T_ARRAY)" '(' static_array_pair_list . ')'

    ')'  décalage et aller à l'état 765


état 698

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  381 class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name .
  418 static_scalar: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  décalage et aller à l'état 239

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  réduction par utilisation de la règle 381 (class_name)
    $défaut                       réduction par utilisation de la règle 418 (static_scalar)


état 699

  426 static_class_constant: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)" .

    $défaut  réduction par utilisation de la règle 426 (static_class_constant)


état 700

  543 static_class_name_scalar: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "class (T_CLASS)" .

    $défaut  réduction par utilisation de la règle 543 (static_class_name_scalar)


état 701

   87 catch_statement: "catch (T_CATCH)" . '(' $@24 fully_qualified_class_name $@25 "variable (T_VARIABLE)" ')' $@26 '{' inner_statement_list '}' $@27 additional_catches

    '('  décalage et aller à l'état 766


état 702

   79 unticked_statement: "try (T_TRY)" $@22 '{' inner_statement_list '}' catch_statement . $@23 finally_statement

    $défaut  réduction par utilisation de la règle 78 ($@23)

    $@23  aller à l'état 767


état 703

  190 static_var_list: static_var_list ',' "variable (T_VARIABLE)" '=' static_scalar .

    $défaut  réduction par utilisation de la règle 190 (static_var_list)


état 704

  346 expr_without_variable: "static (T_STATIC)" function is_reference @57 '(' parameter_list . ')' lexical_vars '{' inner_statement_list '}'

    ')'  décalage et aller à l'état 768


état 705

  538 isset_variables: isset_variables ',' $@76 isset_variable .

    $défaut  réduction par utilisation de la règle 538 (isset_variables)


état 706

  502 assignment_list_element: "list (T_LIST)" '(' $@74 . assignment_list ')'

    "identifier (T_STRING)"    décalage et aller à l'état 123
    "variable (T_VARIABLE)"    décalage et aller à l'état 35
    "static (T_STATIC)"        décalage et aller à l'état 148
    "list (T_LIST)"            décalage et aller à l'état 522
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 149
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 150
    '$'                        décalage et aller à l'état 81

    $défaut  réduction par utilisation de la règle 503 (assignment_list_element)

    namespace_name                     aller à l'état 151
    function_call                      aller à l'état 101
    class_name                         aller à l'état 152
    variable                           aller à l'état 523
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 155
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    assignment_list                    aller à l'état 769
    assignment_list_element            aller à l'état 525


état 707

  498 assignment_list: assignment_list ',' assignment_list_element .

    $défaut  réduction par utilisation de la règle 498 (assignment_list)


état 708

  263 expr_without_variable: "list (T_LIST)" '(' $@45 assignment_list ')' '=' . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 770
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 709

  520 encaps_var: "variable (T_VARIABLE)" '[' $@75 encaps_var_offset ']' .

    $défaut  réduction par utilisation de la règle 520 (encaps_var)


état 710

  523 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" '[' expr ']' . '}'

    '}'  décalage et aller à l'état 771


état 711

   13 top_statement: "namespace (T_NAMESPACE)" namespace_name '{' $@2 top_statement_list '}' .

    $défaut  réduction par utilisation de la règle 13 (top_statement)


état 712

  252 chaining_dereference: '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    $défaut  réduction par utilisation de la règle 486 (dim_offset)

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 325
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    dim_offset                         aller à l'état 772
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 713

  459 variable_property: "-> (T_OBJECT_OPERATOR)" . object_property $@70 method_or_not

    "identifier (T_STRING)"  décalage et aller à l'état 465
    "variable (T_VARIABLE)"  décalage et aller à l'état 35
    '{'                      décalage et aller à l'état 408
    '$'                      décalage et aller à l'état 81

    variable_without_objects   aller à l'état 577
    reference_variable         aller à l'état 410
    compound_variable          aller à l'état 117
    object_property            aller à l'état 773
    object_dim_list            aller à l'état 579
    variable_name              aller à l'état 580
    simple_indirect_reference  aller à l'état 412


état 714

  249 chaining_method_or_property: chaining_method_or_property . variable_property
  256 chaining_instance_call: chaining_method_or_property .

    "-> (T_OBJECT_OPERATOR)"  décalage et aller à l'état 713

    $défaut  réduction par utilisation de la règle 256 (chaining_instance_call)

    variable_property  aller à l'état 774


état 715

  251 chaining_dereference: chaining_dereference . '[' dim_offset ']'
  254 chaining_instance_call: chaining_dereference . $@42 chaining_method_or_property
  255                       | chaining_dereference .

    '['  décalage et aller à l'état 775

    "-> (T_OBJECT_OPERATOR)"  réduction par utilisation de la règle 253 ($@42)
    $défaut                  réduction par utilisation de la règle 255 (chaining_instance_call)

    $@42  aller à l'état 776


état 716

  259 instance_call: $@43 chaining_instance_call .

    $défaut  réduction par utilisation de la règle 259 (instance_call)


état 717

  250 chaining_method_or_property: variable_property .

    $défaut  réduction par utilisation de la règle 250 (chaining_method_or_property)


état 718

   32 inner_statement: "__halt_compiler (T_HALT_COMPILER)" '(' ')' . ';'

    ';'  décalage et aller à l'état 777


état 719

  183 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list ',' '&' . w_variable

    "identifier (T_STRING)"    décalage et aller à l'état 123
    "variable (T_VARIABLE)"    décalage et aller à l'état 35
    "static (T_STATIC)"        décalage et aller à l'état 148
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 149
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 150
    '$'                        décalage et aller à l'état 81

    namespace_name                     aller à l'état 151
    function_call                      aller à l'état 101
    class_name                         aller à l'état 152
    w_variable                         aller à l'état 778
    variable                           aller à l'état 310
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 155
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118


état 720

  181 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list ',' expr_without_variable .
  446 expr: expr_without_variable .

    ','       réduction par utilisation de la règle 181 (non_empty_function_call_parameter_list)
    ')'       réduction par utilisation de la règle 181 (non_empty_function_call_parameter_list)
    $défaut  réduction par utilisation de la règle 446 (expr)


état 721

  182 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list ',' variable .
  264 expr_without_variable: variable . '=' expr
  265                      | variable . '=' '&' variable
  267                      | variable . '=' '&' "new (T_NEW)" class_name_reference $@46 ctor_arguments
  269                      | variable . "+= (T_PLUS_EQUAL)" expr
  270                      | variable . "-= (T_MINUS_EQUAL)" expr
  271                      | variable . "*= (T_MUL_EQUAL)" expr
  272                      | variable . "/= (T_DIV_EQUAL)" expr
  273                      | variable . ".= (T_CONCAT_EQUAL)" expr
  274                      | variable . "%= (T_MOD_EQUAL)" expr
  275                      | variable . "&= (T_AND_EQUAL)" expr
  276                      | variable . "|= (T_OR_EQUAL)" expr
  277                      | variable . "^= (T_XOR_EQUAL)" expr
  278                      | variable . "<<= (T_SL_EQUAL)" expr
  279                      | variable . ">>= (T_SR_EQUAL)" expr
  449 r_variable: variable .
  451 rw_variable: variable .

    '='                    décalage et aller à l'état 281
    ">>= (T_SR_EQUAL)"     décalage et aller à l'état 282
    "<<= (T_SL_EQUAL)"     décalage et aller à l'état 283
    "^= (T_XOR_EQUAL)"     décalage et aller à l'état 284
    "|= (T_OR_EQUAL)"      décalage et aller à l'état 285
    "&= (T_AND_EQUAL)"     décalage et aller à l'état 286
    "%= (T_MOD_EQUAL)"     décalage et aller à l'état 287
    ".= (T_CONCAT_EQUAL)"  décalage et aller à l'état 288
    "/= (T_DIV_EQUAL)"     décalage et aller à l'état 289
    "*= (T_MUL_EQUAL)"     décalage et aller à l'état 290
    "-= (T_MINUS_EQUAL)"   décalage et aller à l'état 291
    "+= (T_PLUS_EQUAL)"    décalage et aller à l'état 292

    ','           réduction par utilisation de la règle 182 (non_empty_function_call_parameter_list)
    "-- (T_DEC)"  réduction par utilisation de la règle 451 (rw_variable)
    "++ (T_INC)"  réduction par utilisation de la règle 451 (rw_variable)
    ')'           réduction par utilisation de la règle 182 (non_empty_function_call_parameter_list)
    $défaut      réduction par utilisation de la règle 449 (r_variable)


état 722

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  384 fully_qualified_class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  décalage et aller à l'état 239

    $défaut  réduction par utilisation de la règle 384 (fully_qualified_class_name)


état 723

  121 implements_list: "implements (T_IMPLEMENTS)" interface_list .
  123 interface_list: interface_list . ',' fully_qualified_class_name

    ','  décalage et aller à l'état 725

    $défaut  réduction par utilisation de la règle 121 (implements_list)


état 724

  108 unticked_class_declaration_statement: class_entry_type "identifier (T_STRING)" extends_from $@32 implements_list '{' . class_statement_list '}'

    $défaut  réduction par utilisation de la règle 194 (class_statement_list)

    class_statement_list  aller à l'état 779


état 725

  123 interface_list: interface_list ',' . fully_qualified_class_name

    "identifier (T_STRING)"    décalage et aller à l'état 123
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 550
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 551

    namespace_name              aller à l'état 552
    fully_qualified_class_name  aller à l'état 780


état 726

  110 unticked_class_declaration_statement: interface_entry "identifier (T_STRING)" $@33 interface_extends_list '{' class_statement_list . '}'
  193 class_statement_list: class_statement_list . class_statement

    "const (T_CONST)"          décalage et aller à l'état 781
    "use (T_USE)"              décalage et aller à l'état 782
    "public (T_PUBLIC)"        décalage et aller à l'état 783
    "protected (T_PROTECTED)"  décalage et aller à l'état 784
    "private (T_PRIVATE)"      décalage et aller à l'état 785
    "final (T_FINAL)"          décalage et aller à l'état 786
    "abstract (T_ABSTRACT)"    décalage et aller à l'état 787
    "static (T_STATIC)"        décalage et aller à l'état 788
    "var (T_VAR)"              décalage et aller à l'état 789
    '}'                        décalage et aller à l'état 790

    $défaut  réduction par utilisation de la règle 226 (method_modifiers)

    class_statement             aller à l'état 791
    trait_use_statement         aller à l'état 792
    variable_modifiers          aller à l'état 793
    method_modifiers            aller à l'état 794
    non_empty_member_modifiers  aller à l'état 795
    member_modifier             aller à l'état 796
    class_constant_declaration  aller à l'état 797


état 727

  106 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" $@31 '(' parameter_list . ')' '{' inner_statement_list '}'

    ')'  décalage et aller à l'état 798


état 728

  344 expr_without_variable: function is_reference @56 '(' parameter_list ')' . lexical_vars '{' inner_statement_list '}'

    "use (T_USE)"  décalage et aller à l'état 799

    $défaut  réduction par utilisation de la règle 357 (lexical_vars)

    lexical_vars  aller à l'état 800


état 729

  167 non_empty_parameter_list: non_empty_parameter_list ',' . optional_class_type "variable (T_VARIABLE)"
  168                         | non_empty_parameter_list ',' . optional_class_type '&' "variable (T_VARIABLE)"
  169                         | non_empty_parameter_list ',' . optional_class_type '&' "variable (T_VARIABLE)" '=' static_scalar
  170                         | non_empty_parameter_list ',' . optional_class_type "variable (T_VARIABLE)" '=' static_scalar

    "identifier (T_STRING)"    décalage et aller à l'état 123
    "array (T_ARRAY)"          décalage et aller à l'état 649
    "callable (T_CALLABLE)"    décalage et aller à l'état 650
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 550
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 551

    $défaut  réduction par utilisation de la règle 171 (optional_class_type)

    namespace_name              aller à l'état 552
    optional_class_type         aller à l'état 801
    fully_qualified_class_name  aller à l'état 654


état 730

  164 non_empty_parameter_list: optional_class_type '&' . "variable (T_VARIABLE)"
  165                         | optional_class_type '&' . "variable (T_VARIABLE)" '=' static_scalar

    "variable (T_VARIABLE)"  décalage et aller à l'état 802


état 731

  163 non_empty_parameter_list: optional_class_type "variable (T_VARIABLE)" .
  166                         | optional_class_type "variable (T_VARIABLE)" . '=' static_scalar

    '='  décalage et aller à l'état 803

    $défaut  réduction par utilisation de la règle 163 (non_empty_parameter_list)


état 732

  323 expr_without_variable: expr '?' $@52 expr ':' $@53 . expr

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 804
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 733

  267 expr_without_variable: variable '=' '&' "new (T_NEW)" class_name_reference $@46 . ctor_arguments

    '('  décalage et aller à l'état 395

    $défaut  réduction par utilisation de la règle 401 (ctor_arguments)

    function_call_parameter_list  aller à l'état 472
    ctor_arguments                aller à l'état 805


état 734

  460 array_method_dereference: array_method_dereference . '[' dim_offset ']'
  465 method_or_not: array_method_dereference .

    '['  décalage et aller à l'état 806

    $défaut  réduction par utilisation de la règle 465 (method_or_not)


état 735

  461 array_method_dereference: method . '[' dim_offset ']'
  464 method_or_not: method .

    '['  décalage et aller à l'état 807

    $défaut  réduction par utilisation de la règle 464 (method_or_not)


état 736

  463 method: @71 . function_call_parameter_list

    '('  décalage et aller à l'état 395

    function_call_parameter_list  aller à l'état 808


état 737

  454 variable: base_variable_with_function_calls "-> (T_OBJECT_OPERATOR)" $@68 object_property $@69 method_or_not . variable_properties

    $défaut  réduction par utilisation de la règle 457 (variable_properties)

    variable_properties  aller à l'état 809


état 738

  491 object_dim_list: object_dim_list '[' dim_offset . ']'

    ']'  décalage et aller à l'état 810


état 739

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  492 object_dim_list: object_dim_list '{' expr . '}'

    "or (T_LOGICAL_OR)"           décalage et aller à l'état 252
    "xor (T_LOGICAL_XOR)"         décalage et aller à l'état 253
    "and (T_LOGICAL_AND)"         décalage et aller à l'état 254
    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277
    '}'                           décalage et aller à l'état 811


état 740

  510 non_empty_array_pair_list: non_empty_array_pair_list ',' expr "=> (T_DOUBLE_ARROW)" '&' w_variable .

    $défaut  réduction par utilisation de la règle 510 (non_empty_array_pair_list)


état 741

  390 dynamic_class_name_reference: base_variable "-> (T_OBJECT_OPERATOR)" $@66 object_property $@67 dynamic_class_name_variable_properties .
  392 dynamic_class_name_variable_properties: dynamic_class_name_variable_properties . dynamic_class_name_variable_property

    "-> (T_OBJECT_OPERATOR)"  décalage et aller à l'état 812

    $défaut  réduction par utilisation de la règle 390 (dynamic_class_name_reference)

    dynamic_class_name_variable_property  aller à l'état 813


état 742

   41 unticked_statement: "if (T_IF)" parenthesis_expr ':' $@7 inner_statement_list $@8 new_elseif_list . new_else_single "endif (T_ENDIF)" ';'
  156 new_elseif_list: new_elseif_list . "elseif (T_ELSEIF)" parenthesis_expr ':' $@38 inner_statement_list

    "elseif (T_ELSEIF)"  décalage et aller à l'état 814
    "else (T_ELSE)"      décalage et aller à l'état 815

    $défaut  réduction par utilisation de la règle 159 (new_else_single)

    new_else_single  aller à l'état 816


état 743

  153 elseif_list: elseif_list "elseif (T_ELSEIF)" . parenthesis_expr $@37 statement

    '('  décalage et aller à l'état 175

    parenthesis_expr  aller à l'état 817


état 744

  158 else_single: "else (T_ELSE)" . statement

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 11
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "if (T_IF)"                                   décalage et aller à l'état 30
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 33
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    T_INLINE_HTML                                 décalage et aller à l'état 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "echo (T_ECHO)"                               décalage et aller à l'état 38
    "do (T_DO)"                                   décalage et aller à l'état 39
    "while (T_WHILE)"                             décalage et aller à l'état 40
    "for (T_FOR)"                                 décalage et aller à l'état 41
    "foreach (T_FOREACH)"                         décalage et aller à l'état 42
    "declare (T_DECLARE)"                         décalage et aller à l'état 43
    "switch (T_SWITCH)"                           décalage et aller à l'état 44
    "break (T_BREAK)"                             décalage et aller à l'état 45
    "continue (T_CONTINUE)"                       décalage et aller à l'état 46
    "goto (T_GOTO)"                               décalage et aller à l'état 47
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "return (T_RETURN)"                           décalage et aller à l'état 50
    "try (T_TRY)"                                 décalage et aller à l'état 51
    "throw (T_THROW)"                             décalage et aller à l'état 52
    "global (T_GLOBAL)"                           décalage et aller à l'état 54
    "static (T_STATIC)"                           décalage et aller à l'état 57
    "unset (T_UNSET)"                             décalage et aller à l'état 58
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    ';'                                           décalage et aller à l'état 79
    '{'                                           décalage et aller à l'état 80
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    statement                          aller à l'état 818
    unticked_statement                 aller à l'état 88
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    yield_expr                         aller à l'état 97
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 105
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 745

   38 unticked_statement: "if (T_IF)" parenthesis_expr $@5 statement $@6 elseif_list else_single .

    $défaut  réduction par utilisation de la règle 38 (unticked_statement)


état 746

   47 unticked_statement: "do (T_DO)" $@11 statement "while (T_WHILE)" $@12 parenthesis_expr ';' .

    $défaut  réduction par utilisation de la règle 47 (unticked_statement)


état 747

  150 while_statement: ':' inner_statement_list "endwhile (T_ENDWHILE)" . ';'

    ';'  décalage et aller à l'état 819


état 748

   51 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@13 for_expr ';' . $@14 for_expr ')' $@15 for_statement

    $défaut  réduction par utilisation de la règle 49 ($@14)

    $@14  aller à l'état 820


état 749

  127 foreach_variable: '&' variable .

    $défaut  réduction par utilisation de la règle 127 (foreach_variable)


état 750

  129 foreach_variable: "list (T_LIST)" '(' . $@34 assignment_list ')'

    $défaut  réduction par utilisation de la règle 128 ($@34)

    $@34  aller à l'état 821


état 751

  125 foreach_optional_arg: "=> (T_DOUBLE_ARROW)" . foreach_variable

    '&'                        décalage et aller à l'état 677
    "identifier (T_STRING)"    décalage et aller à l'état 123
    "variable (T_VARIABLE)"    décalage et aller à l'état 35
    "static (T_STATIC)"        décalage et aller à l'état 148
    "list (T_LIST)"            décalage et aller à l'état 678
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 149
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 150
    '$'                        décalage et aller à l'état 81

    namespace_name                     aller à l'état 151
    foreach_variable                   aller à l'état 822
    function_call                      aller à l'état 101
    class_name                         aller à l'état 152
    variable                           aller à l'état 680
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 155
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118


état 752

   73 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable "as (T_AS)" $@19 foreach_variable foreach_optional_arg . ')' $@20 foreach_statement

    ')'  décalage et aller à l'état 823


état 753

   70 unticked_statement: "foreach (T_FOREACH)" '(' variable "as (T_AS)" $@17 foreach_variable foreach_optional_arg . ')' $@18 foreach_statement

    ')'  décalage et aller à l'état 824


état 754

  137 declare_list: declare_list ',' "identifier (T_STRING)" '=' . static_scalar

    '+'                                           décalage et aller à l'état 491
    '-'                                           décalage et aller à l'état 492
    '['                                           décalage et aller à l'état 493
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 494
    "static (T_STATIC)"                           décalage et aller à l'état 148
    "array (T_ARRAY)"                             décalage et aller à l'état 495
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 496
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 497
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 498
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 499

    namespace_name            aller à l'état 500
    class_name                aller à l'état 501
    common_scalar             aller à l'état 502
    static_scalar             aller à l'état 825
    static_class_constant     aller à l'état 504
    static_class_name_scalar  aller à l'état 505


état 755

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  135 declare_statement: ':' inner_statement_list . "enddeclare (T_ENDDECLARE)" ';'

    "enddeclare (T_ENDDECLARE)"  décalage et aller à l'état 826

    $défaut  réduction par utilisation de la règle 26 ($@4)

    $@4  aller à l'état 390


état 756

  141 switch_case_list: ':' ';' case_list "endswitch (T_ENDSWITCH)" . ';'

    ';'  décalage et aller à l'état 827


état 757

  140 switch_case_list: ':' case_list "endswitch (T_ENDSWITCH)" ';' .

    $défaut  réduction par utilisation de la règle 140 (switch_case_list)


état 758

  144 case_list: case_list "case (T_CASE)" expr . case_separator $@35 inner_statement_list
  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "or (T_LOGICAL_OR)"           décalage et aller à l'état 252
    "xor (T_LOGICAL_XOR)"         décalage et aller à l'état 253
    "and (T_LOGICAL_AND)"         décalage et aller à l'état 254
    '?'                           décalage et aller à l'état 255
    ':'                           décalage et aller à l'état 759
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277
    ';'                           décalage et aller à l'état 760

    case_separator  aller à l'état 828


état 759

  147 case_separator: ':' .

    $défaut  réduction par utilisation de la règle 147 (case_separator)


état 760

  148 case_separator: ';' .

    $défaut  réduction par utilisation de la règle 148 (case_separator)


état 761

  146 case_list: case_list "default (T_DEFAULT)" case_separator . $@36 inner_statement_list

    $défaut  réduction par utilisation de la règle 145 ($@36)

    $@36  aller à l'état 829


état 762

  139 switch_case_list: '{' ';' case_list '}' .

    $défaut  réduction par utilisation de la règle 139 (switch_case_list)


état 763

  443 non_empty_static_array_pair_list: static_scalar "=> (T_DOUBLE_ARROW)" static_scalar .

    $défaut  réduction par utilisation de la règle 443 (non_empty_static_array_pair_list)


état 764

  441 non_empty_static_array_pair_list: non_empty_static_array_pair_list ',' static_scalar . "=> (T_DOUBLE_ARROW)" static_scalar
  442                                 | non_empty_static_array_pair_list ',' static_scalar .

    "=> (T_DOUBLE_ARROW)"  décalage et aller à l'état 830

    $défaut  réduction par utilisation de la règle 442 (non_empty_static_array_pair_list)


état 765

  422 static_scalar: "array (T_ARRAY)" '(' static_array_pair_list ')' .

    $défaut  réduction par utilisation de la règle 422 (static_scalar)


état 766

   87 catch_statement: "catch (T_CATCH)" '(' . $@24 fully_qualified_class_name $@25 "variable (T_VARIABLE)" ')' $@26 '{' inner_statement_list '}' $@27 additional_catches

    $défaut  réduction par utilisation de la règle 83 ($@24)

    $@24  aller à l'état 831


état 767

   79 unticked_statement: "try (T_TRY)" $@22 '{' inner_statement_list '}' catch_statement $@23 . finally_statement

    "finally (T_FINALLY)"  décalage et aller à l'état 832

    $défaut  réduction par utilisation de la règle 88 (finally_statement)

    finally_statement  aller à l'état 833


état 768

  346 expr_without_variable: "static (T_STATIC)" function is_reference @57 '(' parameter_list ')' . lexical_vars '{' inner_statement_list '}'

    "use (T_USE)"  décalage et aller à l'état 799

    $défaut  réduction par utilisation de la règle 357 (lexical_vars)

    lexical_vars  aller à l'état 834


état 769

  498 assignment_list: assignment_list . ',' assignment_list_element
  502 assignment_list_element: "list (T_LIST)" '(' $@74 assignment_list . ')'

    ','  décalage et aller à l'état 623
    ')'  décalage et aller à l'état 835


état 770

  263 expr_without_variable: "list (T_LIST)" '(' $@45 assignment_list ')' '=' expr .
  285                      | expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '?'                           décalage et aller à l'état 255
    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 263 (expr_without_variable)


état 771

  523 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" '[' expr ']' '}' .

    $défaut  réduction par utilisation de la règle 523 (encaps_var)


état 772

  252 chaining_dereference: '[' dim_offset . ']'

    ']'  décalage et aller à l'état 836


état 773

  459 variable_property: "-> (T_OBJECT_OPERATOR)" object_property . $@70 method_or_not

    $défaut  réduction par utilisation de la règle 458 ($@70)

    $@70  aller à l'état 837


état 774

  249 chaining_method_or_property: chaining_method_or_property variable_property .

    $défaut  réduction par utilisation de la règle 249 (chaining_method_or_property)


état 775

  251 chaining_dereference: chaining_dereference '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    $défaut  réduction par utilisation de la règle 486 (dim_offset)

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 325
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    dim_offset                         aller à l'état 838
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 776

  254 chaining_instance_call: chaining_dereference $@42 . chaining_method_or_property

    "-> (T_OBJECT_OPERATOR)"  décalage et aller à l'état 713

    chaining_method_or_property  aller à l'état 839
    variable_property            aller à l'état 717


état 777

   32 inner_statement: "__halt_compiler (T_HALT_COMPILER)" '(' ')' ';' .

    $défaut  réduction par utilisation de la règle 32 (inner_statement)


état 778

  183 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list ',' '&' w_variable .

    $défaut  réduction par utilisation de la règle 183 (non_empty_function_call_parameter_list)


état 779

  108 unticked_class_declaration_statement: class_entry_type "identifier (T_STRING)" extends_from $@32 implements_list '{' class_statement_list . '}'
  193 class_statement_list: class_statement_list . class_statement

    "const (T_CONST)"          décalage et aller à l'état 781
    "use (T_USE)"              décalage et aller à l'état 782
    "public (T_PUBLIC)"        décalage et aller à l'état 783
    "protected (T_PROTECTED)"  décalage et aller à l'état 784
    "private (T_PRIVATE)"      décalage et aller à l'état 785
    "final (T_FINAL)"          décalage et aller à l'état 786
    "abstract (T_ABSTRACT)"    décalage et aller à l'état 787
    "static (T_STATIC)"        décalage et aller à l'état 788
    "var (T_VAR)"              décalage et aller à l'état 789
    '}'                        décalage et aller à l'état 840

    $défaut  réduction par utilisation de la règle 226 (method_modifiers)

    class_statement             aller à l'état 791
    trait_use_statement         aller à l'état 792
    variable_modifiers          aller à l'état 793
    method_modifiers            aller à l'état 794
    non_empty_member_modifiers  aller à l'état 795
    member_modifier             aller à l'état 796
    class_constant_declaration  aller à l'état 797


état 780

  123 interface_list: interface_list ',' fully_qualified_class_name .

    $défaut  réduction par utilisation de la règle 123 (interface_list)


état 781

  241 class_constant_declaration: "const (T_CONST)" . "identifier (T_STRING)" '=' static_scalar

    "identifier (T_STRING)"  décalage et aller à l'état 841


état 782

  201 trait_use_statement: "use (T_USE)" . trait_list trait_adaptations

    "identifier (T_STRING)"    décalage et aller à l'état 123
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 550
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 551

    namespace_name              aller à l'état 552
    trait_list                  aller à l'état 842
    fully_qualified_class_name  aller à l'état 843


état 783

  230 member_modifier: "public (T_PUBLIC)" .

    $défaut  réduction par utilisation de la règle 230 (member_modifier)


état 784

  231 member_modifier: "protected (T_PROTECTED)" .

    $défaut  réduction par utilisation de la règle 231 (member_modifier)


état 785

  232 member_modifier: "private (T_PRIVATE)" .

    $défaut  réduction par utilisation de la règle 232 (member_modifier)


état 786

  235 member_modifier: "final (T_FINAL)" .

    $défaut  réduction par utilisation de la règle 235 (member_modifier)


état 787

  234 member_modifier: "abstract (T_ABSTRACT)" .

    $défaut  réduction par utilisation de la règle 234 (member_modifier)


état 788

  233 member_modifier: "static (T_STATIC)" .

    $défaut  réduction par utilisation de la règle 233 (member_modifier)


état 789

  225 variable_modifiers: "var (T_VAR)" .

    $défaut  réduction par utilisation de la règle 225 (variable_modifiers)


état 790

  110 unticked_class_declaration_statement: interface_entry "identifier (T_STRING)" $@33 interface_extends_list '{' class_statement_list '}' .

    $défaut  réduction par utilisation de la règle 110 (unticked_class_declaration_statement)


état 791

  193 class_statement_list: class_statement_list class_statement .

    $défaut  réduction par utilisation de la règle 193 (class_statement_list)


état 792

  198 class_statement: trait_use_statement .

    $défaut  réduction par utilisation de la règle 198 (class_statement)


état 793

  196 class_statement: variable_modifiers . $@39 class_variable_declaration ';'

    $défaut  réduction par utilisation de la règle 195 ($@39)

    $@39  aller à l'état 844


état 794

  200 class_statement: method_modifiers . function is_reference "identifier (T_STRING)" $@40 '(' parameter_list ')' method_body

    "function (T_FUNCTION)"  décalage et aller à l'état 48

    function  aller à l'état 845


état 795

  224 variable_modifiers: non_empty_member_modifiers .
  227 method_modifiers: non_empty_member_modifiers .
  229 non_empty_member_modifiers: non_empty_member_modifiers . member_modifier

    "public (T_PUBLIC)"        décalage et aller à l'état 783
    "protected (T_PROTECTED)"  décalage et aller à l'état 784
    "private (T_PRIVATE)"      décalage et aller à l'état 785
    "final (T_FINAL)"          décalage et aller à l'état 786
    "abstract (T_ABSTRACT)"    décalage et aller à l'état 787
    "static (T_STATIC)"        décalage et aller à l'état 788

    "function (T_FUNCTION)"  réduction par utilisation de la règle 227 (method_modifiers)
    $défaut                 réduction par utilisation de la règle 224 (variable_modifiers)

    member_modifier  aller à l'état 846


état 796

  228 non_empty_member_modifiers: member_modifier .

    $défaut  réduction par utilisation de la règle 228 (non_empty_member_modifiers)


état 797

  197 class_statement: class_constant_declaration . ';'
  240 class_constant_declaration: class_constant_declaration . ',' "identifier (T_STRING)" '=' static_scalar

    ','  décalage et aller à l'état 847
    ';'  décalage et aller à l'état 848


état 798

  106 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" $@31 '(' parameter_list ')' . '{' inner_statement_list '}'

    '{'  décalage et aller à l'état 849


état 799

  358 lexical_vars: "use (T_USE)" . '(' lexical_var_list ')'

    '('  décalage et aller à l'état 850


état 800

  344 expr_without_variable: function is_reference @56 '(' parameter_list ')' lexical_vars . '{' inner_statement_list '}'

    '{'  décalage et aller à l'état 851


état 801

  167 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type . "variable (T_VARIABLE)"
  168                         | non_empty_parameter_list ',' optional_class_type . '&' "variable (T_VARIABLE)"
  169                         | non_empty_parameter_list ',' optional_class_type . '&' "variable (T_VARIABLE)" '=' static_scalar
  170                         | non_empty_parameter_list ',' optional_class_type . "variable (T_VARIABLE)" '=' static_scalar

    '&'                      décalage et aller à l'état 852
    "variable (T_VARIABLE)"  décalage et aller à l'état 853


état 802

  164 non_empty_parameter_list: optional_class_type '&' "variable (T_VARIABLE)" .
  165                         | optional_class_type '&' "variable (T_VARIABLE)" . '=' static_scalar

    '='  décalage et aller à l'état 854

    $défaut  réduction par utilisation de la règle 164 (non_empty_parameter_list)


état 803

  166 non_empty_parameter_list: optional_class_type "variable (T_VARIABLE)" '=' . static_scalar

    '+'                                           décalage et aller à l'état 491
    '-'                                           décalage et aller à l'état 492
    '['                                           décalage et aller à l'état 493
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 494
    "static (T_STATIC)"                           décalage et aller à l'état 148
    "array (T_ARRAY)"                             décalage et aller à l'état 495
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 496
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 497
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 498
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 499

    namespace_name            aller à l'état 500
    class_name                aller à l'état 501
    common_scalar             aller à l'état 502
    static_scalar             aller à l'état 855
    static_class_constant     aller à l'état 504
    static_class_name_scalar  aller à l'état 505


état 804

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  323                      | expr '?' $@52 expr ':' $@53 expr .
  325                      | expr . '?' ':' $@54 expr

    "|| (T_BOOLEAN_OR)"           décalage et aller à l'état 256
    "&& (T_BOOLEAN_AND)"          décalage et aller à l'état 257
    '|'                           décalage et aller à l'état 258
    '^'                           décalage et aller à l'état 259
    '&'                           décalage et aller à l'état 260
    "!== (T_IS_NOT_IDENTICAL)"    décalage et aller à l'état 261
    "=== (T_IS_IDENTICAL)"        décalage et aller à l'état 262
    "!= (T_IS_NOT_EQUAL)"         décalage et aller à l'état 263
    "== (T_IS_EQUAL)"             décalage et aller à l'état 264
    '<'                           décalage et aller à l'état 265
    '>'                           décalage et aller à l'état 266
    ">= (T_IS_GREATER_OR_EQUAL)"  décalage et aller à l'état 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  décalage et aller à l'état 268
    ">> (T_SR)"                   décalage et aller à l'état 269
    "<< (T_SL)"                   décalage et aller à l'état 270
    '+'                           décalage et aller à l'état 271
    '-'                           décalage et aller à l'état 272
    '.'                           décalage et aller à l'état 273
    '*'                           décalage et aller à l'état 274
    '/'                           décalage et aller à l'état 275
    '%'                           décalage et aller à l'état 276
    "instanceof (T_INSTANCEOF)"   décalage et aller à l'état 277

    $défaut  réduction par utilisation de la règle 323 (expr_without_variable)


état 805

  267 expr_without_variable: variable '=' '&' "new (T_NEW)" class_name_reference $@46 ctor_arguments .

    $défaut  réduction par utilisation de la règle 267 (expr_without_variable)


état 806

  460 array_method_dereference: array_method_dereference '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    $défaut  réduction par utilisation de la règle 486 (dim_offset)

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 325
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    dim_offset                         aller à l'état 856
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 807

  461 array_method_dereference: method '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    $défaut  réduction par utilisation de la règle 486 (dim_offset)

    namespace_name                     aller à l'état 84
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 325
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    dim_offset                         aller à l'état 857
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 808

  463 method: @71 function_call_parameter_list .

    $défaut  réduction par utilisation de la règle 463 (method)


état 809

  454 variable: base_variable_with_function_calls "-> (T_OBJECT_OPERATOR)" $@68 object_property $@69 method_or_not variable_properties .
  456 variable_properties: variable_properties . variable_property

    "-> (T_OBJECT_OPERATOR)"  décalage et aller à l'état 713

    $défaut  réduction par utilisation de la règle 454 (variable)

    variable_property  aller à l'état 858


état 810

  491 object_dim_list: object_dim_list '[' dim_offset ']' .

    $défaut  réduction par utilisation de la règle 491 (object_dim_list)


état 811

  492 object_dim_list: object_dim_list '{' expr '}' .

    $défaut  réduction par utilisation de la règle 492 (object_dim_list)


état 812

  394 dynamic_class_name_variable_property: "-> (T_OBJECT_OPERATOR)" . object_property

    "identifier (T_STRING)"  décalage et aller à l'état 465
    "variable (T_VARIABLE)"  décalage et aller à l'état 35
    '{'                      décalage et aller à l'état 408
    '$'                      décalage et aller à l'état 81

    variable_without_objects   aller à l'état 577
    reference_variable         aller à l'état 410
    compound_variable          aller à l'état 117
    object_property            aller à l'état 859
    object_dim_list            aller à l'état 579
    variable_name              aller à l'état 580
    simple_indirect_reference  aller à l'état 412


état 813

  392 dynamic_class_name_variable_properties: dynamic_class_name_variable_properties dynamic_class_name_variable_property .

    $défaut  réduction par utilisation de la règle 392 (dynamic_class_name_variable_properties)


état 814

  156 new_elseif_list: new_elseif_list "elseif (T_ELSEIF)" . parenthesis_expr ':' $@38 inner_statement_list

    '('  décalage et aller à l'état 175

    parenthesis_expr  aller à l'état 860


état 815

  160 new_else_single: "else (T_ELSE)" . ':' inner_statement_list

    ':'  décalage et aller à l'état 861


état 816

   41 unticked_statement: "if (T_IF)" parenthesis_expr ':' $@7 inner_statement_list $@8 new_elseif_list new_else_single . "endif (T_ENDIF)" ';'

    "endif (T_ENDIF)"  décalage et aller à l'état 862


état 817

  153 elseif_list: elseif_list "elseif (T_ELSEIF)" parenthesis_expr . $@37 statement

    $défaut  réduction par utilisation de la règle 152 ($@37)

    $@37  aller à l'état 863


état 818

  158 else_single: "else (T_ELSE)" statement .

    $défaut  réduction par utilisation de la règle 158 (else_single)


état 819

  150 while_statement: ':' inner_statement_list "endwhile (T_ENDWHILE)" ';' .

    $défaut  réduction par utilisation de la règle 150 (while_statement)


état 820

   51 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@13 for_expr ';' $@14 . for_expr ')' $@15 for_statement

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 122
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "static (T_STATIC)"                           décalage et aller à l'état 124
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    $défaut  réduction par utilisation de la règle 244 (for_expr)

    namespace_name                     aller à l'état 84
    for_expr                           aller à l'état 864
    non_empty_for_expr                 aller à l'état 332
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 333
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 821

  129 foreach_variable: "list (T_LIST)" '(' $@34 . assignment_list ')'

    "identifier (T_STRING)"    décalage et aller à l'état 123
    "variable (T_VARIABLE)"    décalage et aller à l'état 35
    "static (T_STATIC)"        décalage et aller à l'état 148
    "list (T_LIST)"            décalage et aller à l'état 522
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 149
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 150
    '$'                        décalage et aller à l'état 81

    $défaut  réduction par utilisation de la règle 503 (assignment_list_element)

    namespace_name                     aller à l'état 151
    function_call                      aller à l'état 101
    class_name                         aller à l'état 152
    variable                           aller à l'état 523
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 155
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    assignment_list                    aller à l'état 865
    assignment_list_element            aller à l'état 525


état 822

  125 foreach_optional_arg: "=> (T_DOUBLE_ARROW)" foreach_variable .

    $défaut  réduction par utilisation de la règle 125 (foreach_optional_arg)


état 823

   73 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable "as (T_AS)" $@19 foreach_variable foreach_optional_arg ')' . $@20 foreach_statement

    $défaut  réduction par utilisation de la règle 72 ($@20)

    $@20  aller à l'état 866


état 824

   70 unticked_statement: "foreach (T_FOREACH)" '(' variable "as (T_AS)" $@17 foreach_variable foreach_optional_arg ')' . $@18 foreach_statement

    $défaut  réduction par utilisation de la règle 69 ($@18)

    $@18  aller à l'état 867


état 825

  137 declare_list: declare_list ',' "identifier (T_STRING)" '=' static_scalar .

    $défaut  réduction par utilisation de la règle 137 (declare_list)


état 826

  135 declare_statement: ':' inner_statement_list "enddeclare (T_ENDDECLARE)" . ';'

    ';'  décalage et aller à l'état 868


état 827

  141 switch_case_list: ':' ';' case_list "endswitch (T_ENDSWITCH)" ';' .

    $défaut  réduction par utilisation de la règle 141 (switch_case_list)


état 828

  144 case_list: case_list "case (T_CASE)" expr case_separator . $@35 inner_statement_list

    $défaut  réduction par utilisation de la règle 143 ($@35)

    $@35  aller à l'état 869


état 829

  146 case_list: case_list "default (T_DEFAULT)" case_separator $@36 . inner_statement_list

    $défaut  réduction par utilisation de la règle 28 (inner_statement_list)

    inner_statement_list  aller à l'état 870


état 830

  441 non_empty_static_array_pair_list: non_empty_static_array_pair_list ',' static_scalar "=> (T_DOUBLE_ARROW)" . static_scalar

    '+'                                           décalage et aller à l'état 491
    '-'                                           décalage et aller à l'état 492
    '['                                           décalage et aller à l'état 493
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 494
    "static (T_STATIC)"                           décalage et aller à l'état 148
    "array (T_ARRAY)"                             décalage et aller à l'état 495
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 496
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 497
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 498
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 499

    namespace_name            aller à l'état 500
    class_name                aller à l'état 501
    common_scalar             aller à l'état 502
    static_scalar             aller à l'état 871
    static_class_constant     aller à l'état 504
    static_class_name_scalar  aller à l'état 505


état 831

   87 catch_statement: "catch (T_CATCH)" '(' $@24 . fully_qualified_class_name $@25 "variable (T_VARIABLE)" ')' $@26 '{' inner_statement_list '}' $@27 additional_catches

    "identifier (T_STRING)"    décalage et aller à l'état 123
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 550
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 551

    namespace_name              aller à l'état 552
    fully_qualified_class_name  aller à l'état 872


état 832

   90 finally_statement: "finally (T_FINALLY)" . $@28 '{' inner_statement_list '}'

    $défaut  réduction par utilisation de la règle 89 ($@28)

    $@28  aller à l'état 873


état 833

   79 unticked_statement: "try (T_TRY)" $@22 '{' inner_statement_list '}' catch_statement $@23 finally_statement .

    $défaut  réduction par utilisation de la règle 79 (unticked_statement)


état 834

  346 expr_without_variable: "static (T_STATIC)" function is_reference @57 '(' parameter_list ')' lexical_vars . '{' inner_statement_list '}'

    '{'  décalage et aller à l'état 874


état 835

  502 assignment_list_element: "list (T_LIST)" '(' $@74 assignment_list ')' .

    $défaut  réduction par utilisation de la règle 502 (assignment_list_element)


état 836

  252 chaining_dereference: '[' dim_offset ']' .

    $défaut  réduction par utilisation de la règle 252 (chaining_dereference)


état 837

  459 variable_property: "-> (T_OBJECT_OPERATOR)" object_property $@70 . method_or_not

    '('       réduction par utilisation de la règle 462 (@71)
    $défaut  réduction par utilisation de la règle 466 (method_or_not)

    array_method_dereference  aller à l'état 734
    method                    aller à l'état 735
    @71                       aller à l'état 736
    method_or_not             aller à l'état 875


état 838

  251 chaining_dereference: chaining_dereference '[' dim_offset . ']'

    ']'  décalage et aller à l'état 876


état 839

  249 chaining_method_or_property: chaining_method_or_property . variable_property
  254 chaining_instance_call: chaining_dereference $@42 chaining_method_or_property .

    "-> (T_OBJECT_OPERATOR)"  décalage et aller à l'état 713

    $défaut  réduction par utilisation de la règle 254 (chaining_instance_call)

    variable_property  aller à l'état 774


état 840

  108 unticked_class_declaration_statement: class_entry_type "identifier (T_STRING)" extends_from $@32 implements_list '{' class_statement_list '}' .

    $défaut  réduction par utilisation de la règle 108 (unticked_class_declaration_statement)


état 841

  241 class_constant_declaration: "const (T_CONST)" "identifier (T_STRING)" . '=' static_scalar

    '='  décalage et aller à l'état 877


état 842

  201 trait_use_statement: "use (T_USE)" trait_list . trait_adaptations
  203 trait_list: trait_list . ',' fully_qualified_class_name

    ','  décalage et aller à l'état 878
    ';'  décalage et aller à l'état 879
    '{'  décalage et aller à l'état 880

    trait_adaptations  aller à l'état 881


état 843

  202 trait_list: fully_qualified_class_name .

    $défaut  réduction par utilisation de la règle 202 (trait_list)


état 844

  196 class_statement: variable_modifiers $@39 . class_variable_declaration ';'

    "variable (T_VARIABLE)"  décalage et aller à l'état 882

    class_variable_declaration  aller à l'état 883


état 845

  200 class_statement: method_modifiers function . is_reference "identifier (T_STRING)" $@40 '(' parameter_list ')' method_body

    '&'  décalage et aller à l'état 248

    $défaut  réduction par utilisation de la règle 103 (is_reference)

    is_reference  aller à l'état 884


état 846

  229 non_empty_member_modifiers: non_empty_member_modifiers member_modifier .

    $défaut  réduction par utilisation de la règle 229 (non_empty_member_modifiers)


état 847

  240 class_constant_declaration: class_constant_declaration ',' . "identifier (T_STRING)" '=' static_scalar

    "identifier (T_STRING)"  décalage et aller à l'état 885


état 848

  197 class_statement: class_constant_declaration ';' .

    $défaut  réduction par utilisation de la règle 197 (class_statement)


état 849

  106 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" $@31 '(' parameter_list ')' '{' . inner_statement_list '}'

    $défaut  réduction par utilisation de la règle 28 (inner_statement_list)

    inner_statement_list  aller à l'état 886


état 850

  358 lexical_vars: "use (T_USE)" '(' . lexical_var_list ')'

    '&'                      décalage et aller à l'état 887
    "variable (T_VARIABLE)"  décalage et aller à l'état 888

    lexical_var_list  aller à l'état 889


état 851

  344 expr_without_variable: function is_reference @56 '(' parameter_list ')' lexical_vars '{' . inner_statement_list '}'

    $défaut  réduction par utilisation de la règle 28 (inner_statement_list)

    inner_statement_list  aller à l'état 890


état 852

  168 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type '&' . "variable (T_VARIABLE)"
  169                         | non_empty_parameter_list ',' optional_class_type '&' . "variable (T_VARIABLE)" '=' static_scalar

    "variable (T_VARIABLE)"  décalage et aller à l'état 891


état 853

  167 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type "variable (T_VARIABLE)" .
  170                         | non_empty_parameter_list ',' optional_class_type "variable (T_VARIABLE)" . '=' static_scalar

    '='  décalage et aller à l'état 892

    $défaut  réduction par utilisation de la règle 167 (non_empty_parameter_list)


état 854

  165 non_empty_parameter_list: optional_class_type '&' "variable (T_VARIABLE)" '=' . static_scalar

    '+'                                           décalage et aller à l'état 491
    '-'                                           décalage et aller à l'état 492
    '['                                           décalage et aller à l'état 493
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 494
    "static (T_STATIC)"                           décalage et aller à l'état 148
    "array (T_ARRAY)"                             décalage et aller à l'état 495
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 496
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 497
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 498
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 499

    namespace_name            aller à l'état 500
    class_name                aller à l'état 501
    common_scalar             aller à l'état 502
    static_scalar             aller à l'état 893
    static_class_constant     aller à l'état 504
    static_class_name_scalar  aller à l'état 505


état 855

  166 non_empty_parameter_list: optional_class_type "variable (T_VARIABLE)" '=' static_scalar .

    $défaut  réduction par utilisation de la règle 166 (non_empty_parameter_list)


état 856

  460 array_method_dereference: array_method_dereference '[' dim_offset . ']'

    ']'  décalage et aller à l'état 894


état 857

  461 array_method_dereference: method '[' dim_offset . ']'

    ']'  décalage et aller à l'état 895


état 858

  456 variable_properties: variable_properties variable_property .

    $défaut  réduction par utilisation de la règle 456 (variable_properties)


état 859

  394 dynamic_class_name_variable_property: "-> (T_OBJECT_OPERATOR)" object_property .

    $défaut  réduction par utilisation de la règle 394 (dynamic_class_name_variable_property)


état 860

  156 new_elseif_list: new_elseif_list "elseif (T_ELSEIF)" parenthesis_expr . ':' $@38 inner_statement_list

    ':'  décalage et aller à l'état 896


état 861

  160 new_else_single: "else (T_ELSE)" ':' . inner_statement_list

    $défaut  réduction par utilisation de la règle 28 (inner_statement_list)

    inner_statement_list  aller à l'état 897


état 862

   41 unticked_statement: "if (T_IF)" parenthesis_expr ':' $@7 inner_statement_list $@8 new_elseif_list new_else_single "endif (T_ENDIF)" . ';'

    ';'  décalage et aller à l'état 898


état 863

  153 elseif_list: elseif_list "elseif (T_ELSEIF)" parenthesis_expr $@37 . statement

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 11
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "if (T_IF)"                                   décalage et aller à l'état 30
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 33
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    T_INLINE_HTML                                 décalage et aller à l'état 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "echo (T_ECHO)"                               décalage et aller à l'état 38
    "do (T_DO)"                                   décalage et aller à l'état 39
    "while (T_WHILE)"                             décalage et aller à l'état 40
    "for (T_FOR)"                                 décalage et aller à l'état 41
    "foreach (T_FOREACH)"                         décalage et aller à l'état 42
    "declare (T_DECLARE)"                         décalage et aller à l'état 43
    "switch (T_SWITCH)"                           décalage et aller à l'état 44
    "break (T_BREAK)"                             décalage et aller à l'état 45
    "continue (T_CONTINUE)"                       décalage et aller à l'état 46
    "goto (T_GOTO)"                               décalage et aller à l'état 47
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "return (T_RETURN)"                           décalage et aller à l'état 50
    "try (T_TRY)"                                 décalage et aller à l'état 51
    "throw (T_THROW)"                             décalage et aller à l'état 52
    "global (T_GLOBAL)"                           décalage et aller à l'état 54
    "static (T_STATIC)"                           décalage et aller à l'état 57
    "unset (T_UNSET)"                             décalage et aller à l'état 58
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    ';'                                           décalage et aller à l'état 79
    '{'                                           décalage et aller à l'état 80
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    statement                          aller à l'état 899
    unticked_statement                 aller à l'état 88
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    yield_expr                         aller à l'état 97
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 105
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 864

   51 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@13 for_expr ';' $@14 for_expr . ')' $@15 for_statement

    ')'  décalage et aller à l'état 900


état 865

  129 foreach_variable: "list (T_LIST)" '(' $@34 assignment_list . ')'
  498 assignment_list: assignment_list . ',' assignment_list_element

    ','  décalage et aller à l'état 623
    ')'  décalage et aller à l'état 901


état 866

   73 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable "as (T_AS)" $@19 foreach_variable foreach_optional_arg ')' $@20 . foreach_statement

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 11
    ':'                                           décalage et aller à l'état 902
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "if (T_IF)"                                   décalage et aller à l'état 30
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 33
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    T_INLINE_HTML                                 décalage et aller à l'état 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "echo (T_ECHO)"                               décalage et aller à l'état 38
    "do (T_DO)"                                   décalage et aller à l'état 39
    "while (T_WHILE)"                             décalage et aller à l'état 40
    "for (T_FOR)"                                 décalage et aller à l'état 41
    "foreach (T_FOREACH)"                         décalage et aller à l'état 42
    "declare (T_DECLARE)"                         décalage et aller à l'état 43
    "switch (T_SWITCH)"                           décalage et aller à l'état 44
    "break (T_BREAK)"                             décalage et aller à l'état 45
    "continue (T_CONTINUE)"                       décalage et aller à l'état 46
    "goto (T_GOTO)"                               décalage et aller à l'état 47
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "return (T_RETURN)"                           décalage et aller à l'état 50
    "try (T_TRY)"                                 décalage et aller à l'état 51
    "throw (T_THROW)"                             décalage et aller à l'état 52
    "global (T_GLOBAL)"                           décalage et aller à l'état 54
    "static (T_STATIC)"                           décalage et aller à l'état 57
    "unset (T_UNSET)"                             décalage et aller à l'état 58
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    ';'                                           décalage et aller à l'état 79
    '{'                                           décalage et aller à l'état 80
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    statement                          aller à l'état 903
    unticked_statement                 aller à l'état 88
    foreach_statement                  aller à l'état 904
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    yield_expr                         aller à l'état 97
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 105
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 867

   70 unticked_statement: "foreach (T_FOREACH)" '(' variable "as (T_AS)" $@17 foreach_variable foreach_optional_arg ')' $@18 . foreach_statement

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 11
    ':'                                           décalage et aller à l'état 902
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "if (T_IF)"                                   décalage et aller à l'état 30
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 33
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    T_INLINE_HTML                                 décalage et aller à l'état 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "echo (T_ECHO)"                               décalage et aller à l'état 38
    "do (T_DO)"                                   décalage et aller à l'état 39
    "while (T_WHILE)"                             décalage et aller à l'état 40
    "for (T_FOR)"                                 décalage et aller à l'état 41
    "foreach (T_FOREACH)"                         décalage et aller à l'état 42
    "declare (T_DECLARE)"                         décalage et aller à l'état 43
    "switch (T_SWITCH)"                           décalage et aller à l'état 44
    "break (T_BREAK)"                             décalage et aller à l'état 45
    "continue (T_CONTINUE)"                       décalage et aller à l'état 46
    "goto (T_GOTO)"                               décalage et aller à l'état 47
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "return (T_RETURN)"                           décalage et aller à l'état 50
    "try (T_TRY)"                                 décalage et aller à l'état 51
    "throw (T_THROW)"                             décalage et aller à l'état 52
    "global (T_GLOBAL)"                           décalage et aller à l'état 54
    "static (T_STATIC)"                           décalage et aller à l'état 57
    "unset (T_UNSET)"                             décalage et aller à l'état 58
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    ';'                                           décalage et aller à l'état 79
    '{'                                           décalage et aller à l'état 80
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    statement                          aller à l'état 903
    unticked_statement                 aller à l'état 88
    foreach_statement                  aller à l'état 905
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    yield_expr                         aller à l'état 97
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 105
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 868

  135 declare_statement: ':' inner_statement_list "enddeclare (T_ENDDECLARE)" ';' .

    $défaut  réduction par utilisation de la règle 135 (declare_statement)


état 869

  144 case_list: case_list "case (T_CASE)" expr case_separator $@35 . inner_statement_list

    $défaut  réduction par utilisation de la règle 28 (inner_statement_list)

    inner_statement_list  aller à l'état 906


état 870

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  146 case_list: case_list "default (T_DEFAULT)" case_separator $@36 inner_statement_list .

    "endswitch (T_ENDSWITCH)"  réduction par utilisation de la règle 146 (case_list)
    "case (T_CASE)"            réduction par utilisation de la règle 146 (case_list)
    "default (T_DEFAULT)"      réduction par utilisation de la règle 146 (case_list)
    '}'                        réduction par utilisation de la règle 146 (case_list)
    $défaut                   réduction par utilisation de la règle 26 ($@4)

    $@4  aller à l'état 390


état 871

  441 non_empty_static_array_pair_list: non_empty_static_array_pair_list ',' static_scalar "=> (T_DOUBLE_ARROW)" static_scalar .

    $défaut  réduction par utilisation de la règle 441 (non_empty_static_array_pair_list)


état 872

   87 catch_statement: "catch (T_CATCH)" '(' $@24 fully_qualified_class_name . $@25 "variable (T_VARIABLE)" ')' $@26 '{' inner_statement_list '}' $@27 additional_catches

    $défaut  réduction par utilisation de la règle 84 ($@25)

    $@25  aller à l'état 907


état 873

   90 finally_statement: "finally (T_FINALLY)" $@28 . '{' inner_statement_list '}'

    '{'  décalage et aller à l'état 908


état 874

  346 expr_without_variable: "static (T_STATIC)" function is_reference @57 '(' parameter_list ')' lexical_vars '{' . inner_statement_list '}'

    $défaut  réduction par utilisation de la règle 28 (inner_statement_list)

    inner_statement_list  aller à l'état 909


état 875

  459 variable_property: "-> (T_OBJECT_OPERATOR)" object_property $@70 method_or_not .

    $défaut  réduction par utilisation de la règle 459 (variable_property)


état 876

  251 chaining_dereference: chaining_dereference '[' dim_offset ']' .

    $défaut  réduction par utilisation de la règle 251 (chaining_dereference)


état 877

  241 class_constant_declaration: "const (T_CONST)" "identifier (T_STRING)" '=' . static_scalar

    '+'                                           décalage et aller à l'état 491
    '-'                                           décalage et aller à l'état 492
    '['                                           décalage et aller à l'état 493
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 494
    "static (T_STATIC)"                           décalage et aller à l'état 148
    "array (T_ARRAY)"                             décalage et aller à l'état 495
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 496
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 497
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 498
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 499

    namespace_name            aller à l'état 500
    class_name                aller à l'état 501
    common_scalar             aller à l'état 502
    static_scalar             aller à l'état 910
    static_class_constant     aller à l'état 504
    static_class_name_scalar  aller à l'état 505


état 878

  203 trait_list: trait_list ',' . fully_qualified_class_name

    "identifier (T_STRING)"    décalage et aller à l'état 123
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 550
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 551

    namespace_name              aller à l'état 552
    fully_qualified_class_name  aller à l'état 911


état 879

  204 trait_adaptations: ';' .

    $défaut  réduction par utilisation de la règle 204 (trait_adaptations)


état 880

  205 trait_adaptations: '{' . trait_adaptation_list '}'

    "identifier (T_STRING)"    décalage et aller à l'état 912
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 550
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 551

    $défaut  réduction par utilisation de la règle 206 (trait_adaptation_list)

    namespace_name                          aller à l'état 552
    trait_adaptation_list                   aller à l'état 913
    non_empty_trait_adaptation_list         aller à l'état 914
    trait_adaptation_statement              aller à l'état 915
    trait_precedence                        aller à l'état 916
    trait_method_reference                  aller à l'état 917
    trait_method_reference_fully_qualified  aller à l'état 918
    trait_alias                             aller à l'état 919
    fully_qualified_class_name              aller à l'état 920


état 881

  201 trait_use_statement: "use (T_USE)" trait_list trait_adaptations .

    $défaut  réduction par utilisation de la règle 201 (trait_use_statement)


état 882

  238 class_variable_declaration: "variable (T_VARIABLE)" .
  239                           | "variable (T_VARIABLE)" . '=' static_scalar

    '='  décalage et aller à l'état 921

    $défaut  réduction par utilisation de la règle 238 (class_variable_declaration)


état 883

  196 class_statement: variable_modifiers $@39 class_variable_declaration . ';'
  236 class_variable_declaration: class_variable_declaration . ',' "variable (T_VARIABLE)"
  237                           | class_variable_declaration . ',' "variable (T_VARIABLE)" '=' static_scalar

    ','  décalage et aller à l'état 922
    ';'  décalage et aller à l'état 923


état 884

  200 class_statement: method_modifiers function is_reference . "identifier (T_STRING)" $@40 '(' parameter_list ')' method_body

    "identifier (T_STRING)"  décalage et aller à l'état 924


état 885

  240 class_constant_declaration: class_constant_declaration ',' "identifier (T_STRING)" . '=' static_scalar

    '='  décalage et aller à l'état 925


état 886

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  106 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" $@31 '(' parameter_list ')' '{' inner_statement_list . '}'

    '}'  décalage et aller à l'état 926

    $défaut  réduction par utilisation de la règle 26 ($@4)

    $@4  aller à l'état 390


état 887

  362 lexical_var_list: '&' . "variable (T_VARIABLE)"

    "variable (T_VARIABLE)"  décalage et aller à l'état 927


état 888

  361 lexical_var_list: "variable (T_VARIABLE)" .

    $défaut  réduction par utilisation de la règle 361 (lexical_var_list)


état 889

  358 lexical_vars: "use (T_USE)" '(' lexical_var_list . ')'
  359 lexical_var_list: lexical_var_list . ',' "variable (T_VARIABLE)"
  360                 | lexical_var_list . ',' '&' "variable (T_VARIABLE)"

    ','  décalage et aller à l'état 928
    ')'  décalage et aller à l'état 929


état 890

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  344 expr_without_variable: function is_reference @56 '(' parameter_list ')' lexical_vars '{' inner_statement_list . '}'

    '}'  décalage et aller à l'état 930

    $défaut  réduction par utilisation de la règle 26 ($@4)

    $@4  aller à l'état 390


état 891

  168 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type '&' "variable (T_VARIABLE)" .
  169                         | non_empty_parameter_list ',' optional_class_type '&' "variable (T_VARIABLE)" . '=' static_scalar

    '='  décalage et aller à l'état 931

    $défaut  réduction par utilisation de la règle 168 (non_empty_parameter_list)


état 892

  170 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type "variable (T_VARIABLE)" '=' . static_scalar

    '+'                                           décalage et aller à l'état 491
    '-'                                           décalage et aller à l'état 492
    '['                                           décalage et aller à l'état 493
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 494
    "static (T_STATIC)"                           décalage et aller à l'état 148
    "array (T_ARRAY)"                             décalage et aller à l'état 495
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 496
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 497
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 498
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 499

    namespace_name            aller à l'état 500
    class_name                aller à l'état 501
    common_scalar             aller à l'état 502
    static_scalar             aller à l'état 932
    static_class_constant     aller à l'état 504
    static_class_name_scalar  aller à l'état 505


état 893

  165 non_empty_parameter_list: optional_class_type '&' "variable (T_VARIABLE)" '=' static_scalar .

    $défaut  réduction par utilisation de la règle 165 (non_empty_parameter_list)


état 894

  460 array_method_dereference: array_method_dereference '[' dim_offset ']' .

    $défaut  réduction par utilisation de la règle 460 (array_method_dereference)


état 895

  461 array_method_dereference: method '[' dim_offset ']' .

    $défaut  réduction par utilisation de la règle 461 (array_method_dereference)


état 896

  156 new_elseif_list: new_elseif_list "elseif (T_ELSEIF)" parenthesis_expr ':' . $@38 inner_statement_list

    $défaut  réduction par utilisation de la règle 155 ($@38)

    $@38  aller à l'état 933


état 897

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  160 new_else_single: "else (T_ELSE)" ':' inner_statement_list .

    "endif (T_ENDIF)"  réduction par utilisation de la règle 160 (new_else_single)
    $défaut           réduction par utilisation de la règle 26 ($@4)

    $@4  aller à l'état 390


état 898

   41 unticked_statement: "if (T_IF)" parenthesis_expr ':' $@7 inner_statement_list $@8 new_elseif_list new_else_single "endif (T_ENDIF)" ';' .

    $défaut  réduction par utilisation de la règle 41 (unticked_statement)


état 899

  153 elseif_list: elseif_list "elseif (T_ELSEIF)" parenthesis_expr $@37 statement .

    $défaut  réduction par utilisation de la règle 153 (elseif_list)


état 900

   51 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@13 for_expr ';' $@14 for_expr ')' . $@15 for_statement

    $défaut  réduction par utilisation de la règle 50 ($@15)

    $@15  aller à l'état 934


état 901

  129 foreach_variable: "list (T_LIST)" '(' $@34 assignment_list ')' .

    $défaut  réduction par utilisation de la règle 129 (foreach_variable)


état 902

  133 foreach_statement: ':' . inner_statement_list "endforeach (T_ENDFOREACH)" ';'

    $défaut  réduction par utilisation de la règle 28 (inner_statement_list)

    inner_statement_list  aller à l'état 935


état 903

  132 foreach_statement: statement .

    $défaut  réduction par utilisation de la règle 132 (foreach_statement)


état 904

   73 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable "as (T_AS)" $@19 foreach_variable foreach_optional_arg ')' $@20 foreach_statement .

    $défaut  réduction par utilisation de la règle 73 (unticked_statement)


état 905

   70 unticked_statement: "foreach (T_FOREACH)" '(' variable "as (T_AS)" $@17 foreach_variable foreach_optional_arg ')' $@18 foreach_statement .

    $défaut  réduction par utilisation de la règle 70 (unticked_statement)


état 906

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  144 case_list: case_list "case (T_CASE)" expr case_separator $@35 inner_statement_list .

    "endswitch (T_ENDSWITCH)"  réduction par utilisation de la règle 144 (case_list)
    "case (T_CASE)"            réduction par utilisation de la règle 144 (case_list)
    "default (T_DEFAULT)"      réduction par utilisation de la règle 144 (case_list)
    '}'                        réduction par utilisation de la règle 144 (case_list)
    $défaut                   réduction par utilisation de la règle 26 ($@4)

    $@4  aller à l'état 390


état 907

   87 catch_statement: "catch (T_CATCH)" '(' $@24 fully_qualified_class_name $@25 . "variable (T_VARIABLE)" ')' $@26 '{' inner_statement_list '}' $@27 additional_catches

    "variable (T_VARIABLE)"  décalage et aller à l'état 936


état 908

   90 finally_statement: "finally (T_FINALLY)" $@28 '{' . inner_statement_list '}'

    $défaut  réduction par utilisation de la règle 28 (inner_statement_list)

    inner_statement_list  aller à l'état 937


état 909

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  346 expr_without_variable: "static (T_STATIC)" function is_reference @57 '(' parameter_list ')' lexical_vars '{' inner_statement_list . '}'

    '}'  décalage et aller à l'état 938

    $défaut  réduction par utilisation de la règle 26 ($@4)

    $@4  aller à l'état 390


état 910

  241 class_constant_declaration: "const (T_CONST)" "identifier (T_STRING)" '=' static_scalar .

    $défaut  réduction par utilisation de la règle 241 (class_constant_declaration)


état 911

  203 trait_list: trait_list ',' fully_qualified_class_name .

    $défaut  réduction par utilisation de la règle 203 (trait_list)


état 912

    5 namespace_name: "identifier (T_STRING)" .
  215 trait_method_reference: "identifier (T_STRING)" .

    "as (T_AS)"  réduction par utilisation de la règle 215 (trait_method_reference)
    $défaut     réduction par utilisation de la règle 5 (namespace_name)


état 913

  205 trait_adaptations: '{' trait_adaptation_list . '}'

    '}'  décalage et aller à l'état 939


état 914

  207 trait_adaptation_list: non_empty_trait_adaptation_list .
  209 non_empty_trait_adaptation_list: non_empty_trait_adaptation_list . trait_adaptation_statement

    "identifier (T_STRING)"    décalage et aller à l'état 912
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 550
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 551

    $défaut  réduction par utilisation de la règle 207 (trait_adaptation_list)

    namespace_name                          aller à l'état 552
    trait_adaptation_statement              aller à l'état 940
    trait_precedence                        aller à l'état 916
    trait_method_reference                  aller à l'état 917
    trait_method_reference_fully_qualified  aller à l'état 918
    trait_alias                             aller à l'état 919
    fully_qualified_class_name              aller à l'état 920


état 915

  208 non_empty_trait_adaptation_list: trait_adaptation_statement .

    $défaut  réduction par utilisation de la règle 208 (non_empty_trait_adaptation_list)


état 916

  210 trait_adaptation_statement: trait_precedence . ';'

    ';'  décalage et aller à l'état 941


état 917

  218 trait_alias: trait_method_reference . "as (T_AS)" trait_modifiers "identifier (T_STRING)"
  219            | trait_method_reference . "as (T_AS)" member_modifier

    "as (T_AS)"  décalage et aller à l'état 942


état 918

  212 trait_precedence: trait_method_reference_fully_qualified . "insteadof (T_INSTEADOF)" trait_reference_list
  216 trait_method_reference: trait_method_reference_fully_qualified .

    "insteadof (T_INSTEADOF)"  décalage et aller à l'état 943

    $défaut  réduction par utilisation de la règle 216 (trait_method_reference)


état 919

  211 trait_adaptation_statement: trait_alias . ';'

    ';'  décalage et aller à l'état 944


état 920

  217 trait_method_reference_fully_qualified: fully_qualified_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)"

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  décalage et aller à l'état 945


état 921

  239 class_variable_declaration: "variable (T_VARIABLE)" '=' . static_scalar

    '+'                                           décalage et aller à l'état 491
    '-'                                           décalage et aller à l'état 492
    '['                                           décalage et aller à l'état 493
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 494
    "static (T_STATIC)"                           décalage et aller à l'état 148
    "array (T_ARRAY)"                             décalage et aller à l'état 495
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 496
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 497
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 498
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 499

    namespace_name            aller à l'état 500
    class_name                aller à l'état 501
    common_scalar             aller à l'état 502
    static_scalar             aller à l'état 946
    static_class_constant     aller à l'état 504
    static_class_name_scalar  aller à l'état 505


état 922

  236 class_variable_declaration: class_variable_declaration ',' . "variable (T_VARIABLE)"
  237                           | class_variable_declaration ',' . "variable (T_VARIABLE)" '=' static_scalar

    "variable (T_VARIABLE)"  décalage et aller à l'état 947


état 923

  196 class_statement: variable_modifiers $@39 class_variable_declaration ';' .

    $défaut  réduction par utilisation de la règle 196 (class_statement)


état 924

  200 class_statement: method_modifiers function is_reference "identifier (T_STRING)" . $@40 '(' parameter_list ')' method_body

    $défaut  réduction par utilisation de la règle 199 ($@40)

    $@40  aller à l'état 948


état 925

  240 class_constant_declaration: class_constant_declaration ',' "identifier (T_STRING)" '=' . static_scalar

    '+'                                           décalage et aller à l'état 491
    '-'                                           décalage et aller à l'état 492
    '['                                           décalage et aller à l'état 493
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 494
    "static (T_STATIC)"                           décalage et aller à l'état 148
    "array (T_ARRAY)"                             décalage et aller à l'état 495
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 496
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 497
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 498
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 499

    namespace_name            aller à l'état 500
    class_name                aller à l'état 501
    common_scalar             aller à l'état 502
    static_scalar             aller à l'état 949
    static_class_constant     aller à l'état 504
    static_class_name_scalar  aller à l'état 505


état 926

  106 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" $@31 '(' parameter_list ')' '{' inner_statement_list '}' .

    $défaut  réduction par utilisation de la règle 106 (unticked_function_declaration_statement)


état 927

  362 lexical_var_list: '&' "variable (T_VARIABLE)" .

    $défaut  réduction par utilisation de la règle 362 (lexical_var_list)


état 928

  359 lexical_var_list: lexical_var_list ',' . "variable (T_VARIABLE)"
  360                 | lexical_var_list ',' . '&' "variable (T_VARIABLE)"

    '&'                      décalage et aller à l'état 950
    "variable (T_VARIABLE)"  décalage et aller à l'état 951


état 929

  358 lexical_vars: "use (T_USE)" '(' lexical_var_list ')' .

    $défaut  réduction par utilisation de la règle 358 (lexical_vars)


état 930

  344 expr_without_variable: function is_reference @56 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}' .

    $défaut  réduction par utilisation de la règle 344 (expr_without_variable)


état 931

  169 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type '&' "variable (T_VARIABLE)" '=' . static_scalar

    '+'                                           décalage et aller à l'état 491
    '-'                                           décalage et aller à l'état 492
    '['                                           décalage et aller à l'état 493
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 494
    "static (T_STATIC)"                           décalage et aller à l'état 148
    "array (T_ARRAY)"                             décalage et aller à l'état 495
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 496
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 497
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 498
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 499

    namespace_name            aller à l'état 500
    class_name                aller à l'état 501
    common_scalar             aller à l'état 502
    static_scalar             aller à l'état 952
    static_class_constant     aller à l'état 504
    static_class_name_scalar  aller à l'état 505


état 932

  170 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type "variable (T_VARIABLE)" '=' static_scalar .

    $défaut  réduction par utilisation de la règle 170 (non_empty_parameter_list)


état 933

  156 new_elseif_list: new_elseif_list "elseif (T_ELSEIF)" parenthesis_expr ':' $@38 . inner_statement_list

    $défaut  réduction par utilisation de la règle 28 (inner_statement_list)

    inner_statement_list  aller à l'état 953


état 934

   51 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@13 for_expr ';' $@14 for_expr ')' $@15 . for_statement

    "require_once (T_REQUIRE_ONCE)"               décalage et aller à l'état 5
    "require (T_REQUIRE)"                         décalage et aller à l'état 6
    "eval (T_EVAL)"                               décalage et aller à l'état 7
    "include_once (T_INCLUDE_ONCE)"               décalage et aller à l'état 8
    "include (T_INCLUDE)"                         décalage et aller à l'état 9
    "print (T_PRINT)"                             décalage et aller à l'état 10
    "yield (T_YIELD)"                             décalage et aller à l'état 11
    ':'                                           décalage et aller à l'état 954
    '+'                                           décalage et aller à l'état 12
    '-'                                           décalage et aller à l'état 13
    '!'                                           décalage et aller à l'état 14
    '~'                                           décalage et aller à l'état 15
    '@'                                           décalage et aller à l'état 16
    "(unset) (T_UNSET_CAST)"                      décalage et aller à l'état 17
    "(bool) (T_BOOL_CAST)"                        décalage et aller à l'état 18
    "(object) (T_OBJECT_CAST)"                    décalage et aller à l'état 19
    "(array) (T_ARRAY_CAST)"                      décalage et aller à l'état 20
    "(string) (T_STRING_CAST)"                    décalage et aller à l'état 21
    "(double) (T_DOUBLE_CAST)"                    décalage et aller à l'état 22
    "(int) (T_INT_CAST)"                          décalage et aller à l'état 23
    "-- (T_DEC)"                                  décalage et aller à l'état 24
    "++ (T_INC)"                                  décalage et aller à l'état 25
    '['                                           décalage et aller à l'état 26
    "clone (T_CLONE)"                             décalage et aller à l'état 27
    "new (T_NEW)"                                 décalage et aller à l'état 28
    "exit (T_EXIT)"                               décalage et aller à l'état 29
    "if (T_IF)"                                   décalage et aller à l'état 30
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 33
    "variable name (T_STRING_VARNAME)"            décalage et aller à l'état 34
    "variable (T_VARIABLE)"                       décalage et aller à l'état 35
    T_INLINE_HTML                                 décalage et aller à l'état 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 37
    "echo (T_ECHO)"                               décalage et aller à l'état 38
    "do (T_DO)"                                   décalage et aller à l'état 39
    "while (T_WHILE)"                             décalage et aller à l'état 40
    "for (T_FOR)"                                 décalage et aller à l'état 41
    "foreach (T_FOREACH)"                         décalage et aller à l'état 42
    "declare (T_DECLARE)"                         décalage et aller à l'état 43
    "switch (T_SWITCH)"                           décalage et aller à l'état 44
    "break (T_BREAK)"                             décalage et aller à l'état 45
    "continue (T_CONTINUE)"                       décalage et aller à l'état 46
    "goto (T_GOTO)"                               décalage et aller à l'état 47
    "function (T_FUNCTION)"                       décalage et aller à l'état 48
    "return (T_RETURN)"                           décalage et aller à l'état 50
    "try (T_TRY)"                                 décalage et aller à l'état 51
    "throw (T_THROW)"                             décalage et aller à l'état 52
    "global (T_GLOBAL)"                           décalage et aller à l'état 54
    "static (T_STATIC)"                           décalage et aller à l'état 57
    "unset (T_UNSET)"                             décalage et aller à l'état 58
    "isset (T_ISSET)"                             décalage et aller à l'état 59
    "empty (T_EMPTY)"                             décalage et aller à l'état 60
    "list (T_LIST)"                               décalage et aller à l'état 65
    "array (T_ARRAY)"                             décalage et aller à l'état 66
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 67
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 73
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 125
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 77
    '('                                           décalage et aller à l'état 78
    ';'                                           décalage et aller à l'état 79
    '{'                                           décalage et aller à l'état 80
    '$'                                           décalage et aller à l'état 81
    '`'                                           décalage et aller à l'état 82
    '"'                                           décalage et aller à l'état 83

    namespace_name                     aller à l'état 84
    statement                          aller à l'état 955
    unticked_statement                 aller à l'état 88
    for_statement                      aller à l'état 956
    new_expr                           aller à l'état 95
    expr_without_variable              aller à l'état 96
    yield_expr                         aller à l'état 97
    combined_scalar_offset             aller à l'état 98
    combined_scalar                    aller à l'état 99
    function                           aller à l'état 126
    function_call                      aller à l'état 101
    class_name                         aller à l'état 102
    common_scalar                      aller à l'état 103
    scalar                             aller à l'état 104
    expr                               aller à l'état 105
    parenthesis_expr                   aller à l'état 106
    r_variable                         aller à l'état 107
    rw_variable                        aller à l'état 108
    variable                           aller à l'état 109
    variable_without_objects           aller à l'état 110
    static_member                      aller à l'état 111
    variable_class_name                aller à l'état 112
    array_function_dereference         aller à l'état 113
    base_variable_with_function_calls  aller à l'état 114
    base_variable                      aller à l'état 115
    reference_variable                 aller à l'état 116
    compound_variable                  aller à l'état 117
    simple_indirect_reference          aller à l'état 118
    internal_functions_in_yacc         aller à l'état 119
    class_constant                     aller à l'état 120
    class_name_scalar                  aller à l'état 121


état 935

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  133 foreach_statement: ':' inner_statement_list . "endforeach (T_ENDFOREACH)" ';'

    "endforeach (T_ENDFOREACH)"  décalage et aller à l'état 957

    $défaut  réduction par utilisation de la règle 26 ($@4)

    $@4  aller à l'état 390


état 936

   87 catch_statement: "catch (T_CATCH)" '(' $@24 fully_qualified_class_name $@25 "variable (T_VARIABLE)" . ')' $@26 '{' inner_statement_list '}' $@27 additional_catches

    ')'  décalage et aller à l'état 958


état 937

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
   90 finally_statement: "finally (T_FINALLY)" $@28 '{' inner_statement_list . '}'

    '}'  décalage et aller à l'état 959

    $défaut  réduction par utilisation de la règle 26 ($@4)

    $@4  aller à l'état 390


état 938

  346 expr_without_variable: "static (T_STATIC)" function is_reference @57 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}' .

    $défaut  réduction par utilisation de la règle 346 (expr_without_variable)


état 939

  205 trait_adaptations: '{' trait_adaptation_list '}' .

    $défaut  réduction par utilisation de la règle 205 (trait_adaptations)


état 940

  209 non_empty_trait_adaptation_list: non_empty_trait_adaptation_list trait_adaptation_statement .

    $défaut  réduction par utilisation de la règle 209 (non_empty_trait_adaptation_list)


état 941

  210 trait_adaptation_statement: trait_precedence ';' .

    $défaut  réduction par utilisation de la règle 210 (trait_adaptation_statement)


état 942

  218 trait_alias: trait_method_reference "as (T_AS)" . trait_modifiers "identifier (T_STRING)"
  219            | trait_method_reference "as (T_AS)" . member_modifier

    "public (T_PUBLIC)"        décalage et aller à l'état 783
    "protected (T_PROTECTED)"  décalage et aller à l'état 784
    "private (T_PRIVATE)"      décalage et aller à l'état 785
    "final (T_FINAL)"          décalage et aller à l'état 786
    "abstract (T_ABSTRACT)"    décalage et aller à l'état 787
    "static (T_STATIC)"        décalage et aller à l'état 788

    $défaut  réduction par utilisation de la règle 220 (trait_modifiers)

    trait_modifiers  aller à l'état 960
    member_modifier  aller à l'état 961


état 943

  212 trait_precedence: trait_method_reference_fully_qualified "insteadof (T_INSTEADOF)" . trait_reference_list

    "identifier (T_STRING)"    décalage et aller à l'état 123
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 550
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 551

    namespace_name              aller à l'état 552
    trait_reference_list        aller à l'état 962
    fully_qualified_class_name  aller à l'état 963


état 944

  211 trait_adaptation_statement: trait_alias ';' .

    $défaut  réduction par utilisation de la règle 211 (trait_adaptation_statement)


état 945

  217 trait_method_reference_fully_qualified: fully_qualified_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  décalage et aller à l'état 964


état 946

  239 class_variable_declaration: "variable (T_VARIABLE)" '=' static_scalar .

    $défaut  réduction par utilisation de la règle 239 (class_variable_declaration)


état 947

  236 class_variable_declaration: class_variable_declaration ',' "variable (T_VARIABLE)" .
  237                           | class_variable_declaration ',' "variable (T_VARIABLE)" . '=' static_scalar

    '='  décalage et aller à l'état 965

    $défaut  réduction par utilisation de la règle 236 (class_variable_declaration)


état 948

  200 class_statement: method_modifiers function is_reference "identifier (T_STRING)" $@40 . '(' parameter_list ')' method_body

    '('  décalage et aller à l'état 966


état 949

  240 class_constant_declaration: class_constant_declaration ',' "identifier (T_STRING)" '=' static_scalar .

    $défaut  réduction par utilisation de la règle 240 (class_constant_declaration)


état 950

  360 lexical_var_list: lexical_var_list ',' '&' . "variable (T_VARIABLE)"

    "variable (T_VARIABLE)"  décalage et aller à l'état 967


état 951

  359 lexical_var_list: lexical_var_list ',' "variable (T_VARIABLE)" .

    $défaut  réduction par utilisation de la règle 359 (lexical_var_list)


état 952

  169 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type '&' "variable (T_VARIABLE)" '=' static_scalar .

    $défaut  réduction par utilisation de la règle 169 (non_empty_parameter_list)


état 953

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  156 new_elseif_list: new_elseif_list "elseif (T_ELSEIF)" parenthesis_expr ':' $@38 inner_statement_list .

    "elseif (T_ELSEIF)"  réduction par utilisation de la règle 156 (new_elseif_list)
    "else (T_ELSE)"      réduction par utilisation de la règle 156 (new_elseif_list)
    "endif (T_ENDIF)"    réduction par utilisation de la règle 156 (new_elseif_list)
    $défaut             réduction par utilisation de la règle 26 ($@4)

    $@4  aller à l'état 390


état 954

  131 for_statement: ':' . inner_statement_list "endfor (T_ENDFOR)" ';'

    $défaut  réduction par utilisation de la règle 28 (inner_statement_list)

    inner_statement_list  aller à l'état 968


état 955

  130 for_statement: statement .

    $défaut  réduction par utilisation de la règle 130 (for_statement)


état 956

   51 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@13 for_expr ';' $@14 for_expr ')' $@15 for_statement .

    $défaut  réduction par utilisation de la règle 51 (unticked_statement)


état 957

  133 foreach_statement: ':' inner_statement_list "endforeach (T_ENDFOREACH)" . ';'

    ';'  décalage et aller à l'état 969


état 958

   87 catch_statement: "catch (T_CATCH)" '(' $@24 fully_qualified_class_name $@25 "variable (T_VARIABLE)" ')' . $@26 '{' inner_statement_list '}' $@27 additional_catches

    $défaut  réduction par utilisation de la règle 85 ($@26)

    $@26  aller à l'état 970


état 959

   90 finally_statement: "finally (T_FINALLY)" $@28 '{' inner_statement_list '}' .

    $défaut  réduction par utilisation de la règle 90 (finally_statement)


état 960

  218 trait_alias: trait_method_reference "as (T_AS)" trait_modifiers . "identifier (T_STRING)"

    "identifier (T_STRING)"  décalage et aller à l'état 971


état 961

  219 trait_alias: trait_method_reference "as (T_AS)" member_modifier .
  221 trait_modifiers: member_modifier .

    "identifier (T_STRING)"  réduction par utilisation de la règle 221 (trait_modifiers)
    $défaut                 réduction par utilisation de la règle 219 (trait_alias)


état 962

  212 trait_precedence: trait_method_reference_fully_qualified "insteadof (T_INSTEADOF)" trait_reference_list .
  214 trait_reference_list: trait_reference_list . ',' fully_qualified_class_name

    ','  décalage et aller à l'état 972

    $défaut  réduction par utilisation de la règle 212 (trait_precedence)


état 963

  213 trait_reference_list: fully_qualified_class_name .

    $défaut  réduction par utilisation de la règle 213 (trait_reference_list)


état 964

  217 trait_method_reference_fully_qualified: fully_qualified_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)" .

    $défaut  réduction par utilisation de la règle 217 (trait_method_reference_fully_qualified)


état 965

  237 class_variable_declaration: class_variable_declaration ',' "variable (T_VARIABLE)" '=' . static_scalar

    '+'                                           décalage et aller à l'état 491
    '-'                                           décalage et aller à l'état 492
    '['                                           décalage et aller à l'état 493
    "integer number (T_LNUMBER)"                  décalage et aller à l'état 31
    "floating-point number (T_DNUMBER)"           décalage et aller à l'état 32
    "identifier (T_STRING)"                       décalage et aller à l'état 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  décalage et aller à l'état 494
    "static (T_STATIC)"                           décalage et aller à l'état 148
    "array (T_ARRAY)"                             décalage et aller à l'état 495
    "__CLASS__ (T_CLASS_C)"                       décalage et aller à l'état 496
    "__TRAIT__ (T_TRAIT_C)"                       décalage et aller à l'état 68
    "__METHOD__ (T_METHOD_C)"                     décalage et aller à l'état 69
    "__FUNCTION__ (T_FUNC_C)"                     décalage et aller à l'état 70
    "__LINE__ (T_LINE)"                           décalage et aller à l'état 71
    "__FILE__ (T_FILE)"                           décalage et aller à l'état 72
    "heredoc start (T_START_HEREDOC)"             décalage et aller à l'état 497
    "namespace (T_NAMESPACE)"                     décalage et aller à l'état 498
    "__NAMESPACE__ (T_NS_C)"                      décalage et aller à l'état 75
    "__DIR__ (T_DIR)"                             décalage et aller à l'état 76
    "\\ (T_NS_SEPARATOR)"                         décalage et aller à l'état 499

    namespace_name            aller à l'état 500
    class_name                aller à l'état 501
    common_scalar             aller à l'état 502
    static_scalar             aller à l'état 973
    static_class_constant     aller à l'état 504
    static_class_name_scalar  aller à l'état 505


état 966

  200 class_statement: method_modifiers function is_reference "identifier (T_STRING)" $@40 '(' . parameter_list ')' method_body

    "identifier (T_STRING)"    décalage et aller à l'état 123
    "array (T_ARRAY)"          décalage et aller à l'état 649
    "callable (T_CALLABLE)"    décalage et aller à l'état 650
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 550
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 551

    ')'       réduction par utilisation de la règle 162 (parameter_list)
    $défaut  réduction par utilisation de la règle 171 (optional_class_type)

    namespace_name              aller à l'état 552
    parameter_list              aller à l'état 974
    non_empty_parameter_list    aller à l'état 652
    optional_class_type         aller à l'état 653
    fully_qualified_class_name  aller à l'état 654


état 967

  360 lexical_var_list: lexical_var_list ',' '&' "variable (T_VARIABLE)" .

    $défaut  réduction par utilisation de la règle 360 (lexical_var_list)


état 968

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  131 for_statement: ':' inner_statement_list . "endfor (T_ENDFOR)" ';'

    "endfor (T_ENDFOR)"  décalage et aller à l'état 975

    $défaut  réduction par utilisation de la règle 26 ($@4)

    $@4  aller à l'état 390


état 969

  133 foreach_statement: ':' inner_statement_list "endforeach (T_ENDFOREACH)" ';' .

    $défaut  réduction par utilisation de la règle 133 (foreach_statement)


état 970

   87 catch_statement: "catch (T_CATCH)" '(' $@24 fully_qualified_class_name $@25 "variable (T_VARIABLE)" ')' $@26 . '{' inner_statement_list '}' $@27 additional_catches

    '{'  décalage et aller à l'état 976


état 971

  218 trait_alias: trait_method_reference "as (T_AS)" trait_modifiers "identifier (T_STRING)" .

    $défaut  réduction par utilisation de la règle 218 (trait_alias)


état 972

  214 trait_reference_list: trait_reference_list ',' . fully_qualified_class_name

    "identifier (T_STRING)"    décalage et aller à l'état 123
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 550
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 551

    namespace_name              aller à l'état 552
    fully_qualified_class_name  aller à l'état 977


état 973

  237 class_variable_declaration: class_variable_declaration ',' "variable (T_VARIABLE)" '=' static_scalar .

    $défaut  réduction par utilisation de la règle 237 (class_variable_declaration)


état 974

  200 class_statement: method_modifiers function is_reference "identifier (T_STRING)" $@40 '(' parameter_list . ')' method_body

    ')'  décalage et aller à l'état 978


état 975

  131 for_statement: ':' inner_statement_list "endfor (T_ENDFOR)" . ';'

    ';'  décalage et aller à l'état 979


état 976

   87 catch_statement: "catch (T_CATCH)" '(' $@24 fully_qualified_class_name $@25 "variable (T_VARIABLE)" ')' $@26 '{' . inner_statement_list '}' $@27 additional_catches

    $défaut  réduction par utilisation de la règle 28 (inner_statement_list)

    inner_statement_list  aller à l'état 980


état 977

  214 trait_reference_list: trait_reference_list ',' fully_qualified_class_name .

    $défaut  réduction par utilisation de la règle 214 (trait_reference_list)


état 978

  200 class_statement: method_modifiers function is_reference "identifier (T_STRING)" $@40 '(' parameter_list ')' . method_body

    ';'  décalage et aller à l'état 981
    '{'  décalage et aller à l'état 982

    method_body  aller à l'état 983


état 979

  131 for_statement: ':' inner_statement_list "endfor (T_ENDFOR)" ';' .

    $défaut  réduction par utilisation de la règle 131 (for_statement)


état 980

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
   87 catch_statement: "catch (T_CATCH)" '(' $@24 fully_qualified_class_name $@25 "variable (T_VARIABLE)" ')' $@26 '{' inner_statement_list . '}' $@27 additional_catches

    '}'  décalage et aller à l'état 984

    $défaut  réduction par utilisation de la règle 26 ($@4)

    $@4  aller à l'état 390


état 981

  222 method_body: ';' .

    $défaut  réduction par utilisation de la règle 222 (method_body)


état 982

  223 method_body: '{' . inner_statement_list '}'

    $défaut  réduction par utilisation de la règle 28 (inner_statement_list)

    inner_statement_list  aller à l'état 985


état 983

  200 class_statement: method_modifiers function is_reference "identifier (T_STRING)" $@40 '(' parameter_list ')' method_body .

    $défaut  réduction par utilisation de la règle 200 (class_statement)


état 984

   87 catch_statement: "catch (T_CATCH)" '(' $@24 fully_qualified_class_name $@25 "variable (T_VARIABLE)" ')' $@26 '{' inner_statement_list '}' . $@27 additional_catches

    $défaut  réduction par utilisation de la règle 86 ($@27)

    $@27  aller à l'état 986


état 985

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  223 method_body: '{' inner_statement_list . '}'

    '}'  décalage et aller à l'état 987

    $défaut  réduction par utilisation de la règle 26 ($@4)

    $@4  aller à l'état 390


état 986

   87 catch_statement: "catch (T_CATCH)" '(' $@24 fully_qualified_class_name $@25 "variable (T_VARIABLE)" ')' $@26 '{' inner_statement_list '}' $@27 . additional_catches

    "catch (T_CATCH)"  décalage et aller à l'état 988

    $défaut  réduction par utilisation de la règle 92 (additional_catches)

    additional_catches            aller à l'état 989
    non_empty_additional_catches  aller à l'état 990
    additional_catch              aller à l'état 991


état 987

  223 method_body: '{' inner_statement_list '}' .

    $défaut  réduction par utilisation de la règle 223 (method_body)


état 988

   97 additional_catch: "catch (T_CATCH)" . '(' fully_qualified_class_name @29 "variable (T_VARIABLE)" ')' $@30 '{' inner_statement_list '}'

    '('  décalage et aller à l'état 992


état 989

   87 catch_statement: "catch (T_CATCH)" '(' $@24 fully_qualified_class_name $@25 "variable (T_VARIABLE)" ')' $@26 '{' inner_statement_list '}' $@27 additional_catches .

    $défaut  réduction par utilisation de la règle 87 (catch_statement)


état 990

   91 additional_catches: non_empty_additional_catches .
   94 non_empty_additional_catches: non_empty_additional_catches . additional_catch

    "catch (T_CATCH)"  décalage et aller à l'état 988

    $défaut  réduction par utilisation de la règle 91 (additional_catches)

    additional_catch  aller à l'état 993


état 991

   93 non_empty_additional_catches: additional_catch .

    $défaut  réduction par utilisation de la règle 93 (non_empty_additional_catches)


état 992

   97 additional_catch: "catch (T_CATCH)" '(' . fully_qualified_class_name @29 "variable (T_VARIABLE)" ')' $@30 '{' inner_statement_list '}'

    "identifier (T_STRING)"    décalage et aller à l'état 123
    "namespace (T_NAMESPACE)"  décalage et aller à l'état 550
    "\\ (T_NS_SEPARATOR)"      décalage et aller à l'état 551

    namespace_name              aller à l'état 552
    fully_qualified_class_name  aller à l'état 994


état 993

   94 non_empty_additional_catches: non_empty_additional_catches additional_catch .

    $défaut  réduction par utilisation de la règle 94 (non_empty_additional_catches)


état 994

   97 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name . @29 "variable (T_VARIABLE)" ')' $@30 '{' inner_statement_list '}'

    $défaut  réduction par utilisation de la règle 95 (@29)

    @29  aller à l'état 995


état 995

   97 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name @29 . "variable (T_VARIABLE)" ')' $@30 '{' inner_statement_list '}'

    "variable (T_VARIABLE)"  décalage et aller à l'état 996


état 996

   97 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name @29 "variable (T_VARIABLE)" . ')' $@30 '{' inner_statement_list '}'

    ')'  décalage et aller à l'état 997


état 997

   97 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name @29 "variable (T_VARIABLE)" ')' . $@30 '{' inner_statement_list '}'

    $défaut  réduction par utilisation de la règle 96 ($@30)

    $@30  aller à l'état 998


état 998

   97 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name @29 "variable (T_VARIABLE)" ')' $@30 . '{' inner_statement_list '}'

    '{'  décalage et aller à l'état 999


état 999

   97 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name @29 "variable (T_VARIABLE)" ')' $@30 '{' . inner_statement_list '}'

    $défaut  réduction par utilisation de la règle 28 (inner_statement_list)

    inner_statement_list  aller à l'état 1000


état 1000

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
   97 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name @29 "variable (T_VARIABLE)" ')' $@30 '{' inner_statement_list . '}'

    '}'  décalage et aller à l'état 1001

    $défaut  réduction par utilisation de la règle 26 ($@4)

    $@4  aller à l'état 390


état 1001

   97 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name @29 "variable (T_VARIABLE)" ')' $@30 '{' inner_statement_list '}' .

    $défaut  réduction par utilisation de la règle 97 (additional_catch)
